#!/bin/sh

# Create AnnoMaLy documentation for Isabelle
# See http://martin.von-gagern.net/projects/annomaly/
#   2007  Martin von Gagern (martin@von-gagern.net)

# Abort on any error
set -e -o pipefail

ISABELLE_CVS="$(cd "$HOME/isabelle.cvs"; pwd -P)"
ISABELLE_HOME="$ISABELLE_CVS/Distribution"
HTML_DIR="$HOME/html-data/isabelle-doc"
export CVS_RSH=ssh
export SMLNJ_HOME="$HOME/annomaly"
export PATH="$SMLNJ_HOME/bin:$PATH"
export SML_DOC_DIR="$HTML_DIR.tmp"
export SML_DOC_REWRITE="isabelle=$ISABELLE_CVS"
# export SML_DOC_DEBUG="all"
TARGET=HOL
CVSUP=true

# Parse command line
for ARG in "$@"; do case "$ARG" in
	-p) TARGET=Pure ;;
	-n) CVSUP=false ;;
	-l) export SML_LOG_DIR="$HOME/logs" ;;
esac; done

# Create clean output directory
rm -rf "$SML_DOC_DIR"
mkdir "$SML_DOC_DIR"
cp "$SMLNJ_HOME/annomaly/resources/"* "$SML_DOC_DIR"
cat > "$SML_DOC_DIR/.htaccess" <<EOF
DirectoryIndex index.html source.html
<IfModule mod_deflate>
SetOutputFilter DEFLATE 
</IfModule>
AddType text/plain .dot
EOF

# Update CVS
cd "$ISABELLE_CVS"
if $CVSUP; then
  echo "Updating CVS"
  cvs -q up -d
fi

# Build isabelle
cd "$ISABELLE_HOME"
rm -rf heaps/*
./build -b $TARGET

# Postprocess created files
cd $SML_DOC_DIR
dot -Tsvg depGraph.dot \
  | perl -pe 's/(width|height)="(\d+)/sprintf("%s=\"%.2f",$1,$2*0.6)/ge' \
  > depGraph.svg
dot -Tps2 depGraph.dot > depGraph.ps
ps2pdf depGraph.ps depGraph.pdf
grep -rl "$ISABELLE_HOME" . | xargs sed -i "s@$ISABELLE_HOME@\$ISABELLE_HOME@g"

# Install result by renaming to be almost atomic
rm -rf "$HTML_DIR.bac"
if [[ -d $HTML_DIR ]]; then mv "$HTML_DIR" "$HTML_DIR.bac"; fi
mv "$SML_DOC_DIR" "$HTML_DIR"
rm -rf "$HTML_DIR.bac"

# Done
echo "Completed successfully"
exit 0
