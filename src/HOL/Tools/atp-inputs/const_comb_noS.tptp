%ID: $Id$
%Author: Jia Meng, NICTA
%typed combinator reduction for const-types-only (no S)

%K P Q --> P
input_clause(a1,axiom,
[++equal(hAPP(hAPP(c_COMBK(A,B),P),Q),P)]).

%I P --> P
input_clause(a3,axiom,
[++equal(hAPP(c_COMBI(T),P),P)]).

%B P Q R --> P(Q R)
input_clause(a4,axiom,
[++equal(hAPP(hAPP(hAPP(c_COMBB(A,B,C),P),Q),R),hAPP(P,hAPP(Q,R)))]).


%C P Q R --> P R Q
input_clause(a5,axiom,
[++equal(hAPP(hAPP(hAPP(c_COMBC(A,B,C),P),Q),R),hAPP(hAPP(P,R),Q))]).

input_clause(a6,axiom,
[--hBOOL(hAPP(hAPP(fequal(A),X),Y)),++equal(X,Y)]).

input_clause(a7,axiom,
[++hBOOL(hAPP(hAPP(fequal(A),X),Y)),--equal(X,Y)]).



