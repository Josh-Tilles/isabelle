d89d419269a26cf0f9e2b838b7d86233eeb72c17 2830 0
unsat
((set-logic <null>)
(declare-fun ?v0!14 () Int)
(declare-fun ?v0!15 () Int)
(declare-fun ?v0!13 () Int)
(proof
(let ((?x12534 (* (- 1) v_b_L_H_max_G_3$)))
(let ((?x3680 (b_S_ptr$ b_T_T_u1$ v_b_P_H_arr$)))
(let ((?x3922 (b_S_idx$ ?x3680 v_b_L_H_p_G_0$ b_T_T_u1$)))
(let ((?x3929 (b_S_read_n_u1$ v_b_S_s$ ?x3922)))
(let (($x24191 (<= (+ ?x3929 ?x12534) 0)))
(let (($x3940 (= v_b_L_H_max_G_3$ v_b_L_H_max_G_2$)))
(let ((?x3974 (b_S_idx$ ?x3680 v_b_SL_H_witness_G_1$ b_T_T_u1$)))
(let ((?x3975 (b_S_read_n_u1$ v_b_S_s$ ?x3974)))
(let (($x3976 (= ?x3975 v_b_L_H_max_G_3$)))
(let (($x12550 (<= (+ v_b_P_H_len$ (* (- 1) v_b_SL_H_witness_G_1$)) 0)))
(let (($x20130 (or $x12550 (not $x3976))))
(let (($x20131 (not $x20130)))
(let (($x21049 (forall ((?v0 Int) )(!(let ((?x12534 (* (- 1) v_b_L_H_max_G_3$)))
(let ((?x3765 (b_S_read_n_u1$ v_b_S_s$ (b_S_idx$ (b_S_ptr$ b_T_T_u1$ v_b_P_H_arr$) ?v0 b_T_T_u1$))))
(let (($x12536 (<= (+ ?x3765 ?x12534) 0)))
(let (($x12521 (>= (+ ?v0 (* (- 1) v_b_L_H_p_G_1$)) 0)))
(let (($x14211 (<= ?v0 4294967295)))
(let (($x17271 (not $x14211)))
(let (($x10138 (>= ?v0 0)))
(let (($x10556 (not $x10138)))
(or $x10556 $x17271 $x12521 $x12536))))))))) :pattern ( (b_S_idx$ (b_S_ptr$ b_T_T_u1$ v_b_P_H_arr$) ?v0 b_T_T_u1$) )))
))
(let (($x21057 (or (not $x21049) $x20131)))
(let (($x21060 (not $x21057)))
(let ((?x16374 (b_S_read_n_u1$ v_b_S_s$ (b_S_idx$ ?x3680 ?v0!14 b_T_T_u1$))))
(let ((?x16620 (* (- 1) ?x16374)))
(let (($x16622 (>= (+ v_b_L_H_max_G_3$ ?x16620) 0)))
(let (($x16600 (<= (+ v_b_L_H_p_G_1$ (* (- 1) ?v0!14)) 0)))
(let (($x16367 (<= ?v0!14 4294967295)))
(let (($x20084 (not $x16367)))
(let (($x16366 (>= ?v0!14 0)))
(let (($x20083 (not $x16366)))
(let (($x20099 (or $x20083 $x20084 $x16600 $x16622)))
(let (($x20104 (not $x20099)))
(let (($x21063 (or $x20104 $x21060)))
(let (($x21066 (not $x21063)))
(let (($x12514 (>= (+ v_b_P_H_len$ (* (- 1) v_b_L_H_p_G_1$)) 0)))
(let (($x12518 (not $x12514)))
(let (($x21069 (or $x12518 $x21066)))
(let (($x21072 (not $x21069)))
(let (($x21075 (or $x12518 $x21072)))
(let (($x21078 (not $x21075)))
(let (($x12486 (>= v_b_SL_H_witness_G_1$ 0)))
(let (($x20173 (not $x12486)))
(let (($x3960 (b_S_local_n_value_n_is$ v_b_S_s$ b_H_tok_S_1_T_16_o_24$ b_H_loc_o_p$ v_b_L_H_p_G_1$ b_T_T_u4$)))
(let (($x12500 (= (+ v_b_L_H_p_G_0$ (* (- 1) v_b_L_H_p_G_1$)) (- 1))))
(let (($x20170 (not $x12500)))
(let (($x13856 (<= v_b_L_H_p_G_0$ 4294967294)))
(let (($x16354 (not $x13856)))
(let (($x12494 (>= v_b_L_H_p_G_0$ (- 1))))
(let (($x16351 (not $x12494)))
(let (($x21081 (or $x16351 $x16354 $x20170 (not $x3960) (not (>= v_b_L_H_p_G_1$ 2)) $x20173 $x21078)))
(let (($x21084 (not $x21081)))
(let (($x21087 (or $x16351 $x16354 $x21084)))
(let (($x21090 (not $x21087)))
(let (($x12404 (>= v_b_L_H_p_G_0$ 1)))
(let (($x20190 (not $x12404)))
(let (($x3937 (b_S_local_n_value_n_is$ v_b_S_s$ b_H_tok_S_1_T_24_o_47$ b_H_loc_o_witness$ v_b_L_H_p_G_0$ b_T_T_u4$)))
(let (($x3936 (b_S_local_n_value_n_is$ v_b_S_s$ b_H_tok_S_1_T_23_o_7$ b_H_loc_o_max$ v_b_L_H_max_G_2$ b_T_T_u1$)))
(let (($x3926 (b_S_thread_n_local$ v_b_S_s$ ?x3922)))
(let (($x16339 (not $x3926)))
(let (($x3923 (b_S_is$ ?x3922 b_T_T_u1$)))
(let (($x16330 (not $x3923)))
(let (($x21093 (or $x16330 $x16339 (not (= v_b_L_H_max_G_2$ ?x3929)) (not $x3936) (not $x3937) $x20190 (not $x3940) (not (= v_b_SL_H_witness_G_1$ v_b_L_H_p_G_0$)) $x20173 $x21090)))
(let (($x21096 (not $x21093)))
(let ((?x24124 (b_S_ref$ ?x3922)))
(let ((?x23972 (b_S_ptr$ b_T_T_u1$ ?x24124)))
(let (($x24221 (or (= (b_S_owner$ v_b_S_s$ ?x23972) b_S_me$) (b_S_in_n_wrapped_n_domain$ v_b_S_s$ ?x23972))))
(let (($x24198 (= (b_S_kind_n_of$ (b_S_typ$ ?x23972)) b_S_kind_n_primitive$)))
(let ((?x3874 (b_S_typemap$ v_b_S_s$)))
(let ((?x24200 (b_S_select_o_tm$ ?x3874 ?x23972)))
(let ((?x24203 (b_S_ts_n_emb$ ?x24200)))
(let (($x24212 (= (b_S_owner$ v_b_S_s$ ?x24203) b_S_me$)))
(let (($x24214 (or $x24212 (b_S_in_n_wrapped_n_domain$ v_b_S_s$ ?x24203))))
(let (($x24210 (= (b_S_kind_n_of$ (b_S_typ$ ?x24203)) b_S_kind_n_primitive$)))
(let (($x24201 (b_S_ts_n_is_n_volatile$ ?x24200)))
(let (($x24202 (not $x24201)))
(let (($x24206 (or $x24202 (not (b_S_closed$ v_b_S_s$ ?x24203)))))
(let (($x24207 (not $x24206)))
(let (($x24199 (not $x24198)))
(let (($x24217 (not (or $x24199 $x24207 $x24210 (not $x24214)))))
(let (($x24226 (not (or $x24217 (not (or $x24198 (not $x24221)))))))
(let (($x24194 (b_S_typed$ v_b_S_s$ ?x23972)))
(let (($x24195 (not $x24194)))
(let (($x24227 (or $x24195 $x24226)))
(let (($x24228 (not $x24227)))
(let (($x24193 (b_S_thread_n_local$ v_b_S_s$ ?x23972)))
(let (($x24229 (= $x24193 $x24228)))
(let (($x19790 (forall ((?v0 B_S_state$) (?v1 B_S_ptr$) )(!(let (($x3184 (b_S_in_n_wrapped_n_domain$ ?v0 ?v1)))
(let ((?x1103 (b_S_owner$ ?v0 ?v1)))
(let (($x1104 (= ?x1103 b_S_me$)))
(let (($x1001 (= (b_S_kind_n_of$ (b_S_typ$ ?v1)) b_S_kind_n_primitive$)))
(let ((?x1215 (b_S_typemap$ ?v0)))
(let ((?x3166 (b_S_select_o_tm$ ?x1215 ?v1)))
(let ((?x3169 (b_S_ts_n_emb$ ?x3166)))
(let (($x3180 (or (= (b_S_owner$ ?v0 ?x3169) b_S_me$) (b_S_in_n_wrapped_n_domain$ ?v0 ?x3169))))
(let (($x3172 (or (not (b_S_ts_n_is_n_volatile$ ?x3166)) (not (b_S_closed$ ?v0 ?x3169)))))
(let (($x1024 (not $x1001)))
(let (($x19765 (or $x1024 (not $x3172) (= (b_S_kind_n_of$ (b_S_typ$ ?x3169)) b_S_kind_n_primitive$) (not $x3180))))
(let (($x19774 (or (not $x19765) (not (or $x1001 (not (or $x1104 $x3184)))))))
(let (($x1106 (b_S_typed$ ?v0 ?v1)))
(let (($x8534 (not $x1106)))
(let (($x19782 (not (or $x8534 (not $x19774)))))
(let (($x3165 (b_S_thread_n_local$ ?v0 ?v1)))
(= $x3165 $x19782))))))))))))))))) :pattern ( (b_S_thread_n_local$ ?v0 ?v1) )))
))
(let (($x12140 (forall ((?v0 B_S_state$) (?v1 B_S_ptr$) )(!(let (($x3184 (b_S_in_n_wrapped_n_domain$ ?v0 ?v1)))
(let ((?x1103 (b_S_owner$ ?v0 ?v1)))
(let (($x1104 (= ?x1103 b_S_me$)))
(let (($x1001 (= (b_S_kind_n_of$ (b_S_typ$ ?v1)) b_S_kind_n_primitive$)))
(let (($x1024 (not $x1001)))
(let (($x3186 (and $x1024 (or $x1104 $x3184))))
(let ((?x1215 (b_S_typemap$ ?v0)))
(let ((?x3166 (b_S_select_o_tm$ ?x1215 ?v1)))
(let ((?x3169 (b_S_ts_n_emb$ ?x3166)))
(let (($x3180 (or (= (b_S_owner$ ?v0 ?x3169) b_S_me$) (b_S_in_n_wrapped_n_domain$ ?v0 ?x3169))))
(let (($x3176 (not (= (b_S_kind_n_of$ (b_S_typ$ ?x3169)) b_S_kind_n_primitive$))))
(let (($x3172 (or (not (b_S_ts_n_is_n_volatile$ ?x3166)) (not (b_S_closed$ ?v0 ?x3169)))))
(let (($x8324 (and $x1001 $x3172 $x3176 $x3180)))
(let (($x8329 (or $x8324 $x3186)))
(let (($x1106 (b_S_typed$ ?v0 ?v1)))
(let (($x8332 (and $x1106 $x8329)))
(let (($x3165 (b_S_thread_n_local$ ?v0 ?v1)))
(= $x3165 $x8332)))))))))))))))))) :pattern ( (b_S_thread_n_local$ ?v0 ?v1) )))
))
(let (($x3184 (b_S_in_n_wrapped_n_domain$ ?1 ?0)))
(let ((?x1103 (b_S_owner$ ?1 ?0)))
(let (($x1104 (= ?x1103 b_S_me$)))
(let (($x1001 (= (b_S_kind_n_of$ (b_S_typ$ ?0)) b_S_kind_n_primitive$)))
(let ((?x1215 (b_S_typemap$ ?1)))
(let ((?x3166 (b_S_select_o_tm$ ?x1215 ?0)))
(let ((?x3169 (b_S_ts_n_emb$ ?x3166)))
(let (($x3180 (or (= (b_S_owner$ ?1 ?x3169) b_S_me$) (b_S_in_n_wrapped_n_domain$ ?1 ?x3169))))
(let (($x3172 (or (not (b_S_ts_n_is_n_volatile$ ?x3166)) (not (b_S_closed$ ?1 ?x3169)))))
(let (($x1024 (not $x1001)))
(let (($x19765 (or $x1024 (not $x3172) (= (b_S_kind_n_of$ (b_S_typ$ ?x3169)) b_S_kind_n_primitive$) (not $x3180))))
(let (($x19774 (or (not $x19765) (not (or $x1001 (not (or $x1104 $x3184)))))))
(let (($x1106 (b_S_typed$ ?1 ?0)))
(let (($x8534 (not $x1106)))
(let (($x19782 (not (or $x8534 (not $x19774)))))
(let (($x3165 (b_S_thread_n_local$ ?1 ?0)))
(let (($x3186 (and $x1024 (or $x1104 $x3184))))
(let (($x3176 (not (= (b_S_kind_n_of$ (b_S_typ$ ?x3169)) b_S_kind_n_primitive$))))
(let (($x8324 (and $x1001 $x3172 $x3176 $x3180)))
(let (($x8329 (or $x8324 $x3186)))
(let (($x8332 (and $x1106 $x8329)))
(let (($x12136 (= $x3165 $x8332)))
(let ((@x19776 (monotonicity (rewrite (= $x8324 (not $x19765))) (rewrite (= $x3186 (not (or $x1001 (not (or $x1104 $x3184)))))) (= $x8329 $x19774))))
(let ((@x19786 (trans (monotonicity @x19776 (= $x8332 (and $x1106 $x19774))) (rewrite (= (and $x1106 $x19774) $x19782)) (= $x8332 $x19782))))
(let ((@x19792 (quant-intro (monotonicity @x19786 (= $x12136 (= $x3165 $x19782))) (= $x12140 $x19790))))
(let (($x8338 (forall ((?v0 B_S_state$) (?v1 B_S_ptr$) )(!(let (($x3184 (b_S_in_n_wrapped_n_domain$ ?v0 ?v1)))
(let ((?x1103 (b_S_owner$ ?v0 ?v1)))
(let (($x1104 (= ?x1103 b_S_me$)))
(let (($x1001 (= (b_S_kind_n_of$ (b_S_typ$ ?v1)) b_S_kind_n_primitive$)))
(let (($x1024 (not $x1001)))
(let (($x3186 (and $x1024 (or $x1104 $x3184))))
(let ((?x1215 (b_S_typemap$ ?v0)))
(let ((?x3166 (b_S_select_o_tm$ ?x1215 ?v1)))
(let ((?x3169 (b_S_ts_n_emb$ ?x3166)))
(let (($x3180 (or (= (b_S_owner$ ?v0 ?x3169) b_S_me$) (b_S_in_n_wrapped_n_domain$ ?v0 ?x3169))))
(let (($x3176 (not (= (b_S_kind_n_of$ (b_S_typ$ ?x3169)) b_S_kind_n_primitive$))))
(let (($x3172 (or (not (b_S_ts_n_is_n_volatile$ ?x3166)) (not (b_S_closed$ ?v0 ?x3169)))))
(let (($x8324 (and $x1001 $x3172 $x3176 $x3180)))
(let (($x8329 (or $x8324 $x3186)))
(let (($x1106 (b_S_typed$ ?v0 ?v1)))
(let (($x8332 (and $x1106 $x8329)))
(let (($x3165 (b_S_thread_n_local$ ?v0 ?v1)))
(= $x3165 $x8332)))))))))))))))))) :pattern ( (b_S_thread_n_local$ ?v0 ?v1) )))
))
(let (($x3191 (forall ((?v0 B_S_state$) (?v1 B_S_ptr$) )(!(let (($x3184 (b_S_in_n_wrapped_n_domain$ ?v0 ?v1)))
(let ((?x1103 (b_S_owner$ ?v0 ?v1)))
(let (($x1104 (= ?x1103 b_S_me$)))
(let (($x1001 (= (b_S_kind_n_of$ (b_S_typ$ ?v1)) b_S_kind_n_primitive$)))
(let (($x1024 (not $x1001)))
(let (($x3186 (and $x1024 (or $x1104 $x3184))))
(let ((?x1215 (b_S_typemap$ ?v0)))
(let ((?x3166 (b_S_select_o_tm$ ?x1215 ?v1)))
(let ((?x3169 (b_S_ts_n_emb$ ?x3166)))
(let (($x3180 (or (= (b_S_owner$ ?v0 ?x3169) b_S_me$) (b_S_in_n_wrapped_n_domain$ ?v0 ?x3169))))
(let (($x3176 (not (= (b_S_kind_n_of$ (b_S_typ$ ?x3169)) b_S_kind_n_primitive$))))
(let (($x3172 (or (not (b_S_ts_n_is_n_volatile$ ?x3166)) (not (b_S_closed$ ?v0 ?x3169)))))
(let (($x3183 (and $x1001 (and $x3172 (and $x3176 $x3180)))))
(let (($x1106 (b_S_typed$ ?v0 ?v1)))
(let (($x3165 (b_S_thread_n_local$ ?v0 ?v1)))
(= $x3165 (and $x1106 (or $x3183 $x3186)))))))))))))))))) :pattern ( (b_S_thread_n_local$ ?v0 ?v1) )))
))
(let (($x8335 (= $x3165 $x8332)))
(let (($x8336 (= (= $x3165 (and $x1106 (or (and $x1001 (and $x3172 (and $x3176 $x3180))) $x3186))) $x8335)))
(let (($x8333 (= (and $x1106 (or (and $x1001 (and $x3172 (and $x3176 $x3180))) $x3186)) $x8332)))
(let (($x3183 (and $x1001 (and $x3172 (and $x3176 $x3180)))))
(let ((@x8323 (monotonicity (rewrite (= (and $x3172 (and $x3176 $x3180)) (and $x3172 $x3176 $x3180))) (= $x3183 (and $x1001 (and $x3172 $x3176 $x3180))))))
(let ((@x8328 (trans @x8323 (rewrite (= (and $x1001 (and $x3172 $x3176 $x3180)) $x8324)) (= $x3183 $x8324))))
(let ((@x8337 (monotonicity (monotonicity (monotonicity @x8328 (= (or $x3183 $x3186) $x8329)) $x8333) $x8336)))
(let ((@x12145 (mp (mp (asserted $x3191) (quant-intro @x8337 (= $x3191 $x8338)) $x8338) (quant-intro (rewrite (= $x8335 $x12136)) (= $x8338 $x12140)) $x12140)))
(let ((@x19793 (mp (mp~ @x12145 (nnf-pos (refl (~ $x12136 $x12136)) (~ $x12140 $x12140)) $x12140) @x19792 $x19790)))
(let (($x23973 (= ?x3922 ?x23972)))
(let ((?x23986 (b_S_typ$ ?x3922)))
(let (($x23984 (= ?x23986 b_T_T_u1$)))
(let ((?x3652 (b_S_sizeof$ b_T_T_u1$)))
(let ((?x24037 (* ?x3652 v_b_L_H_p_G_0$)))
(let ((?x3739 (b_S_idx$ ?x3680 0 b_T_T_u1$)))
(let ((?x23186 (b_S_ref$ ?x3739)))
(let ((?x23206 (b_S_ptr$ b_T_T_u1$ ?x23186)))
(let ((?x23612 (b_S_ref$ ?x23206)))
(let ((?x24040 (+ ?x23612 ?x24037)))
(let ((?x24043 (b_S_ptr$ b_T_T_u1$ ?x24040)))
(let (($x20974 (forall ((?v0 B_S_ctype$) (?v1 Int) )(!(= (b_S_typ$ (b_S_ptr$ ?v0 ?v1)) ?v0) :pattern ( (b_S_ptr$ ?v0 ?v1) )))
))
(let (($x3462 (forall ((?v0 B_S_ctype$) (?v1 Int) )(= (b_S_typ$ (b_S_ptr$ ?v0 ?v1)) ?v0))
))
(let (($x3461 (= (b_S_typ$ (b_S_ptr$ ?1 ?0)) ?1)))
(let ((@x16101 (mp~ (asserted $x3462) (nnf-pos (refl (~ $x3461 $x3461)) (~ $x3462 $x3462)) $x3462)))
(let ((@x20979 (mp @x16101 (quant-intro (refl (= $x3461 $x3461)) (= $x3462 $x20974)) $x20974)))
(let ((@x24995 (unit-resolution ((_ quant-inst b_T_T_u1$ (+ ?x23612 ?x24037)) (or (not $x20974) (= (b_S_typ$ ?x24043) b_T_T_u1$))) @x20979 (= (b_S_typ$ ?x24043) b_T_T_u1$))))
(let ((?x23996 (b_S_idx$ ?x23206 v_b_L_H_p_G_0$ b_T_T_u1$)))
(let (($x24957 (= ?x23996 ?x24043)))
(let (($x24973 (or (not (b_S_extent_n_hint$ ?x23996 ?x23206)) (not $x24957))))
(let (($x24976 (not $x24973)))
(let (($x18898 (forall ((?v0 B_S_ptr$) (?v1 Int) (?v2 B_S_ctype$) )(!(let ((?x2466 (* ?v1 (b_S_sizeof$ ?v2))))
(let ((?x2467 (+ (b_S_ref$ ?v0) ?x2466)))
(let ((?x2468 (b_S_ptr$ ?v2 ?x2467)))
(let ((?x2462 (b_S_idx$ ?v0 ?v1 ?v2)))
(let (($x2469 (= ?x2462 ?x2468)))
(not (or (not (b_S_extent_n_hint$ ?x2462 ?v0)) (not $x2469)))))))) :pattern ( (b_S_idx$ ?v0 ?v1 ?v2) )))
))
(let (($x2472 (forall ((?v0 B_S_ptr$) (?v1 Int) (?v2 B_S_ctype$) )(!(let ((?x2466 (* ?v1 (b_S_sizeof$ ?v2))))
(let ((?x2467 (+ (b_S_ref$ ?v0) ?x2466)))
(let ((?x2468 (b_S_ptr$ ?v2 ?x2467)))
(let ((?x2462 (b_S_idx$ ?v0 ?v1 ?v2)))
(let (($x2469 (= ?x2462 ?x2468)))
(let (($x2463 (b_S_extent_n_hint$ ?x2462 ?v0)))
(and $x2463 $x2469))))))) :pattern ( (b_S_idx$ ?v0 ?v1 ?v2) )))
))
(let ((?x2466 (* ?1 (b_S_sizeof$ ?0))))
(let ((?x2467 (+ (b_S_ref$ ?2) ?x2466)))
(let ((?x2468 (b_S_ptr$ ?0 ?x2467)))
(let ((?x2462 (b_S_idx$ ?2 ?1 ?0)))
(let (($x2469 (= ?x2462 ?x2468)))
(let (($x2463 (b_S_extent_n_hint$ ?x2462 ?2)))
(let (($x2470 (and $x2463 $x2469)))
(let ((@x18900 (quant-intro (rewrite (= $x2470 (not (or (not $x2463) (not $x2469))))) (= $x2472 $x18898))))
(let (($x7455 (forall ((?v0 B_S_ptr$) (?v1 Int) (?v2 B_S_ctype$) )(!(let ((?x7440 (* (b_S_sizeof$ ?v2) ?v1)))
(let ((?x7443 (+ (b_S_ref$ ?v0) ?x7440)))
(let ((?x7446 (b_S_ptr$ ?v2 ?x7443)))
(let ((?x2462 (b_S_idx$ ?v0 ?v1 ?v2)))
(let (($x7449 (= ?x2462 ?x7446)))
(let (($x2463 (b_S_extent_n_hint$ ?x2462 ?v0)))
(and $x2463 $x7449))))))) :pattern ( (b_S_idx$ ?v0 ?v1 ?v2) )))
))
(let ((?x7440 (* (b_S_sizeof$ ?0) ?1)))
(let ((?x7443 (+ (b_S_ref$ ?2) ?x7440)))
(let ((?x7446 (b_S_ptr$ ?0 ?x7443)))
(let (($x7449 (= ?x2462 ?x7446)))
(let (($x7452 (and $x2463 $x7449)))
(let ((@x11827 (monotonicity (monotonicity (rewrite (= ?x7440 ?x2466)) (= ?x7443 ?x2467)) (= ?x7446 ?x2468))))
(let ((@x11833 (quant-intro (monotonicity (monotonicity @x11827 (= $x7449 $x2469)) (= $x7452 $x2470)) (= $x7455 $x2472))))
(let ((@x7448 (monotonicity (monotonicity (rewrite (= ?x2466 ?x7440)) (= ?x2467 ?x7443)) (= ?x2468 ?x7446))))
(let ((@x7457 (quant-intro (monotonicity (monotonicity @x7448 (= $x2469 $x7449)) (= $x2470 $x7452)) (= $x2472 $x7455))))
(let ((@x15301 (mp~ (mp (mp (asserted $x2472) @x7457 $x7455) @x11833 $x2472) (nnf-pos (refl (~ $x2470 $x2470)) (~ $x2472 $x2472)) $x2472)))
(let ((@x18901 (mp @x15301 @x18900 $x18898)))
(let (($x23217 (not $x18898)))
(let (($x24981 (or $x23217 $x24976)))
(let (($x24034 (not (= ?x23996 (b_S_ptr$ b_T_T_u1$ (+ ?x23612 (* v_b_L_H_p_G_0$ ?x3652)))))))
(let (($x24986 (= (or $x23217 (not (or (not (b_S_extent_n_hint$ ?x23996 ?x23206)) $x24034))) $x24981)))
(let (($x24958 (= (= ?x23996 (b_S_ptr$ b_T_T_u1$ (+ ?x23612 (* v_b_L_H_p_G_0$ ?x3652)))) $x24957)))
(let ((@x24955 (monotonicity (rewrite (= (* v_b_L_H_p_G_0$ ?x3652) ?x24037)) (= (+ ?x23612 (* v_b_L_H_p_G_0$ ?x3652)) ?x24040))))
(let ((@x24956 (monotonicity @x24955 (= (b_S_ptr$ b_T_T_u1$ (+ ?x23612 (* v_b_L_H_p_G_0$ ?x3652))) ?x24043))))
(let ((@x24975 (monotonicity (monotonicity (monotonicity @x24956 $x24958) (= $x24034 (not $x24957))) (= (or (not (b_S_extent_n_hint$ ?x23996 ?x23206)) $x24034) $x24973))))
(let ((@x24983 (monotonicity @x24975 (= (not (or (not (b_S_extent_n_hint$ ?x23996 ?x23206)) $x24034)) $x24976))))
(let ((@x24985 ((_ quant-inst (b_S_ptr$ b_T_T_u1$ ?x23186) v_b_L_H_p_G_0$ b_T_T_u1$) (or $x23217 (not (or (not (b_S_extent_n_hint$ ?x23996 ?x23206)) $x24034))))))
(let ((@x23295 (mp @x24985 (trans (monotonicity @x24983 $x24986) (rewrite (= $x24981 $x24981)) $x24986) $x24981)))
(let ((@x25587 (unit-resolution (def-axiom (or $x24973 $x24957)) (unit-resolution @x23295 @x18901 $x24976) $x24957)))
(let (($x23207 (= ?x3739 ?x23206)))
(let (($x3740 (b_S_is$ ?x3739 b_T_T_u1$)))
(let ((?x23215 (b_S_typ$ ?x3739)))
(let (($x23216 (= ?x23215 b_T_T_u1$)))
(let ((@x23266 (unit-resolution ((_ quant-inst b_T_T_u1$ v_b_P_H_arr$) (or (not $x20974) (= (b_S_typ$ ?x3680) b_T_T_u1$))) @x20979 (= (b_S_typ$ ?x3680) b_T_T_u1$))))
(let (($x20968 (forall ((?v0 B_S_ctype$) (?v1 Int) )(!(= (b_S_ref$ (b_S_ptr$ ?v0 ?v1)) ?v1) :pattern ( (b_S_ptr$ ?v0 ?v1) )))
))
(let (($x3459 (forall ((?v0 B_S_ctype$) (?v1 Int) )(= (b_S_ref$ (b_S_ptr$ ?v0 ?v1)) ?v1))
))
(let (($x3458 (= (b_S_ref$ (b_S_ptr$ ?1 ?0)) ?0)))
(let ((@x16096 (mp~ (asserted $x3459) (nnf-pos (refl (~ $x3458 $x3458)) (~ $x3459 $x3459)) $x3459)))
(let ((@x20973 (mp @x16096 (quant-intro (refl (= $x3458 $x3458)) (= $x3459 $x20968)) $x20968)))
(let ((@x23283 (unit-resolution ((_ quant-inst b_T_T_u1$ v_b_P_H_arr$) (or (not $x20968) (= (b_S_ref$ ?x3680) v_b_P_H_arr$))) @x20973 (= (b_S_ref$ ?x3680) v_b_P_H_arr$))))
(let ((?x3681 (b_S_ref$ ?x3680)))
(let ((?x23203 (b_S_ptr$ b_T_T_u1$ ?x3681)))
(let (($x23188 (= ?x3739 ?x23203)))
(let (($x23208 (or (not (b_S_extent_n_hint$ ?x3739 ?x3680)) (not $x23188))))
(let (($x23213 (not $x23208)))
(let (($x23220 (or $x23217 $x23213)))
(let (($x23243 (or (not (b_S_extent_n_hint$ ?x3739 ?x3680)) (not (= ?x3739 (b_S_ptr$ b_T_T_u1$ (+ ?x3681 (* 0 ?x3652))))))))
(let (($x23209 (= (not (= ?x3739 (b_S_ptr$ b_T_T_u1$ (+ ?x3681 (* 0 ?x3652))))) (not $x23188))))
(let ((@x23198 (monotonicity (rewrite (= (* 0 ?x3652) 0)) (= (+ ?x3681 (* 0 ?x3652)) (+ ?x3681 0)))))
(let ((@x23202 (trans @x23198 (rewrite (= (+ ?x3681 0) ?x3681)) (= (+ ?x3681 (* 0 ?x3652)) ?x3681))))
(let ((@x23190 (monotonicity @x23202 (= (b_S_ptr$ b_T_T_u1$ (+ ?x3681 (* 0 ?x3652))) ?x23203))))
(let ((@x23192 (monotonicity @x23190 (= (= ?x3739 (b_S_ptr$ b_T_T_u1$ (+ ?x3681 (* 0 ?x3652)))) $x23188))))
(let ((@x23219 (monotonicity (monotonicity (monotonicity @x23192 $x23209) (= $x23243 $x23208)) (= (not $x23243) $x23213))))
(let ((@x23232 (trans (monotonicity @x23219 (= (or $x23217 (not $x23243)) $x23220)) (rewrite (= $x23220 $x23220)) (= (or $x23217 (not $x23243)) $x23220))))
(let ((@x23284 (unit-resolution (mp ((_ quant-inst (b_S_ptr$ b_T_T_u1$ v_b_P_H_arr$) 0 b_T_T_u1$) (or $x23217 (not $x23243))) @x23232 $x23220) @x18901 $x23213)))
(let ((@x23269 (unit-resolution (def-axiom (or $x23208 $x23188)) @x23284 $x23188)))
(let ((@x23248 (monotonicity (trans @x23269 (monotonicity @x23283 (= ?x23203 ?x3680)) (= ?x3739 ?x3680)) (= ?x23215 (b_S_typ$ ?x3680)))))
(let (($x23163 (not $x23216)))
(let (($x23223 (= $x3740 $x23216)))
(let (($x20961 (forall ((?v0 B_S_ptr$) (?v1 B_S_ctype$) )(!(let ((?x2296 (b_S_typ$ ?v0)))
(let (($x2741 (= ?x2296 ?v1)))
(let (($x3427 (b_S_is$ ?v0 ?v1)))
(= $x3427 $x2741)))) :pattern ( (b_S_is$ ?v0 ?v1) )))
))
(let (($x12230 (forall ((?v0 B_S_ptr$) (?v1 B_S_ctype$) )(let ((?x2296 (b_S_typ$ ?v0)))
(let (($x2741 (= ?x2296 ?v1)))
(let (($x3427 (b_S_is$ ?v0 ?v1)))
(= $x3427 $x2741)))))
))
(let ((?x2296 (b_S_typ$ ?1)))
(let (($x2741 (= ?x2296 ?0)))
(let (($x3427 (b_S_is$ ?1 ?0)))
(let (($x12201 (= $x3427 $x2741)))
(let (($x3434 (forall ((?v0 B_S_ptr$) (?v1 B_S_ctype$) )(let ((?x2296 (b_S_typ$ ?v0)))
(let (($x2741 (= ?x2296 ?v1)))
(let (($x3427 (b_S_is$ ?v0 ?v1)))
(= $x3427 $x2741)))))
))
(let ((@x12235 (mp (asserted $x3434) (quant-intro (rewrite (= (= $x3427 $x2741) $x12201)) (= $x3434 $x12230)) $x12230)))
(let ((@x20966 (mp (mp~ @x12235 (nnf-pos (refl (~ $x12201 $x12201)) (~ $x12230 $x12230)) $x12230) (quant-intro (refl (= $x12201 $x12201)) (= $x12230 $x20961)) $x20961)))
(let ((@x23281 (unit-resolution (def-axiom (or (not $x23223) $x3740 $x23163)) (hypothesis (not $x3740)) (or (not $x23223) $x23163))))
(let ((@x23282 (unit-resolution @x23281 (unit-resolution ((_ quant-inst (b_S_idx$ ?x3680 0 b_T_T_u1$) b_T_T_u1$) (or (not $x20961) $x23223)) @x20966 $x23223) $x23163)))
(let ((@x23251 (lemma (unit-resolution @x23282 (trans @x23248 @x23266 $x23216) false) $x3740)))
(let (($x8559 (forall ((?v0 B_S_ptr$) (?v1 B_S_ctype$) )(!(or (not (b_S_is$ ?v0 ?v1)) (= ?v0 (b_S_ptr$ ?v1 (b_S_ref$ ?v0)))) :pattern ( (b_S_is$ ?v0 ?v1) )))
))
(let (($x8556 (or (not $x3427) (= ?1 (b_S_ptr$ ?0 (b_S_ref$ ?1))))))
(let (($x3432 (forall ((?v0 B_S_ptr$) (?v1 B_S_ctype$) )(!(let (($x3427 (b_S_is$ ?v0 ?v1)))
(=> $x3427 (= ?v0 (b_S_ptr$ ?v1 (b_S_ref$ ?v0))))) :pattern ( (b_S_is$ ?v0 ?v1) )))
))
(let ((@x8558 (rewrite (= (=> $x3427 (= ?1 (b_S_ptr$ ?0 (b_S_ref$ ?1)))) $x8556))))
(let ((@x16076 (mp~ (mp (asserted $x3432) (quant-intro @x8558 (= $x3432 $x8559)) $x8559) (nnf-pos (refl (~ $x8556 $x8556)) (~ $x8559 $x8559)) $x8559)))
(let (($x23403 (= (or (not $x8559) (or (not $x3740) $x23207)) (or (not $x8559) (not $x3740) $x23207))))
(let ((@x23405 (mp ((_ quant-inst (b_S_idx$ ?x3680 0 b_T_T_u1$) b_T_T_u1$) (or (not $x8559) (or (not $x3740) $x23207))) (rewrite $x23403) (or (not $x8559) (not $x3740) $x23207))))
(let ((@x24358 (monotonicity (symm @x23283 (= v_b_P_H_arr$ ?x3681)) (= ?x3680 ?x23203))))
(let ((@x24998 (trans (trans @x24358 (symm @x23269 (= ?x23203 ?x3739)) (= ?x3680 ?x3739)) (unit-resolution @x23405 @x16076 @x23251 $x23207) (= ?x3680 ?x23206))))
(let ((@x25027 (monotonicity (trans (monotonicity @x24998 (= ?x3922 ?x23996)) @x25587 (= ?x3922 ?x24043)) (= ?x23986 (b_S_typ$ ?x24043)))))
(let (($x25000 (not $x23984)))
(let (($x23994 (= $x3923 $x23984)))
(let ((@x24895 (unit-resolution (def-axiom (or (not $x23994) $x3923 $x25000)) (hypothesis $x16330) (or (not $x23994) $x25000))))
(let ((@x24903 (unit-resolution @x24895 (unit-resolution ((_ quant-inst (b_S_idx$ ?x3680 v_b_L_H_p_G_0$ b_T_T_u1$) b_T_T_u1$) (or (not $x20961) $x23994)) @x20966 $x23994) $x25000)))
(let ((@x25032 (lemma (unit-resolution @x24903 (trans @x25027 @x24995 $x23984) false) $x3923)))
(let ((@x24892 (rewrite (= (or (not $x8559) (or $x16330 $x23973)) (or (not $x8559) $x16330 $x23973)))))
(let ((@x24894 (mp ((_ quant-inst (b_S_idx$ ?x3680 v_b_L_H_p_G_0$ b_T_T_u1$) b_T_T_u1$) (or (not $x8559) (or $x16330 $x23973))) @x24892 (or (not $x8559) $x16330 $x23973))))
(let ((@x24935 (unit-resolution @x24894 @x16076 (hypothesis $x3923) (hypothesis (not $x23973)) false)))
(let ((@x25156 (unit-resolution (lemma @x24935 (or $x16330 $x23973)) @x25032 $x23973)))
(let ((@x25212 (symm (monotonicity (symm @x25156 (= ?x23972 ?x3922)) (= $x24193 $x3926)) (= $x3926 $x24193))))
(let ((@x25225 (mp (hypothesis $x16339) (monotonicity @x25212 (= $x16339 (not $x24193))) (not $x24193))))
(let ((@x25226 (unit-resolution (def-axiom (or (not $x24229) $x24193 $x24227)) @x25225 (unit-resolution ((_ quant-inst v_b_S_s$ (b_S_ptr$ b_T_T_u1$ ?x24124)) (or (not $x19790) $x24229)) @x19793 $x24229) $x24227)))
(let ((@x25350 (monotonicity (symm (hypothesis $x23973) (= ?x23972 ?x3922)) (= $x24194 (b_S_typed$ v_b_S_s$ ?x3922)))))
(let (($x3924 (b_S_typed$ v_b_S_s$ ?x3922)))
(let ((?x23936 (b_S_select_o_tm$ ?x3874 ?x3922)))
(let (($x24081 (b_S_ts_n_is_n_volatile$ ?x23936)))
(let (($x16333 (not $x3924)))
(let (($x24082 (or $x16333 $x24081)))
(let (($x24083 (not $x24082)))
(let (($x12397 (>= v_b_L_H_p_G_0$ 0)))
(let (($x21173 (forall ((?v0 Int) )(!(let ((?x3765 (b_S_read_n_u1$ v_b_S_s$ (b_S_idx$ (b_S_ptr$ b_T_T_u1$ v_b_P_H_arr$) ?v0 b_T_T_u1$))))
(let (($x3840 (= ?x3765 v_b_S_result_G_0$)))
(let (($x12631 (>= (+ ?v0 (* (- 1) v_b_P_H_len$)) 0)))
(let (($x14211 (<= ?v0 4294967295)))
(let (($x17271 (not $x14211)))
(let (($x10138 (>= ?v0 0)))
(let (($x10556 (not $x10138)))
(or $x10556 $x17271 $x12631 (not $x3840))))))))) :pattern ( (b_S_idx$ (b_S_ptr$ b_T_T_u1$ v_b_P_H_arr$) ?v0 b_T_T_u1$) )))
))
(let (($x21178 (not $x21173)))
(let (($x21165 (forall ((?v0 Int) )(!(let ((?x12644 (* (- 1) v_b_S_result_G_0$)))
(let ((?x3765 (b_S_read_n_u1$ v_b_S_s$ (b_S_idx$ (b_S_ptr$ b_T_T_u1$ v_b_P_H_arr$) ?v0 b_T_T_u1$))))
(let (($x12646 (<= (+ ?x3765 ?x12644) 0)))
(let (($x12631 (>= (+ ?v0 (* (- 1) v_b_P_H_len$)) 0)))
(let (($x14211 (<= ?v0 4294967295)))
(let (($x17271 (not $x14211)))
(let (($x10138 (>= ?v0 0)))
(let (($x10556 (not $x10138)))
(or $x10556 $x17271 $x12631 $x12646))))))))) :pattern ( (b_S_idx$ (b_S_ptr$ b_T_T_u1$ v_b_P_H_arr$) ?v0 b_T_T_u1$) )))
))
(let (($x21181 (or (not $x21165) $x21178)))
(let (($x21184 (not $x21181)))
(let ((?x16481 (b_S_read_n_u1$ v_b_S_s$ (b_S_idx$ ?x3680 ?v0!15 b_T_T_u1$))))
(let (($x16760 (>= (+ v_b_S_result_G_0$ (* (- 1) ?x16481)) 0)))
(let (($x16738 (<= (+ v_b_P_H_len$ (* (- 1) ?v0!15)) 0)))
(let (($x16474 (<= ?v0!15 4294967295)))
(let (($x20278 (not $x16474)))
(let (($x16473 (>= ?v0!15 0)))
(let (($x20277 (not $x16473)))
(let (($x20293 (or $x20277 $x20278 $x16738 $x16760)))
(let (($x20298 (not $x20293)))
(let (($x21187 (or $x20298 $x21184)))
(let (($x21190 (not $x21187)))
(let (($x3824 (= v_b_S_result_G_0$ v_b_L_H_max_G_1$)))
(let (($x20358 (not $x3824)))
(let (($x12389 (>= v_b_SL_H_witness_G_0$ 0)))
(let (($x20219 (not $x12389)))
(let (($x12453 (<= (+ v_b_P_H_len$ (* (- 1) v_b_L_H_p_G_0$)) 0)))
(let (($x12456 (not $x12453)))
(let (($x21193 (or $x12456 $x20190 $x20219 (not (= v_b_L_H_max_G_4$ v_b_L_H_max_G_1$)) (not (= v_b_L_H_p_G_2$ v_b_L_H_p_G_0$)) (not (= v_b_SL_H_witness_G_2$ v_b_SL_H_witness_G_0$)) $x20358 $x21190)))
(let (($x21196 (not $x21193)))
(let (($x3993 (= v_b_L_H_max_G_3$ v_b_L_H_max_G_1$)))
(let (($x20230 (not $x3993)))
(let (($x12471 (>= (+ v_b_L_H_max_G_1$ (* (- 1) ?x3929)) 0)))
(let (($x12476 (not $x12471)))
(let (($x21123 (or $x20190 $x20219 $x12476 $x20230 (not (= v_b_SL_H_witness_G_1$ v_b_SL_H_witness_G_0$)) $x20173 $x21090)))
(let (($x21126 (not $x21123)))
(let (($x21099 (or $x16330 $x16339 $x21096)))
(let (($x21102 (not $x21099)))
(let (($x21105 (or $x16330 $x16333 $x21102)))
(let (($x21108 (not $x21105)))
(let (($x21111 (or $x16330 $x16333 $x21108)))
(let (($x21114 (not $x21111)))
(let (($x21117 (or $x20190 $x20219 $x12471 $x21114)))
(let (($x21120 (not $x21117)))
(let (($x21129 (or $x21120 $x21126)))
(let (($x21132 (not $x21129)))
(let (($x21135 (or $x16330 $x16339 $x20190 $x20219 $x21132)))
(let (($x21138 (not $x21135)))
(let (($x21141 (or $x16330 $x16339 $x21138)))
(let (($x21144 (not $x21141)))
(let (($x21147 (or $x16330 $x16333 $x21144)))
(let (($x21150 (not $x21147)))
(let (($x21153 (or $x16330 $x16333 $x21150)))
(let (($x21156 (not $x21153)))
(let (($x21159 (or $x20190 $x20219 $x12453 $x21156)))
(let (($x21162 (not $x21159)))
(let (($x21199 (or $x21162 $x21196)))
(let (($x21202 (not $x21199)))
(let ((?x991 (b_S_ptr_n_to$ b_T_T_u1$)))
(let (($x3898 (b_S_local_n_value_n_is_n_ptr$ v_b_S_s$ b_H_tok_S_1_T_16_o_3$ b_H_loc_o_arr$ ?x3680 ?x991)))
(let (($x3897 (b_S_local_n_value_n_is$ v_b_S_s$ b_H_tok_S_1_T_16_o_3$ b_H_loc_o_arr$ (b_S_ptr_n_to_n_int$ ?x3680) ?x991)))
(let (($x3896 (b_S_local_n_value_n_is$ v_b_S_s$ b_H_tok_S_1_T_16_o_3$ b_H_loc_o_len$ v_b_P_H_len$ b_T_T_u4$)))
(let (($x3895 (b_S_local_n_value_n_is$ v_b_S_s$ b_H_tok_S_1_T_16_o_3$ b_H_loc_o_max$ v_b_L_H_max_G_1$ b_T_T_u1$)))
(let (($x3894 (b_S_local_n_value_n_is$ v_b_S_s$ b_H_tok_S_1_T_16_o_3$ b_H_loc_o_witness$ v_b_SL_H_witness_G_0$ b_T_T_u4$)))
(let (($x3893 (b_S_local_n_value_n_is$ v_b_S_s$ b_H_tok_S_1_T_16_o_3$ b_H_loc_o_p$ v_b_L_H_p_G_0$ b_T_T_u4$)))
(let ((?x3793 (b_S_read_n_u1$ v_b_S_s$ (b_S_idx$ ?x3680 v_b_SL_H_witness_G_0$ b_T_T_u1$))))
(let (($x3794 (= ?x3793 v_b_L_H_max_G_1$)))
(let (($x20379 (not $x3794)))
(let (($x12435 (<= (+ v_b_P_H_len$ (* (- 1) v_b_SL_H_witness_G_0$)) 0)))
(let (($x21041 (forall ((?v0 Int) )(!(let ((?x12384 (* (- 1) v_b_L_H_max_G_1$)))
(let ((?x3765 (b_S_read_n_u1$ v_b_S_s$ (b_S_idx$ (b_S_ptr$ b_T_T_u1$ v_b_P_H_arr$) ?v0 b_T_T_u1$))))
(let (($x12425 (<= (+ ?x3765 ?x12384) 0)))
(let (($x12411 (>= (+ ?v0 (* (- 1) v_b_L_H_p_G_0$)) 0)))
(let (($x14211 (<= ?v0 4294967295)))
(let (($x17271 (not $x14211)))
(let (($x10138 (>= ?v0 0)))
(let (($x10556 (not $x10138)))
(or $x10556 $x17271 $x12411 $x12425))))))))) :pattern ( (b_S_idx$ (b_S_ptr$ b_T_T_u1$ v_b_P_H_arr$) ?v0 b_T_T_u1$) )))
))
(let (($x21046 (not $x21041)))
(let (($x20375 (not $x12397)))
(let (($x12834 (<= v_b_SL_H_witness_G_0$ 4294967295)))
(let (($x20374 (not $x12834)))
(let ((?x3746 (b_S_read_n_u1$ v_b_S_s$ ?x3739)))
(let (($x3769 (= ?x3746 v_b_L_H_max_G_0$)))
(let (($x16288 (not $x3769)))
(let (($x8666 (<= v_b_P_H_len$ 0)))
(let (($x21205 (or $x8666 $x16288 (not (>= v_b_L_H_max_G_1$ 0)) (not (<= v_b_L_H_max_G_1$ 255)) $x20374 $x20375 (not (<= v_b_L_H_p_G_0$ 4294967295)) (not (>= (+ v_b_P_H_len$ (* (- 1) v_b_L_H_p_G_0$)) 0)) $x21046 $x12435 $x20379 $x20190 $x20219 (not (b_S_call_n_transition$ v_b_S_s$ v_b_S_s$)) (not (b_S_good_n_state_n_ext$ b_H_tok_S_1_T_16_o_3$ v_b_S_s$)) (not $x3893) (not $x3894) (not $x3895) (not $x3896) (not $x3897) (not $x3898) $x21202)))
(let (($x21208 (not $x21205)))
(let (($x21211 (or $x8666 $x16288 $x21208)))
(let (($x21214 (not $x21211)))
(let (($x21033 (forall ((?v0 Int) )(!(let ((?x3765 (b_S_read_n_u1$ v_b_S_s$ (b_S_idx$ (b_S_ptr$ b_T_T_u1$ v_b_P_H_arr$) ?v0 b_T_T_u1$))))
(let (($x12367 (>= (+ v_b_L_H_max_G_0$ (* (- 1) ?x3765)) 0)))
(let (($x12354 (>= ?v0 1)))
(let (($x14211 (<= ?v0 4294967295)))
(let (($x17271 (not $x14211)))
(let (($x10138 (>= ?v0 0)))
(let (($x10556 (not $x10138)))
(or $x10556 $x17271 $x12354 $x12367)))))))) :pattern ( (b_S_idx$ (b_S_ptr$ b_T_T_u1$ v_b_P_H_arr$) ?v0 b_T_T_u1$) )))
))
(let (($x21217 (or (not $x21033) $x21214)))
(let (($x21220 (not $x21217)))
(let ((?x16270 (b_S_read_n_u1$ v_b_S_s$ (b_S_idx$ ?x3680 ?v0!13 b_T_T_u1$))))
(let (($x16273 (>= (+ v_b_L_H_max_G_0$ (* (- 1) ?x16270)) 0)))
(let (($x16265 (>= ?v0!13 1)))
(let (($x20031 (or (not (>= ?v0!13 0)) (not (<= ?v0!13 4294967295)) $x16265 $x16273)))
(let (($x20036 (not $x20031)))
(let (($x21223 (or $x20036 $x21220)))
(let (($x21226 (not $x21223)))
(let (($x12348 (>= v_b_P_H_len$ 1)))
(let (($x12351 (not $x12348)))
(let (($x21229 (or $x12351 $x21226)))
(let (($x21232 (not $x21229)))
(let (($x8667 (not $x8666)))
(let (($x3720 (<= v_b_P_H_len$ b_S_max_o_u4$)))
(let (($x3719 (<= 0 v_b_P_H_len$)))
(let (($x8707 (forall ((?v0 B_S_ptr$) )(!(let (($x3715 (b_S_in_n_writes_n_at$ v_b_H_wrTime_S_1_T_6_o_1$ ?v0)))
(not $x3715)) :pattern ( (b_S_in_n_writes_n_at$ v_b_H_wrTime_S_1_T_6_o_1$ ?v0) )))
))
(let ((?x3713 (b_S_current_n_timestamp$ v_b_S_s$)))
(let (($x3714 (= v_b_H_wrTime_S_1_T_6_o_1$ ?x3713)))
(let (($x3711 (b_S_local_n_value_n_is$ v_b_S_s$ b_H_tok_S_1_T_6_o_1$ b_H_loc_o_len$ v_b_P_H_len$ b_T_T_u4$)))
(let (($x3709 (b_S_local_n_value_n_is_n_ptr$ v_b_S_s$ b_H_tok_S_1_T_6_o_1$ b_H_loc_o_arr$ ?x3680 ?x991)))
(let (($x3708 (b_S_local_n_value_n_is$ v_b_S_s$ b_H_tok_S_1_T_6_o_1$ b_H_loc_o_arr$ (b_S_ptr_n_to_n_int$ ?x3680) ?x991)))
(let (($x8701 (forall ((?v0 B_S_pure_n_function$) )(!(not (<= b_S_current_n_frame_n_level$ (b_S_frame_n_level$ ?v0))) :pattern ( (b_S_frame_n_level$ ?v0) )))
))
(let (($x3699 (b_S_full_n_stop$ v_b_S_s$)))
(let (($x3698 (b_S_good_n_state_n_ext$ b_H_tok_S_1_T_6_o_1$ v_b_S_s$)))
(let (($x3697 (b_S_function_n_entry$ v_b_S_s$)))
(let ((?x3678 (b_S_array$ b_T_T_u1$ v_b_P_H_len$)))
(let (($x3691 (b_S_is_n_non_n_primitive$ ?x3678)))
(let (($x3690 (not (= (b_S_kind_n_of$ ?x3678) b_S_kind_n_primitive$))))
(let ((?x3682 (b_S_ptr$ ?x3678 ?x3681)))
(let (($x3687 (b_S_typed$ v_b_S_s$ ?x3682)))
(let (($x3686 (b_S_is$ ?x3682 ?x3678)))
(let ((?x3684 (b_S_owner$ v_b_S_s$ ?x3682)))
(let (($x3685 (= ?x3684 b_S_me$)))
(let (($x3683 (b_S_closed$ v_b_S_s$ ?x3682)))
(let (($x8657 (<= 1099511627776 v_b_P_H_len$)))
(let (($x8658 (not $x8657)))
(let (($x3672 (<= v_b_SL_H_witness$ b_S_max_o_u4$)))
(let (($x3671 (<= 0 v_b_SL_H_witness$)))
(let (($x3668 (<= v_b_L_H_p$ b_S_max_o_u4$)))
(let (($x3667 (<= 0 v_b_L_H_p$)))
(let (($x3663 (<= 0 v_b_L_H_max$)))
(let (($x8820 (and $x3663 (<= v_b_L_H_max$ b_S_max_o_u1$) $x3667 $x3668 $x3671 $x3672 $x8658 $x8667 $x3683 $x3685 $x3686 $x3687 $x3690 $x3691 $x3697 $x3698 $x3699 $x8701 $x3708 $x3709 $x3711 $x3714 $x8707 $x3719 $x3720)))
(let (($x9207 (exists ((?v0 Int) )(let ((?x3765 (b_S_read_n_u1$ v_b_S_s$ (b_S_idx$ (b_S_ptr$ b_T_T_u1$ v_b_P_H_arr$) ?v0 b_T_T_u1$))))
(let (($x3840 (= ?x3765 v_b_S_result_G_0$)))
(let (($x9165 (not (<= v_b_P_H_len$ ?v0))))
(let (($x1344 (<= ?v0 b_S_max_o_u4$)))
(let (($x1212 (<= 0 ?v0)))
(and $x1212 $x1344 $x9165 $x3840)))))))
))
(let (($x9185 (forall ((?v0 Int) )(let ((?x3765 (b_S_read_n_u1$ v_b_S_s$ (b_S_idx$ (b_S_ptr$ b_T_T_u1$ v_b_P_H_arr$) ?v0 b_T_T_u1$))))
(let (($x3837 (<= ?x3765 v_b_S_result_G_0$)))
(let (($x9165 (not (<= v_b_P_H_len$ ?v0))))
(let (($x1344 (<= ?v0 b_S_max_o_u4$)))
(let (($x1212 (<= 0 ?v0)))
(let (($x9171 (and $x1212 $x1344 $x9165)))
(or (not $x9171) $x3837))))))))
))
(let (($x9228 (or (not $x9185) $x9207)))
(let (($x9233 (and $x9185 $x9228)))
(let (($x3822 (= v_b_SL_H_witness_G_2$ v_b_SL_H_witness_G_0$)))
(let (($x3820 (= v_b_L_H_p_G_2$ v_b_L_H_p_G_0$)))
(let (($x3818 (= v_b_L_H_max_G_4$ v_b_L_H_max_G_1$)))
(let (($x3776 (<= 0 v_b_SL_H_witness_G_0$)))
(let (($x3783 (<= 1 v_b_L_H_p_G_0$)))
(let (($x9159 (and b_S_position_n_marker$ $x3783 $x3776 $x3818 $x3820 $x3822 $x3824)))
(let (($x9240 (or (not $x9159) $x9233)))
(let (($x9245 (and b_S_position_n_marker$ $x9240)))
(let (($x9963 (or (not (and $x3783 $x3776 (<= v_b_P_H_len$ v_b_L_H_p_G_0$))) $x9245)))
(let (($x9687 (not (<= v_b_P_H_len$ v_b_SL_H_witness_G_1$))))
(let (($x9690 (and $x9687 $x3976)))
(let (($x9683 (forall ((?v0 Int) )(let ((?x3765 (b_S_read_n_u1$ v_b_S_s$ (b_S_idx$ (b_S_ptr$ b_T_T_u1$ v_b_P_H_arr$) ?v0 b_T_T_u1$))))
(let (($x3970 (<= ?x3765 v_b_L_H_max_G_3$)))
(let (($x9663 (not (<= v_b_L_H_p_G_1$ ?v0))))
(let (($x1344 (<= ?v0 b_S_max_o_u4$)))
(let (($x1212 (<= 0 ?v0)))
(let (($x9669 (and $x1212 $x1344 $x9663)))
(or (not $x9669) $x3970))))))))
))
(let (($x9718 (or (not $x9683) $x9690)))
(let (($x9723 (and $x9683 $x9718)))
(let (($x9730 (or (not (<= v_b_L_H_p_G_1$ v_b_P_H_len$)) $x9723)))
(let (($x3967 (<= v_b_L_H_p_G_1$ v_b_P_H_len$)))
(let (($x9735 (and $x3967 $x9730)))
(let (($x3943 (<= 0 v_b_SL_H_witness_G_1$)))
(let (($x3961 (<= 2 v_b_L_H_p_G_1$)))
(let ((?x9600 (+ 1 v_b_L_H_p_G_0$)))
(let (($x9623 (= v_b_L_H_p_G_1$ ?x9600)))
(let (($x9615 (<= v_b_L_H_p_G_0$ (+ (- 1) b_S_max_o_u4$))))
(let (($x9606 (<= (- 1) v_b_L_H_p_G_0$)))
(let (($x9657 (and $x9606 $x9615 $x9623 $x3960 $x3961 $x3943)))
(let (($x9742 (or (not $x9657) $x9735)))
(let (($x9750 (and $x9606 $x9615 $x9742)))
(let (($x3994 (= v_b_SL_H_witness_G_1$ v_b_SL_H_witness_G_0$)))
(let (($x3992 (<= ?x3929 v_b_L_H_max_G_1$)))
(let (($x9858 (and $x3783 $x3776 $x3992 $x3993 $x3994 $x3943)))
(let (($x9874 (or (not $x9858) $x9750)))
(let (($x3942 (= v_b_SL_H_witness_G_1$ v_b_L_H_p_G_0$)))
(let (($x3935 (= v_b_L_H_max_G_2$ ?x3929)))
(let (($x9595 (and $x3923 $x3926 $x3935 $x3936 $x3937 $x3783 $x3940 $x3942 $x3943)))
(let (($x9759 (or (not $x9595) $x9750)))
(let (($x9767 (and $x3923 $x3926 $x9759)))
(let (($x3925 (and $x3923 $x3924)))
(let (($x9775 (not $x3925)))
(let (($x9776 (or $x9775 $x9767)))
(let (($x9784 (and $x3923 $x3924 $x9776)))
(let (($x9793 (or (not (and $x3783 $x3776 (not $x3992))) $x9784)))
(let (($x9879 (and $x9793 $x9874)))
(let (($x9886 (or (not (and $x3923 $x3926 $x3783 $x3776)) $x9879)))
(let (($x9894 (and $x3923 $x3926 $x9886)))
(let (($x9902 (or $x9775 $x9894)))
(let (($x9910 (and $x3923 $x3924 $x9902)))
(let (($x9919 (or (not (and $x3783 $x3776 (not (<= v_b_P_H_len$ v_b_L_H_p_G_0$)))) $x9910)))
(let (($x9968 (and $x9919 $x9963)))
(let (($x3806 (b_S_good_n_state_n_ext$ b_H_tok_S_1_T_16_o_3$ v_b_S_s$)))
(let (($x3886 (b_S_call_n_transition$ v_b_S_s$ v_b_S_s$)))
(let (($x9434 (and $x3783 $x3776 $x3886 $x3806 $x3699 $x3893 $x3894 $x3895 $x3896 $x3897 $x3898)))
(let (($x9974 (not $x9434)))
(let (($x8960 (not (<= v_b_P_H_len$ v_b_SL_H_witness_G_0$))))
(let (($x8956 (forall ((?v0 Int) )(let ((?x3765 (b_S_read_n_u1$ v_b_S_s$ (b_S_idx$ (b_S_ptr$ b_T_T_u1$ v_b_P_H_arr$) ?v0 b_T_T_u1$))))
(let (($x3788 (<= ?x3765 v_b_L_H_max_G_1$)))
(let (($x8936 (not (<= v_b_L_H_p_G_0$ ?v0))))
(let (($x1344 (<= ?v0 b_S_max_o_u4$)))
(let (($x1212 (<= 0 ?v0)))
(let (($x8942 (and $x1212 $x1344 $x8936)))
(or (not $x8942) $x3788))))))))
))
(let (($x3785 (<= v_b_L_H_p_G_0$ v_b_P_H_len$)))
(let (($x3781 (<= v_b_L_H_p_G_0$ b_S_max_o_u4$)))
(let (($x3780 (<= 0 v_b_L_H_p_G_0$)))
(let (($x3777 (<= v_b_SL_H_witness_G_0$ b_S_max_o_u4$)))
(let (($x3773 (<= v_b_L_H_max_G_1$ b_S_max_o_u1$)))
(let (($x3772 (<= 0 v_b_L_H_max_G_1$)))
(let (($x9032 (and $x8667 $x3769 $x3772 $x3773 $x3776 $x3777 $x3780 $x3781 $x3783 $x3785 $x8956 $x8960 $x3794)))
(let (($x9991 (or (not $x9032) $x9974 $x9968)))
(let (($x9999 (and $x8667 $x3769 $x9991)))
(let (($x8913 (forall ((?v0 Int) )(let ((?x3765 (b_S_read_n_u1$ v_b_S_s$ (b_S_idx$ (b_S_ptr$ b_T_T_u1$ v_b_P_H_arr$) ?v0 b_T_T_u1$))))
(let (($x3766 (<= ?x3765 v_b_L_H_max_G_0$)))
(let (($x8887 (<= 1 ?v0)))
(let (($x8888 (not $x8887)))
(let (($x1344 (<= ?v0 b_S_max_o_u4$)))
(let (($x1212 (<= 0 ?v0)))
(let (($x8899 (and $x1212 $x1344 $x8888)))
(or (not $x8899) $x3766)))))))))
))
(let (($x10008 (or (not $x8913) $x9999)))
(let (($x10013 (and $x8913 $x10008)))
(let (($x10020 (or (not (<= 1 v_b_P_H_len$)) $x10013)))
(let (($x3761 (<= 1 v_b_P_H_len$)))
(let (($x10025 (and $x3761 $x10020)))
(let (($x3750 (b_S_local_n_value_n_is$ v_b_S_s$ b_H_tok_S_1_T_16_o_8$ b_H_loc_o_p$ 1 b_T_T_u4$)))
(let (($x3749 (b_S_local_n_value_n_is$ v_b_S_s$ b_H_tok_S_1_T_14_o_3$ b_H_loc_o_witness$ 0 b_T_T_u4$)))
(let (($x3748 (b_S_local_n_value_n_is$ v_b_S_s$ b_H_tok_S_1_T_12_o_3$ b_H_loc_o_max$ v_b_L_H_max_G_0$ b_T_T_u1$)))
(let (($x3747 (= v_b_L_H_max_G_0$ ?x3746)))
(let (($x3743 (b_S_thread_n_local$ v_b_S_s$ ?x3739)))
(let (($x8880 (and $x3740 $x3743 $x3747 $x3748 $x3749 $x3750)))
(let (($x10031 (not $x8880)))
(let (($x10032 (or $x10031 $x10025)))
(let (($x10040 (and $x3740 $x3743 $x10032)))
(let (($x3741 (b_S_typed$ v_b_S_s$ ?x3739)))
(let (($x3742 (and $x3740 $x3741)))
(let (($x10048 (not $x3742)))
(let (($x10049 (or $x10048 $x10040)))
(let (($x10057 (and $x3740 $x3741 $x10049)))
(let (($x3738 (b_S_in_n_domain_n_lab$ v_b_S_s$ ?x3682 ?x3682 b_l_H_public$)))
(let (($x10065 (not $x3738)))
(let (($x10066 (or $x10065 $x10057)))
(let (($x10071 (and $x3738 $x10066)))
(let (($x10078 (or (not $x8820) $x10071)))
(let (($x3844 (exists ((?v0 Int) )(let ((?x3765 (b_S_read_n_u1$ v_b_S_s$ (b_S_idx$ (b_S_ptr$ b_T_T_u1$ v_b_P_H_arr$) ?v0 b_T_T_u1$))))
(let (($x3840 (= ?x3765 v_b_S_result_G_0$)))
(let (($x3835 (< ?v0 v_b_P_H_len$)))
(let (($x1344 (<= ?v0 b_S_max_o_u4$)))
(let (($x3842 (and $x1344 (and $x3835 $x3840))))
(let (($x1212 (<= 0 ?v0)))
(and $x1212 $x3842))))))))
))
(let (($x3845 (=> $x3844 true)))
(let (($x3846 (and $x3844 $x3845)))
(let (($x3839 (forall ((?v0 Int) )(let ((?x3765 (b_S_read_n_u1$ v_b_S_s$ (b_S_idx$ (b_S_ptr$ b_T_T_u1$ v_b_P_H_arr$) ?v0 b_T_T_u1$))))
(let (($x3837 (<= ?x3765 v_b_S_result_G_0$)))
(let (($x3835 (< ?v0 v_b_P_H_len$)))
(let (($x1344 (<= ?v0 b_S_max_o_u4$)))
(let (($x1212 (<= 0 ?v0)))
(let (($x1345 (and $x1212 $x1344)))
(let (($x3836 (and $x1345 $x3835)))
(=> $x3836 $x3837)))))))))
))
(let (($x3847 (=> $x3839 $x3846)))
(let (($x3827 (and $x3820 (and $x3822 (and $x3824 true)))))
(let (($x3828 (and $x3818 $x3827)))
(let (($x3829 (and true $x3828)))
(let (($x3784 (and $x3783 $x3776)))
(let (($x3830 (and $x3784 $x3829)))
(let (($x3831 (and $x3784 $x3830)))
(let (($x3832 (and true $x3831)))
(let (($x3833 (and $x3784 $x3832)))
(let (($x3834 (and b_S_position_n_marker$ $x3833)))
(let (($x3849 (=> $x3834 (and $x3839 $x3847))))
(let (($x3850 (and b_S_position_n_marker$ $x3849)))
(let (($x3808 (and true $x3784)))
(let (($x3809 (and $x3784 $x3808)))
(let (($x4013 (and $x3784 $x3809)))
(let (($x4014 (and true $x4013)))
(let (($x4015 (and $x3784 $x4014)))
(let (($x4012 (<= v_b_P_H_len$ v_b_L_H_p_G_0$)))
(let (($x4016 (and $x4012 $x4015)))
(let (($x4017 (and $x3784 $x4016)))
(let (($x4018 (and true $x4017)))
(let (($x4019 (=> $x4018 $x3850)))
(let (($x3977 (and (< v_b_SL_H_witness_G_1$ v_b_P_H_len$) $x3976)))
(let (($x3978 (and $x3977 false)))
(let (($x3979 (=> $x3978 true)))
(let (($x3980 (and $x3977 $x3979)))
(let (($x3972 (forall ((?v0 Int) )(let ((?x3765 (b_S_read_n_u1$ v_b_S_s$ (b_S_idx$ (b_S_ptr$ b_T_T_u1$ v_b_P_H_arr$) ?v0 b_T_T_u1$))))
(let (($x3970 (<= ?x3765 v_b_L_H_max_G_3$)))
(let (($x1344 (<= ?v0 b_S_max_o_u4$)))
(let (($x1212 (<= 0 ?v0)))
(let (($x1345 (and $x1212 $x1344)))
(let (($x3969 (and $x1345 (< ?v0 v_b_L_H_p_G_1$))))
(=> $x3969 $x3970))))))))
))
(let (($x3981 (=> $x3972 $x3980)))
(let (($x3983 (=> $x3967 (and $x3972 $x3981))))
(let (($x3962 (and $x3961 $x3943)))
(let (($x3963 (and $x3962 true)))
(let (($x3964 (and $x3960 $x3963)))
(let (($x3965 (and (= v_b_L_H_p_G_1$ (+ v_b_L_H_p_G_0$ 1)) $x3964)))
(let ((?x3954 (+ v_b_L_H_p_G_0$ 1)))
(let (($x3956 (<= ?x3954 b_S_max_o_u4$)))
(let (($x3955 (<= 0 ?x3954)))
(let (($x3957 (and $x3955 $x3956)))
(let (($x3966 (and $x3957 $x3965)))
(let (($x3985 (=> $x3966 (and $x3967 $x3983))))
(let (($x3986 (and $x3957 $x3985)))
(let (($x3944 (and $x3783 $x3943)))
(let (($x3945 (and true $x3944)))
(let (($x3995 (and $x3994 $x3945)))
(let (($x3996 (and $x3993 $x3995)))
(let (($x3997 (and true $x3996)))
(let (($x3998 (and $x3784 $x3997)))
(let (($x3999 (and $x3784 $x3998)))
(let (($x4000 (and true $x3999)))
(let (($x4001 (and $x3784 $x4000)))
(let (($x4002 (and $x3992 $x4001)))
(let (($x4003 (and $x3784 $x4002)))
(let (($x4004 (and true $x4003)))
(let (($x4005 (=> $x4004 $x3986)))
(let (($x3946 (and $x3942 $x3945)))
(let (($x3947 (and $x3940 $x3946)))
(let (($x3948 (and true $x3947)))
(let (($x3938 (and $x3783 $x3783)))
(let (($x3949 (and $x3938 $x3948)))
(let (($x3950 (and $x3937 $x3949)))
(let (($x3951 (and $x3936 $x3950)))
(let (($x3952 (and $x3935 $x3951)))
(let (($x3927 (and $x3923 $x3926)))
(let (($x3953 (and $x3927 $x3952)))
(let (($x3987 (=> $x3953 $x3986)))
(let (($x3988 (and $x3927 $x3987)))
(let (($x3989 (=> $x3925 $x3988)))
(let (($x3990 (and $x3925 $x3989)))
(let (($x3931 (and (< v_b_L_H_max_G_1$ ?x3929) $x3809)))
(let (($x3932 (and $x3784 $x3931)))
(let (($x3933 (and true $x3932)))
(let (($x3991 (=> $x3933 $x3990)))
(let (($x3928 (and $x3927 $x3784)))
(let (($x4007 (=> $x3928 (and $x3991 $x4005))))
(let (($x4008 (and $x3927 $x4007)))
(let (($x4009 (=> $x3925 $x4008)))
(let (($x4010 (and $x3925 $x4009)))
(let (($x3919 (and (< v_b_L_H_p_G_0$ v_b_P_H_len$) $x3809)))
(let (($x3920 (and $x3784 $x3919)))
(let (($x3921 (and true $x3920)))
(let (($x4011 (=> $x3921 $x4010)))
(let (($x3902 (and (= ?x3874 ?x3874) (= (b_S_statusmap$ v_b_S_s$) (b_S_statusmap$ v_b_S_s$)))))
(let (($x3903 (and $x3902 $x3784)))
(let (($x3904 (and (and $x3897 $x3898) $x3903)))
(let (($x3905 (and $x3896 $x3904)))
(let (($x3906 (and $x3895 $x3905)))
(let (($x3907 (and $x3894 $x3906)))
(let (($x3908 (and $x3893 $x3907)))
(let (($x3807 (and $x3806 $x3699)))
(let (($x3909 (and $x3807 $x3908)))
(let (($x3885 (forall ((?v0 B_S_ptr$) )(!(let ((?x3882 (b_S_timestamp$ v_b_S_s$ ?v0)))
(<= ?x3882 ?x3882)) :pattern ( (b_S_timestamp$ v_b_S_s$ ?v0) )))
))
(let (($x3887 (and $x3885 $x3886)))
(let (($x3888 (and (<= ?x3713 ?x3713) $x3887)))
(let (($x3910 (and $x3888 $x3909)))
(let (($x3880 (forall ((?v0 B_S_ptr$) )(!(let (($x3862 (b_S_thread_n_local$ v_b_S_s$ ?v0)))
(let ((?x3874 (b_S_typemap$ v_b_S_s$)))
(let ((?x3875 (b_S_select_o_tm$ ?x3874 ?v0)))
(let (($x3877 (and (= ?x3875 ?x3875) $x3862)))
(=> $x3862 $x3877))))) :pattern ( (b_S_select_o_tm$ (b_S_typemap$ v_b_S_s$) ?v0) )))
))
(let (($x3889 (and $x3880 $x3888)))
(let (($x3873 (forall ((?v0 B_S_ptr$) )(!(let (($x3862 (b_S_thread_n_local$ v_b_S_s$ ?v0)))
(let ((?x3858 (b_S_statusmap$ v_b_S_s$)))
(let ((?x3859 (b_S_select_o_sm$ ?x3858 ?v0)))
(let (($x3871 (and (= ?x3859 ?x3859) $x3862)))
(=> $x3862 $x3871))))) :pattern ( (b_S_select_o_sm$ (b_S_statusmap$ v_b_S_s$) ?v0) )))
))
(let (($x3890 (and $x3873 $x3889)))
(let (($x3869 (forall ((?v0 B_S_ptr$) )(!(let (($x3862 (b_S_thread_n_local$ v_b_S_s$ ?v0)))
(let ((?x3864 (b_S_select_o_mem$ (b_S_memory$ v_b_S_s$) ?v0)))
(let (($x3866 (and (= ?x3864 ?x3864) $x3862)))
(=> $x3862 $x3866)))) :pattern ( (b_S_select_o_mem$ (b_S_memory$ v_b_S_s$) ?v0) )))
))
(let (($x3891 (and $x3869 $x3890)))
(let (($x3861 (forall ((?v0 B_S_ptr$) )(!(let (($x3855 (= (b_S_kind_n_of$ (b_S_typ$ (b_S_owner$ v_b_S_s$ ?v0))) b_S_kind_n_thread$)))
(=> (not $x3855) (not $x3855))) :pattern ( (b_S_select_o_sm$ (b_S_statusmap$ v_b_S_s$) ?v0) )))
))
(let (($x3892 (and $x3861 $x3891)))
(let (($x3911 (and $x3892 $x3910)))
(let (($x3912 (and $x3784 $x3911)))
(let (($x3913 (and true $x3912)))
(let (($x3914 (and $x3784 $x3913)))
(let (($x3915 (and true $x3914)))
(let (($x3916 (and $x3784 $x3915)))
(let (($x3917 (and true $x3916)))
(let (($x4021 (=> $x3917 (and $x4011 $x4019))))
(let (($x3810 (and $x3807 $x3809)))
(let (($x3811 (and $x3784 $x3810)))
(let (($x3812 (and true $x3811)))
(let (($x3813 (and $x3784 $x3812)))
(let (($x3805 (not true)))
(let (($x3814 (and $x3805 $x3813)))
(let (($x3815 (and $x3784 $x3814)))
(let (($x3816 (and true $x3815)))
(let (($x3851 (=> $x3816 $x3850)))
(let (($x4022 (and $x3851 $x4021)))
(let (($x3796 (and (and (< v_b_SL_H_witness_G_0$ v_b_P_H_len$) $x3794) $x3784)))
(let (($x3790 (forall ((?v0 Int) )(let ((?x3765 (b_S_read_n_u1$ v_b_S_s$ (b_S_idx$ (b_S_ptr$ b_T_T_u1$ v_b_P_H_arr$) ?v0 b_T_T_u1$))))
(let (($x3788 (<= ?x3765 v_b_L_H_max_G_1$)))
(let (($x1344 (<= ?v0 b_S_max_o_u4$)))
(let (($x1212 (<= 0 ?v0)))
(let (($x1345 (and $x1212 $x1344)))
(let (($x3787 (and $x1345 (< ?v0 v_b_L_H_p_G_0$))))
(=> $x3787 $x3788))))))))
))
(let (($x3797 (and $x3790 $x3796)))
(let (($x3798 (and $x3785 $x3797)))
(let (($x3799 (and $x3784 $x3798)))
(let (($x3782 (and $x3780 $x3781)))
(let (($x3800 (and $x3782 $x3799)))
(let (($x3778 (and $x3776 $x3777)))
(let (($x3801 (and $x3778 $x3800)))
(let (($x3774 (and $x3772 $x3773)))
(let (($x3802 (and $x3774 $x3801)))
(let (($x3803 (and true $x3802)))
(let (($x3676 (< 0 v_b_P_H_len$)))
(let (($x3770 (and $x3676 $x3769)))
(let (($x3804 (and $x3770 $x3803)))
(let (($x4023 (=> $x3804 $x4022)))
(let (($x4024 (and $x3770 $x4023)))
(let (($x3768 (forall ((?v0 Int) )(let ((?x3765 (b_S_read_n_u1$ v_b_S_s$ (b_S_idx$ (b_S_ptr$ b_T_T_u1$ v_b_P_H_arr$) ?v0 b_T_T_u1$))))
(let (($x3766 (<= ?x3765 v_b_L_H_max_G_0$)))
(let (($x1344 (<= ?v0 b_S_max_o_u4$)))
(let (($x1212 (<= 0 ?v0)))
(let (($x1345 (and $x1212 $x1344)))
(let (($x3763 (and $x1345 (< ?v0 1))))
(=> $x3763 $x3766))))))))
))
(let (($x4025 (=> $x3768 $x4024)))
(let (($x4027 (=> $x3761 (and $x3768 $x4025))))
(let (($x3752 (<= 0 0)))
(let (($x3753 (and $x3752 $x3752)))
(let (($x3751 (<= 1 1)))
(let (($x3754 (and $x3751 $x3753)))
(let (($x3755 (and $x3751 $x3754)))
(let (($x3756 (and $x3750 $x3755)))
(let (($x3758 (and $x3748 (and $x3749 $x3756))))
(let (($x3759 (and $x3747 $x3758)))
(let (($x3744 (and $x3740 $x3743)))
(let (($x3760 (and $x3744 $x3759)))
(let (($x4029 (=> $x3760 (and $x3761 $x4027))))
(let (($x4030 (and $x3744 $x4029)))
(let (($x4031 (=> $x3742 $x4030)))
(let (($x4032 (and $x3742 $x4031)))
(let (($x4033 (=> $x3738 $x4032)))
(let (($x3721 (and $x3719 $x3720)))
(let (($x3718 (forall ((?v0 B_S_ptr$) )(!(let (($x3715 (b_S_in_n_writes_n_at$ v_b_H_wrTime_S_1_T_6_o_1$ ?v0)))
(= $x3715 false)) :pattern ( (b_S_in_n_writes_n_at$ v_b_H_wrTime_S_1_T_6_o_1$ ?v0) )))
))
(let (($x3722 (and $x3718 $x3721)))
(let (($x3723 (and $x3714 $x3722)))
(let (($x3724 (and $x3711 $x3723)))
(let (($x3725 (and (and $x3708 $x3709) $x3724)))
(let (($x3706 (forall ((?v0 B_S_pure_n_function$) )(!(let ((?x3702 (b_S_frame_n_level$ ?v0)))
(< ?x3702 b_S_current_n_frame_n_level$)) :pattern ( (b_S_frame_n_level$ ?v0) )))
))
(let (($x3726 (and $x3706 $x3725)))
(let (($x3727 (and (and $x3698 $x3699) $x3726)))
(let (($x3728 (and $x3697 $x3727)))
(let (($x3729 (and true $x3728)))
(let (($x3694 (and $x3686 (and $x3687 (and $x3690 $x3691)))))
(let (($x3695 (and $x3685 $x3694)))
(let (($x3696 (and $x3683 $x3695)))
(let (($x3730 (and $x3696 $x3729)))
(let (($x3731 (and $x3676 $x3730)))
(let (($x3732 (and (< v_b_P_H_len$ 1099511627776) $x3731)))
(let (($x3673 (and $x3671 $x3672)))
(let (($x3733 (and $x3673 $x3732)))
(let (($x3669 (and $x3667 $x3668)))
(let (($x3734 (and $x3669 $x3733)))
(let (($x3665 (and $x3663 (<= v_b_L_H_max$ b_S_max_o_u1$))))
(let (($x3735 (and $x3665 $x3734)))
(let (($x3736 (and true $x3735)))
(let (($x4035 (=> $x3736 (and $x3738 $x4033))))
(let (($x4036 (not $x4035)))
(let ((?x3765 (b_S_read_n_u1$ v_b_S_s$ (b_S_idx$ ?x3680 ?0 b_T_T_u1$))))
(let (($x3840 (= ?x3765 v_b_S_result_G_0$)))
(let (($x9165 (not (<= v_b_P_H_len$ ?0))))
(let (($x1344 (<= ?0 b_S_max_o_u4$)))
(let (($x1212 (<= 0 ?0)))
(let (($x9202 (and $x1212 $x1344 $x9165 $x3840)))
(let (($x3842 (and $x1344 (and (< ?0 v_b_P_H_len$) $x3840))))
(let (($x3843 (and $x1212 $x3842)))
(let ((@x9190 (monotonicity (rewrite (= (< ?0 v_b_P_H_len$) $x9165)) (= (and (< ?0 v_b_P_H_len$) $x3840) (and $x9165 $x3840)))))
(let ((@x9198 (trans (monotonicity @x9190 (= $x3842 (and $x1344 (and $x9165 $x3840)))) (rewrite (= (and $x1344 (and $x9165 $x3840)) (and $x1344 $x9165 $x3840))) (= $x3842 (and $x1344 $x9165 $x3840)))))
(let ((@x5396 (rewrite (= $x1212 $x1212))))
(let ((@x9206 (trans (monotonicity @x5396 @x9198 (= $x3843 (and $x1212 (and $x1344 $x9165 $x3840)))) (rewrite (= (and $x1212 (and $x1344 $x9165 $x3840)) $x9202)) (= $x3843 $x9202))))
(let ((@x9212 (monotonicity (quant-intro @x9206 (= $x3844 $x9207)) (= $x3845 (=> $x9207 true)))))
(let ((@x9216 (trans @x9212 (rewrite (= (=> $x9207 true) true)) (= $x3845 true))))
(let ((@x9219 (monotonicity (quant-intro @x9206 (= $x3844 $x9207)) @x9216 (= $x3846 (and $x9207 true)))))
(let (($x3837 (<= ?x3765 v_b_S_result_G_0$)))
(let (($x9180 (or (not (and $x1212 $x1344 $x9165)) $x3837)))
(let (($x3835 (< ?0 v_b_P_H_len$)))
(let (($x1345 (and $x1212 $x1344)))
(let (($x3836 (and $x1345 $x3835)))
(let (($x3838 (=> $x3836 $x3837)))
(let ((@x5523 (monotonicity @x5396 (= $x1345 $x1345))))
(let ((@x9170 (monotonicity @x5523 (rewrite (= $x3835 $x9165)) (= $x3836 (and $x1345 $x9165)))))
(let ((@x9175 (trans @x9170 (rewrite (= (and $x1345 $x9165) (and $x1212 $x1344 $x9165))) (= $x3836 (and $x1212 $x1344 $x9165)))))
(let ((@x9184 (trans (monotonicity @x9175 (= $x3838 (=> (and $x1212 $x1344 $x9165) $x3837))) (rewrite (= (=> (and $x1212 $x1344 $x9165) $x3837) $x9180)) (= $x3838 $x9180))))
(let ((@x9226 (monotonicity (quant-intro @x9184 (= $x3839 $x9185)) (trans @x9219 (rewrite (= (and $x9207 true) $x9207)) (= $x3846 $x9207)) (= $x3847 (=> $x9185 $x9207)))))
(let ((@x9235 (monotonicity (quant-intro @x9184 (= $x3839 $x9185)) (trans @x9226 (rewrite (= (=> $x9185 $x9207) $x9228)) (= $x3847 $x9228)) (= (and $x3839 $x3847) $x9233))))
(let (($x9160 (= (and b_S_position_n_marker$ (and $x3783 $x3776 $x3818 $x3820 $x3822 $x3824)) $x9159)))
(let (($x9157 (= $x3834 (and b_S_position_n_marker$ (and $x3783 $x3776 $x3818 $x3820 $x3822 $x3824)))))
(let (($x9133 (and $x3783 $x3776 $x3818 $x3820 $x3822 $x3824)))
(let (($x9138 (and $x3784 $x9133)))
(let (($x9118 (and $x3818 $x3820 $x3822 $x3824)))
(let ((@x9106 (monotonicity (rewrite (= (and $x3824 true) $x3824)) (= (and $x3822 (and $x3824 true)) (and $x3822 $x3824)))))
(let ((@x9114 (trans (monotonicity @x9106 (= $x3827 (and $x3820 (and $x3822 $x3824)))) (rewrite (= (and $x3820 (and $x3822 $x3824)) (and $x3820 $x3822 $x3824))) (= $x3827 (and $x3820 $x3822 $x3824)))))
(let ((@x9122 (trans (monotonicity @x9114 (= $x3828 (and $x3818 (and $x3820 $x3822 $x3824)))) (rewrite (= (and $x3818 (and $x3820 $x3822 $x3824)) $x9118)) (= $x3828 $x9118))))
(let ((@x9129 (trans (monotonicity @x9122 (= $x3829 (and true $x9118))) (rewrite (= (and true $x9118) $x9118)) (= $x3829 $x9118))))
(let ((@x8932 (rewrite (= $x3783 $x3783))))
(let ((@x8934 (monotonicity @x8932 (rewrite (= $x3776 $x3776)) (= $x3784 $x3784))))
(let ((@x9137 (trans (monotonicity @x8934 @x9129 (= $x3830 (and $x3784 $x9118))) (rewrite (= (and $x3784 $x9118) $x9133)) (= $x3830 $x9133))))
(let ((@x9144 (trans (monotonicity @x8934 @x9137 (= $x3831 $x9138)) (rewrite (= $x9138 $x9133)) (= $x3831 $x9133))))
(let ((@x9151 (trans (monotonicity @x9144 (= $x3832 (and true $x9133))) (rewrite (= (and true $x9133) $x9133)) (= $x3832 $x9133))))
(let ((@x9155 (trans (monotonicity @x8934 @x9151 (= $x3833 $x9138)) (rewrite (= $x9138 $x9133)) (= $x3833 $x9133))))
(let ((@x9238 (monotonicity (trans (monotonicity @x9155 $x9157) (rewrite $x9160) (= $x3834 $x9159)) @x9235 (= $x3849 (=> $x9159 $x9233)))))
(let ((@x9247 (monotonicity (trans @x9238 (rewrite (= (=> $x9159 $x9233) $x9240)) (= $x3849 $x9240)) (= $x3850 $x9245))))
(let ((@x9956 (rewrite (= (and true (and $x3783 $x3776 $x4012)) (and $x3783 $x3776 $x4012)))))
(let ((@x9048 (rewrite (= (and $x3784 $x3784) $x3784))))
(let ((@x9042 (rewrite (= $x3808 $x3784))))
(let ((@x9046 (monotonicity @x8934 (trans (monotonicity @x8934 (= $x3808 $x3808)) @x9042 (= $x3808 $x3784)) (= $x3809 (and $x3784 $x3784)))))
(let ((@x9050 (trans @x9046 @x9048 (= $x3809 $x3784))))
(let ((@x9927 (trans (monotonicity @x8934 @x9050 (= $x4013 (and $x3784 $x3784))) @x9048 (= $x4013 $x3784))))
(let ((@x9933 (monotonicity @x8934 (trans (monotonicity @x9927 (= $x4014 $x3808)) @x9042 (= $x4014 $x3784)) (= $x4015 (and $x3784 $x3784)))))
(let ((@x9938 (monotonicity (trans @x9933 @x9048 (= $x4015 $x3784)) (= $x4016 (and $x4012 $x3784)))))
(let ((@x9943 (trans @x9938 (rewrite (= (and $x4012 $x3784) (and $x4012 $x3783 $x3776))) (= $x4016 (and $x4012 $x3783 $x3776)))))
(let ((@x9951 (trans (monotonicity @x8934 @x9943 (= $x4017 (and $x3784 (and $x4012 $x3783 $x3776)))) (rewrite (= (and $x3784 (and $x4012 $x3783 $x3776)) (and $x3783 $x3776 $x4012))) (= $x4017 (and $x3783 $x3776 $x4012)))))
(let ((@x9958 (trans (monotonicity @x9951 (= $x4018 (and true (and $x3783 $x3776 $x4012)))) @x9956 (= $x4018 (and $x3783 $x3776 $x4012)))))
(let ((@x9967 (trans (monotonicity @x9958 @x9247 (= $x4019 (=> (and $x3783 $x3776 $x4012) $x9245))) (rewrite (= (=> (and $x3783 $x3776 $x4012) $x9245) $x9963)) (= $x4019 $x9963))))
(let ((@x9692 (monotonicity (rewrite (= (< v_b_SL_H_witness_G_1$ v_b_P_H_len$) $x9687)) (= $x3977 $x9690))))
(let ((@x9699 (trans (monotonicity @x9692 (= $x3978 (and $x9690 false))) (rewrite (= (and $x9690 false) false)) (= $x3978 false))))
(let ((@x9706 (trans (monotonicity @x9699 (= $x3979 (=> false true))) (rewrite (= (=> false true) true)) (= $x3979 true))))
(let ((@x9713 (trans (monotonicity @x9692 @x9706 (= $x3980 (and $x9690 true))) (rewrite (= (and $x9690 true) $x9690)) (= $x3980 $x9690))))
(let (($x3970 (<= ?x3765 v_b_L_H_max_G_3$)))
(let (($x9678 (or (not (and $x1212 $x1344 (not (<= v_b_L_H_p_G_1$ ?0)))) $x3970)))
(let (($x3969 (and $x1345 (< ?0 v_b_L_H_p_G_1$))))
(let (($x3971 (=> $x3969 $x3970)))
(let ((@x9680 (rewrite (= (=> (and $x1212 $x1344 (not (<= v_b_L_H_p_G_1$ ?0))) $x3970) $x9678))))
(let (($x9663 (not (<= v_b_L_H_p_G_1$ ?0))))
(let (($x9669 (and $x1212 $x1344 $x9663)))
(let ((@x9668 (monotonicity @x5523 (rewrite (= (< ?0 v_b_L_H_p_G_1$) $x9663)) (= $x3969 (and $x1345 $x9663)))))
(let ((@x9676 (monotonicity (trans @x9668 (rewrite (= (and $x1345 $x9663) $x9669)) (= $x3969 $x9669)) (= $x3971 (=> $x9669 $x3970)))))
(let ((@x9716 (monotonicity (quant-intro (trans @x9676 @x9680 (= $x3971 $x9678)) (= $x3972 $x9683)) @x9713 (= $x3981 (=> $x9683 $x9690)))))
(let ((@x9725 (monotonicity (quant-intro (trans @x9676 @x9680 (= $x3971 $x9678)) (= $x3972 $x9683)) (trans @x9716 (rewrite (= (=> $x9683 $x9690) $x9718)) (= $x3981 $x9718)) (= (and $x3972 $x3981) $x9723))))
(let ((@x9734 (trans (monotonicity @x9725 (= $x3983 (=> $x3967 $x9723))) (rewrite (= (=> $x3967 $x9723) $x9730)) (= $x3983 $x9730))))
(let ((@x9651 (rewrite (= (and $x9623 (and $x3960 $x3961 $x3943)) (and $x9623 $x3960 $x3961 $x3943)))))
(let ((@x9632 (monotonicity (rewrite (= $x3961 $x3961)) (rewrite (= $x3943 $x3943)) (= $x3962 $x3962))))
(let ((@x9637 (trans (monotonicity @x9632 (= $x3963 $x3963)) (rewrite (= $x3963 $x3962)) (= $x3963 $x3962))))
(let ((@x9645 (trans (monotonicity @x9637 (= $x3964 (and $x3960 $x3962))) (rewrite (= (and $x3960 $x3962) (and $x3960 $x3961 $x3943))) (= $x3964 (and $x3960 $x3961 $x3943)))))
(let ((@x9602 (rewrite (= ?x3954 ?x9600))))
(let ((@x9628 (trans (monotonicity @x9602 (= (= v_b_L_H_p_G_1$ ?x3954) $x9623)) (rewrite (= $x9623 $x9623)) (= (= v_b_L_H_p_G_1$ ?x3954) $x9623))))
(let ((@x9653 (trans (monotonicity @x9628 @x9645 (= $x3965 (and $x9623 (and $x3960 $x3961 $x3943)))) @x9651 (= $x3965 (and $x9623 $x3960 $x3961 $x3943)))))
(let ((@x9619 (trans (monotonicity @x9602 (= $x3956 (<= ?x9600 b_S_max_o_u4$))) (rewrite (= (<= ?x9600 b_S_max_o_u4$) $x9615)) (= $x3956 $x9615))))
(let ((@x9610 (trans (monotonicity @x9602 (= $x3955 (<= 0 ?x9600))) (rewrite (= (<= 0 ?x9600) $x9606)) (= $x3955 $x9606))))
(let ((@x9656 (monotonicity (monotonicity @x9610 @x9619 (= $x3957 (and $x9606 $x9615))) @x9653 (= $x3966 (and (and $x9606 $x9615) (and $x9623 $x3960 $x3961 $x3943))))))
(let ((@x9661 (trans @x9656 (rewrite (= (and (and $x9606 $x9615) (and $x9623 $x3960 $x3961 $x3943)) $x9657)) (= $x3966 $x9657))))
(let ((@x9740 (monotonicity @x9661 (monotonicity @x9734 (= (and $x3967 $x3983) $x9735)) (= $x3985 (=> $x9657 $x9735)))))
(let ((@x9749 (monotonicity (monotonicity @x9610 @x9619 (= $x3957 (and $x9606 $x9615))) (trans @x9740 (rewrite (= (=> $x9657 $x9735) $x9742)) (= $x3985 $x9742)) (= $x3986 (and (and $x9606 $x9615) $x9742)))))
(let ((@x9754 (trans @x9749 (rewrite (= (and (and $x9606 $x9615) $x9742) $x9750)) (= $x3986 $x9750))))
(let (($x9850 (and $x3992 $x3783 $x3776 $x3993 $x3994 $x3943)))
(let (($x9824 (and $x3783 $x3776 $x3993 $x3994 $x3943)))
(let (($x9829 (and $x3784 $x9824)))
(let (($x9809 (and $x3993 $x3994 $x3783 $x3943)))
(let ((@x9533 (monotonicity (monotonicity @x8932 (rewrite (= $x3943 $x3943)) (= $x3944 $x3944)) (= $x3945 $x3945))))
(let ((@x9800 (monotonicity (trans @x9533 (rewrite (= $x3945 $x3944)) (= $x3945 $x3944)) (= $x3995 (and $x3994 $x3944)))))
(let ((@x9805 (trans @x9800 (rewrite (= (and $x3994 $x3944) (and $x3994 $x3783 $x3943))) (= $x3995 (and $x3994 $x3783 $x3943)))))
(let ((@x9813 (trans (monotonicity @x9805 (= $x3996 (and $x3993 (and $x3994 $x3783 $x3943)))) (rewrite (= (and $x3993 (and $x3994 $x3783 $x3943)) $x9809)) (= $x3996 $x9809))))
(let ((@x9820 (trans (monotonicity @x9813 (= $x3997 (and true $x9809))) (rewrite (= (and true $x9809) $x9809)) (= $x3997 $x9809))))
(let ((@x9828 (trans (monotonicity @x8934 @x9820 (= $x3998 (and $x3784 $x9809))) (rewrite (= (and $x3784 $x9809) $x9824)) (= $x3998 $x9824))))
(let ((@x9835 (trans (monotonicity @x8934 @x9828 (= $x3999 $x9829)) (rewrite (= $x9829 $x9824)) (= $x3999 $x9824))))
(let ((@x9842 (trans (monotonicity @x9835 (= $x4000 (and true $x9824))) (rewrite (= (and true $x9824) $x9824)) (= $x4000 $x9824))))
(let ((@x9846 (trans (monotonicity @x8934 @x9842 (= $x4001 $x9829)) (rewrite (= $x9829 $x9824)) (= $x4001 $x9824))))
(let ((@x9854 (trans (monotonicity @x9846 (= $x4002 (and $x3992 $x9824))) (rewrite (= (and $x3992 $x9824) $x9850)) (= $x4002 $x9850))))
(let ((@x9862 (trans (monotonicity @x8934 @x9854 (= $x4003 (and $x3784 $x9850))) (rewrite (= (and $x3784 $x9850) $x9858)) (= $x4003 $x9858))))
(let ((@x9869 (trans (monotonicity @x9862 (= $x4004 (and true $x9858))) (rewrite (= (and true $x9858) $x9858)) (= $x4004 $x9858))))
(let ((@x9878 (trans (monotonicity @x9869 @x9754 (= $x4005 (=> $x9858 $x9750))) (rewrite (= (=> $x9858 $x9750) $x9874)) (= $x4005 $x9874))))
(let ((@x9597 (rewrite (= (and $x3927 (and $x3935 $x3936 $x3937 $x3783 $x3940 $x3942 $x3943)) $x9595))))
(let (($x9587 (and $x3935 $x3936 $x3937 $x3783 $x3940 $x3942 $x3943)))
(let (($x9579 (and $x3936 $x3937 $x3783 $x3940 $x3942 $x3943)))
(let (($x9571 (and $x3937 $x3783 $x3940 $x3942 $x3943)))
(let (($x9563 (and $x3783 $x3940 $x3942 $x3943)))
(let (($x9548 (and $x3940 $x3942 $x3783 $x3943)))
(let ((@x9539 (monotonicity (trans @x9533 (rewrite (= $x3945 $x3944)) (= $x3945 $x3944)) (= $x3946 (and $x3942 $x3944)))))
(let ((@x9544 (trans @x9539 (rewrite (= (and $x3942 $x3944) (and $x3942 $x3783 $x3943))) (= $x3946 (and $x3942 $x3783 $x3943)))))
(let ((@x9552 (trans (monotonicity @x9544 (= $x3947 (and $x3940 (and $x3942 $x3783 $x3943)))) (rewrite (= (and $x3940 (and $x3942 $x3783 $x3943)) $x9548)) (= $x3947 $x9548))))
(let ((@x9559 (trans (monotonicity @x9552 (= $x3948 (and true $x9548))) (rewrite (= (and true $x9548) $x9548)) (= $x3948 $x9548))))
(let ((@x9527 (trans (monotonicity @x8932 @x8932 (= $x3938 $x3938)) (rewrite (= $x3938 $x3783)) (= $x3938 $x3783))))
(let ((@x9567 (trans (monotonicity @x9527 @x9559 (= $x3949 (and $x3783 $x9548))) (rewrite (= (and $x3783 $x9548) $x9563)) (= $x3949 $x9563))))
(let ((@x9575 (trans (monotonicity @x9567 (= $x3950 (and $x3937 $x9563))) (rewrite (= (and $x3937 $x9563) $x9571)) (= $x3950 $x9571))))
(let ((@x9583 (trans (monotonicity @x9575 (= $x3951 (and $x3936 $x9571))) (rewrite (= (and $x3936 $x9571) $x9579)) (= $x3951 $x9579))))
(let ((@x9591 (trans (monotonicity @x9583 (= $x3952 (and $x3935 $x9579))) (rewrite (= (and $x3935 $x9579) $x9587)) (= $x3952 $x9587))))
(let ((@x9599 (trans (monotonicity @x9591 (= $x3953 (and $x3927 $x9587))) @x9597 (= $x3953 $x9595))))
(let ((@x9763 (trans (monotonicity @x9599 @x9754 (= $x3987 (=> $x9595 $x9750))) (rewrite (= (=> $x9595 $x9750) $x9759)) (= $x3987 $x9759))))
(let ((@x9771 (trans (monotonicity @x9763 (= $x3988 (and $x3927 $x9759))) (rewrite (= (and $x3927 $x9759) $x9767)) (= $x3988 $x9767))))
(let ((@x9780 (trans (monotonicity @x9771 (= $x3989 (=> $x3925 $x9767))) (rewrite (= (=> $x3925 $x9767) $x9776)) (= $x3989 $x9776))))
(let ((@x9788 (trans (monotonicity @x9780 (= $x3990 (and $x3925 $x9776))) (rewrite (= (and $x3925 $x9776) $x9784)) (= $x3990 $x9784))))
(let (($x9497 (not $x3992)))
(let (($x9511 (and $x3783 $x3776 $x9497)))
(let ((@x9502 (monotonicity (rewrite (= (< v_b_L_H_max_G_1$ ?x3929) $x9497)) @x9050 (= $x3931 (and $x9497 $x3784)))))
(let ((@x9507 (trans @x9502 (rewrite (= (and $x9497 $x3784) (and $x9497 $x3783 $x3776))) (= $x3931 (and $x9497 $x3783 $x3776)))))
(let ((@x9515 (trans (monotonicity @x8934 @x9507 (= $x3932 (and $x3784 (and $x9497 $x3783 $x3776)))) (rewrite (= (and $x3784 (and $x9497 $x3783 $x3776)) $x9511)) (= $x3932 $x9511))))
(let ((@x9522 (trans (monotonicity @x9515 (= $x3933 (and true $x9511))) (rewrite (= (and true $x9511) $x9511)) (= $x3933 $x9511))))
(let ((@x9797 (trans (monotonicity @x9522 @x9788 (= $x3991 (=> $x9511 $x9784))) (rewrite (= (=> $x9511 $x9784) $x9793)) (= $x3991 $x9793))))
(let ((@x9496 (trans (monotonicity @x8934 (= $x3928 $x3928)) (rewrite (= $x3928 (and $x3923 $x3926 $x3783 $x3776))) (= $x3928 (and $x3923 $x3926 $x3783 $x3776)))))
(let ((@x9884 (monotonicity @x9496 (monotonicity @x9797 @x9878 (= (and $x3991 $x4005) $x9879)) (= $x4007 (=> (and $x3923 $x3926 $x3783 $x3776) $x9879)))))
(let ((@x9890 (trans @x9884 (rewrite (= (=> (and $x3923 $x3926 $x3783 $x3776) $x9879) $x9886)) (= $x4007 $x9886))))
(let ((@x9898 (trans (monotonicity @x9890 (= $x4008 (and $x3927 $x9886))) (rewrite (= (and $x3927 $x9886) $x9894)) (= $x4008 $x9894))))
(let ((@x9906 (trans (monotonicity @x9898 (= $x4009 (=> $x3925 $x9894))) (rewrite (= (=> $x3925 $x9894) $x9902)) (= $x4009 $x9902))))
(let ((@x9914 (trans (monotonicity @x9906 (= $x4010 (and $x3925 $x9902))) (rewrite (= (and $x3925 $x9902) $x9910)) (= $x4010 $x9910))))
(let (($x9465 (not $x4012)))
(let (($x9479 (and $x3783 $x3776 $x9465)))
(let ((@x9470 (monotonicity (rewrite (= (< v_b_L_H_p_G_0$ v_b_P_H_len$) $x9465)) @x9050 (= $x3919 (and $x9465 $x3784)))))
(let ((@x9475 (trans @x9470 (rewrite (= (and $x9465 $x3784) (and $x9465 $x3783 $x3776))) (= $x3919 (and $x9465 $x3783 $x3776)))))
(let ((@x9483 (trans (monotonicity @x8934 @x9475 (= $x3920 (and $x3784 (and $x9465 $x3783 $x3776)))) (rewrite (= (and $x3784 (and $x9465 $x3783 $x3776)) $x9479)) (= $x3920 $x9479))))
(let ((@x9490 (trans (monotonicity @x9483 (= $x3921 (and true $x9479))) (rewrite (= (and true $x9479) $x9479)) (= $x3921 $x9479))))
(let ((@x9923 (trans (monotonicity @x9490 @x9914 (= $x4011 (=> $x9479 $x9910))) (rewrite (= (=> $x9479 $x9910) $x9919)) (= $x4011 $x9919))))
(let ((@x9443 (rewrite (= (and true $x9434) $x9434))))
(let (($x9419 (and $x3886 $x3806 $x3699 $x3893 $x3894 $x3895 $x3896 $x3897 $x3898 $x3783 $x3776)))
(let (($x9420 (= (and $x3886 (and $x3806 $x3699 $x3893 $x3894 $x3895 $x3896 $x3897 $x3898 $x3783 $x3776)) $x9419)))
(let (($x9417 (= $x3910 (and $x3886 (and $x3806 $x3699 $x3893 $x3894 $x3895 $x3896 $x3897 $x3898 $x3783 $x3776)))))
(let (($x9411 (and $x3806 $x3699 $x3893 $x3894 $x3895 $x3896 $x3897 $x3898 $x3783 $x3776)))
(let ((@x9413 (rewrite (= (and $x3807 (and $x3893 $x3894 $x3895 $x3896 $x3897 $x3898 $x3783 $x3776)) $x9411))))
(let (($x9403 (and $x3893 $x3894 $x3895 $x3896 $x3897 $x3898 $x3783 $x3776)))
(let ((@x9405 (rewrite (= (and $x3893 (and $x3894 $x3895 $x3896 $x3897 $x3898 $x3783 $x3776)) $x9403))))
(let (($x9395 (and $x3894 $x3895 $x3896 $x3897 $x3898 $x3783 $x3776)))
(let (($x9387 (and $x3895 $x3896 $x3897 $x3898 $x3783 $x3776)))
(let (($x9379 (and $x3896 $x3897 $x3898 $x3783 $x3776)))
(let ((@x8840 (rewrite (= (and true true) true))))
(let ((@x9359 (rewrite (= (= (b_S_statusmap$ v_b_S_s$) (b_S_statusmap$ v_b_S_s$)) true))))
(let ((@x9361 (monotonicity (rewrite (= (= ?x3874 ?x3874) true)) @x9359 (= $x3902 (and true true)))))
(let ((@x9365 (monotonicity (trans @x9361 @x8840 (= $x3902 true)) @x8934 (= $x3903 $x3808))))
(let ((@x9370 (monotonicity (trans @x9365 @x9042 (= $x3903 $x3784)) (= $x3904 (and (and $x3897 $x3898) $x3784)))))
(let ((@x9375 (trans @x9370 (rewrite (= (and (and $x3897 $x3898) $x3784) (and $x3897 $x3898 $x3783 $x3776))) (= $x3904 (and $x3897 $x3898 $x3783 $x3776)))))
(let ((@x9383 (trans (monotonicity @x9375 (= $x3905 (and $x3896 (and $x3897 $x3898 $x3783 $x3776)))) (rewrite (= (and $x3896 (and $x3897 $x3898 $x3783 $x3776)) $x9379)) (= $x3905 $x9379))))
(let ((@x9391 (trans (monotonicity @x9383 (= $x3906 (and $x3895 $x9379))) (rewrite (= (and $x3895 $x9379) $x9387)) (= $x3906 $x9387))))
(let ((@x9399 (trans (monotonicity @x9391 (= $x3907 (and $x3894 $x9387))) (rewrite (= (and $x3894 $x9387) $x9395)) (= $x3907 $x9395))))
(let ((@x9407 (trans (monotonicity @x9399 (= $x3908 (and $x3893 $x9395))) @x9405 (= $x3908 $x9403))))
(let ((@x9415 (trans (monotonicity @x9407 (= $x3909 (and $x3807 $x9403))) @x9413 (= $x3909 $x9411))))
(let ((@x9333 (rewrite (= (and true $x3886) $x3886))))
(let (($x9322 (forall ((?v0 B_S_ptr$) )(!true :pattern ( (b_S_timestamp$ v_b_S_s$ ?v0) )))
))
(let (($x9320 (= (<= (b_S_timestamp$ v_b_S_s$ ?0) (b_S_timestamp$ v_b_S_s$ ?0)) true)))
(let ((@x9328 (trans (quant-intro (rewrite $x9320) (= $x3885 $x9322)) (elim-unused (= $x9322 true)) (= $x3885 true))))
(let ((@x9335 (trans (monotonicity @x9328 (= $x3887 (and true $x3886))) @x9333 (= $x3887 $x3886))))
(let ((@x9337 (monotonicity (rewrite (= (<= ?x3713 ?x3713) true)) @x9335 (= $x3888 (and true $x3886)))))
(let ((@x9423 (trans (monotonicity (trans @x9337 @x9333 (= $x3888 $x3886)) @x9415 $x9417) (rewrite $x9420) (= $x3910 $x9419))))
(let (($x9311 (forall ((?v0 B_S_ptr$) )(!true :pattern ( (b_S_select_o_tm$ (b_S_typemap$ v_b_S_s$) ?v0) )))
))
(let (($x3862 (b_S_thread_n_local$ v_b_S_s$ ?0)))
(let (($x3877 (and (= (b_S_select_o_tm$ ?x3874 ?0) (b_S_select_o_tm$ ?x3874 ?0)) $x3862)))
(let (($x3878 (=> $x3862 $x3877)))
(let ((@x9277 (rewrite (= (=> $x3862 $x3862) true))))
(let ((@x9270 (rewrite (= (and true $x3862) $x3862))))
(let (($x9301 (= (= (b_S_select_o_tm$ ?x3874 ?0) (b_S_select_o_tm$ ?x3874 ?0)) true)))
(let ((@x9306 (trans (monotonicity (rewrite $x9301) (= $x3877 (and true $x3862))) @x9270 (= $x3877 $x3862))))
(let ((@x9310 (trans (monotonicity @x9306 (= $x3878 (=> $x3862 $x3862))) @x9277 (= $x3878 true))))
(let ((@x9317 (trans (quant-intro @x9310 (= $x3880 $x9311)) (elim-unused (= $x9311 true)) (= $x3880 true))))
(let ((@x9341 (monotonicity @x9317 (trans @x9337 @x9333 (= $x3888 $x3886)) (= $x3889 (and true $x3886)))))
(let (($x9257 (forall ((?v0 B_S_ptr$) )(!true :pattern ( (b_S_select_o_sm$ (b_S_statusmap$ v_b_S_s$) ?v0) )))
))
(let ((?x3858 (b_S_statusmap$ v_b_S_s$)))
(let ((?x3859 (b_S_select_o_sm$ ?x3858 ?0)))
(let (($x3871 (and (= ?x3859 ?x3859) $x3862)))
(let (($x3872 (=> $x3862 $x3871)))
(let ((@x9290 (monotonicity (rewrite (= (= ?x3859 ?x3859) true)) (= $x3871 (and true $x3862)))))
(let ((@x9294 (monotonicity (trans @x9290 @x9270 (= $x3871 $x3862)) (= $x3872 (=> $x3862 $x3862)))))
(let ((@x9300 (trans (quant-intro (trans @x9294 @x9277 (= $x3872 true)) (= $x3873 $x9257)) (elim-unused (= $x9257 true)) (= $x3873 true))))
(let ((@x9345 (monotonicity @x9300 (trans @x9341 @x9333 (= $x3889 $x3886)) (= $x3890 (and true $x3886)))))
(let (($x9280 (forall ((?v0 B_S_ptr$) )(!true :pattern ( (b_S_select_o_mem$ (b_S_memory$ v_b_S_s$) ?v0) )))
))
(let ((?x3864 (b_S_select_o_mem$ (b_S_memory$ v_b_S_s$) ?0)))
(let (($x3866 (and (= ?x3864 ?x3864) $x3862)))
(let (($x3867 (=> $x3862 $x3866)))
(let ((@x9268 (monotonicity (rewrite (= (= ?x3864 ?x3864) true)) (= $x3866 (and true $x3862)))))
(let ((@x9275 (monotonicity (trans @x9268 @x9270 (= $x3866 $x3862)) (= $x3867 (=> $x3862 $x3862)))))
(let ((@x9286 (trans (quant-intro (trans @x9275 @x9277 (= $x3867 true)) (= $x3869 $x9280)) (elim-unused (= $x9280 true)) (= $x3869 true))))
(let ((@x9349 (monotonicity @x9286 (trans @x9345 @x9333 (= $x3890 $x3886)) (= $x3891 (and true $x3886)))))
(let (($x3855 (= (b_S_kind_n_of$ (b_S_typ$ (b_S_owner$ v_b_S_s$ ?0))) b_S_kind_n_thread$)))
(let ((@x9259 (quant-intro (rewrite (= (=> (not $x3855) (not $x3855)) true)) (= $x3861 $x9257))))
(let ((@x9353 (monotonicity (trans @x9259 (elim-unused (= $x9257 true)) (= $x3861 true)) (trans @x9349 @x9333 (= $x3891 $x3886)) (= $x3892 (and true $x3886)))))
(let ((@x9426 (monotonicity (trans @x9353 @x9333 (= $x3892 $x3886)) @x9423 (= $x3911 (and $x3886 $x9419)))))
(let ((@x9433 (monotonicity @x8934 (trans @x9426 (rewrite (= (and $x3886 $x9419) $x9419)) (= $x3911 $x9419)) (= $x3912 (and $x3784 $x9419)))))
(let ((@x9441 (monotonicity (trans @x9433 (rewrite (= (and $x3784 $x9419) $x9434)) (= $x3912 $x9434)) (= $x3913 (and true $x9434)))))
(let ((@x9448 (monotonicity @x8934 (trans @x9441 @x9443 (= $x3913 $x9434)) (= $x3914 (and $x3784 $x9434)))))
(let ((@x9454 (monotonicity (trans @x9448 (rewrite (= (and $x3784 $x9434) $x9434)) (= $x3914 $x9434)) (= $x3915 (and true $x9434)))))
(let ((@x9458 (monotonicity @x8934 (trans @x9454 @x9443 (= $x3915 $x9434)) (= $x3916 (and $x3784 $x9434)))))
(let ((@x9462 (monotonicity (trans @x9458 (rewrite (= (and $x3784 $x9434) $x9434)) (= $x3916 $x9434)) (= $x3917 (and true $x9434)))))
(let ((@x9973 (monotonicity (trans @x9462 @x9443 (= $x3917 $x9434)) (monotonicity @x9923 @x9967 (= (and $x4011 $x4019) $x9968)) (= $x4021 (=> $x9434 $x9968)))))
(let ((@x9979 (trans @x9973 (rewrite (= (=> $x9434 $x9968) (or $x9974 $x9968))) (= $x4021 (or $x9974 $x9968)))))
(let (($x9062 (and $x3783 $x3776 $x3806 $x3699)))
(let ((@x9058 (trans (monotonicity @x9050 (= $x3810 (and $x3807 $x3784))) (rewrite (= (and $x3807 $x3784) (and $x3806 $x3699 $x3783 $x3776))) (= $x3810 (and $x3806 $x3699 $x3783 $x3776)))))
(let ((@x9061 (monotonicity @x8934 @x9058 (= $x3811 (and $x3784 (and $x3806 $x3699 $x3783 $x3776))))))
(let ((@x9066 (trans @x9061 (rewrite (= (and $x3784 (and $x3806 $x3699 $x3783 $x3776)) $x9062)) (= $x3811 $x9062))))
(let ((@x9073 (trans (monotonicity @x9066 (= $x3812 (and true $x9062))) (rewrite (= (and true $x9062) $x9062)) (= $x3812 $x9062))))
(let ((@x9080 (trans (monotonicity @x8934 @x9073 (= $x3813 (and $x3784 $x9062))) (rewrite (= (and $x3784 $x9062) $x9062)) (= $x3813 $x9062))))
(let ((@x9083 (monotonicity (rewrite (= $x3805 false)) @x9080 (= $x3814 (and false $x9062)))))
(let ((@x9087 (trans @x9083 (rewrite (= (and false $x9062) false)) (= $x3814 false))))
(let ((@x9094 (trans (monotonicity @x8934 @x9087 (= $x3815 (and $x3784 false))) (rewrite (= (and $x3784 false) false)) (= $x3815 false))))
(let ((@x9101 (trans (monotonicity @x9094 (= $x3816 (and true false))) (rewrite (= (and true false) false)) (= $x3816 false))))
(let ((@x9254 (trans (monotonicity @x9101 @x9247 (= $x3851 (=> false $x9245))) (rewrite (= (=> false $x9245) true)) (= $x3851 true))))
(let ((@x9986 (trans (monotonicity @x9254 @x9979 (= $x4022 (and true (or $x9974 $x9968)))) (rewrite (= (and true (or $x9974 $x9968)) (or $x9974 $x9968))) (= $x4022 (or $x9974 $x9968)))))
(let (($x9017 (and $x3772 $x3773 $x3776 $x3777 $x3780 $x3781 $x3783 $x3785 $x8956 $x8960 $x3794)))
(let (($x8916 (and $x8667 $x3769)))
(let (($x9018 (= (and $x3774 (and $x3776 $x3777 $x3780 $x3781 $x3783 $x3785 $x8956 $x8960 $x3794)) $x9017)))
(let (($x9015 (= $x3802 (and $x3774 (and $x3776 $x3777 $x3780 $x3781 $x3783 $x3785 $x8956 $x8960 $x3794)))))
(let (($x9009 (and $x3776 $x3777 $x3780 $x3781 $x3783 $x3785 $x8956 $x8960 $x3794)))
(let ((@x9011 (rewrite (= (and $x3778 (and $x3780 $x3781 $x3783 $x3776 $x3785 $x8956 $x8960 $x3794)) $x9009))))
(let (($x9001 (and $x3780 $x3781 $x3783 $x3776 $x3785 $x8956 $x8960 $x3794)))
(let (($x8993 (and $x3783 $x3776 $x3785 $x8956 $x8960 $x3794)))
(let (($x8985 (and $x3785 $x8956 $x8960 $x3794 $x3783 $x3776)))
(let (($x8977 (and $x8956 $x8960 $x3794 $x3783 $x3776)))
(let (($x8964 (= (and (< v_b_SL_H_witness_G_0$ v_b_P_H_len$) $x3794) (and $x8960 $x3794))))
(let ((@x8965 (monotonicity (rewrite (= (< v_b_SL_H_witness_G_0$ v_b_P_H_len$) $x8960)) $x8964)))
(let ((@x8973 (trans (monotonicity @x8965 @x8934 (= $x3796 (and (and $x8960 $x3794) $x3784))) (rewrite (= (and (and $x8960 $x3794) $x3784) (and $x8960 $x3794 $x3783 $x3776))) (= $x3796 (and $x8960 $x3794 $x3783 $x3776)))))
(let (($x3788 (<= ?x3765 v_b_L_H_max_G_1$)))
(let (($x8951 (or (not (and $x1212 $x1344 (not (<= v_b_L_H_p_G_0$ ?0)))) $x3788)))
(let (($x3787 (and $x1345 (< ?0 v_b_L_H_p_G_0$))))
(let (($x3789 (=> $x3787 $x3788)))
(let ((@x8953 (rewrite (= (=> (and $x1212 $x1344 (not (<= v_b_L_H_p_G_0$ ?0))) $x3788) $x8951))))
(let (($x8936 (not (<= v_b_L_H_p_G_0$ ?0))))
(let (($x8942 (and $x1212 $x1344 $x8936)))
(let ((@x8941 (monotonicity @x5523 (rewrite (= (< ?0 v_b_L_H_p_G_0$) $x8936)) (= $x3787 (and $x1345 $x8936)))))
(let ((@x8949 (monotonicity (trans @x8941 (rewrite (= (and $x1345 $x8936) $x8942)) (= $x3787 $x8942)) (= $x3789 (=> $x8942 $x3788)))))
(let ((@x8976 (monotonicity (quant-intro (trans @x8949 @x8953 (= $x3789 $x8951)) (= $x3790 $x8956)) @x8973 (= $x3797 (and $x8956 (and $x8960 $x3794 $x3783 $x3776))))))
(let ((@x8981 (trans @x8976 (rewrite (= (and $x8956 (and $x8960 $x3794 $x3783 $x3776)) $x8977)) (= $x3797 $x8977))))
(let ((@x8989 (trans (monotonicity @x8981 (= $x3798 (and $x3785 $x8977))) (rewrite (= (and $x3785 $x8977) $x8985)) (= $x3798 $x8985))))
(let ((@x8997 (trans (monotonicity @x8934 @x8989 (= $x3799 (and $x3784 $x8985))) (rewrite (= (and $x3784 $x8985) $x8993)) (= $x3799 $x8993))))
(let ((@x9000 (monotonicity (monotonicity (rewrite (= $x3780 $x3780)) (= $x3782 $x3782)) @x8997 (= $x3800 (and $x3782 $x8993)))))
(let ((@x9008 (monotonicity (monotonicity (rewrite (= $x3776 $x3776)) (= $x3778 $x3778)) (trans @x9000 (rewrite (= (and $x3782 $x8993) $x9001)) (= $x3800 $x9001)) (= $x3801 (and $x3778 $x9001)))))
(let ((@x9016 (monotonicity (monotonicity (rewrite (= $x3772 $x3772)) (= $x3774 $x3774)) (trans @x9008 @x9011 (= $x3801 $x9009)) $x9015)))
(let ((@x9024 (monotonicity (trans @x9016 (rewrite $x9018) (= $x3802 $x9017)) (= $x3803 (and true $x9017)))))
(let ((@x9031 (monotonicity (monotonicity (rewrite (= $x3676 $x8667)) (= $x3770 $x8916)) (trans @x9024 (rewrite (= (and true $x9017) $x9017)) (= $x3803 $x9017)) (= $x3804 (and $x8916 $x9017)))))
(let ((@x9989 (monotonicity (trans @x9031 (rewrite (= (and $x8916 $x9017) $x9032)) (= $x3804 $x9032)) @x9986 (= $x4023 (=> $x9032 (or $x9974 $x9968))))))
(let ((@x9995 (trans @x9989 (rewrite (= (=> $x9032 (or $x9974 $x9968)) $x9991)) (= $x4023 $x9991))))
(let ((@x9998 (monotonicity (monotonicity (rewrite (= $x3676 $x8667)) (= $x3770 $x8916)) @x9995 (= $x4024 (and $x8916 $x9991)))))
(let (($x3766 (<= ?x3765 v_b_L_H_max_G_0$)))
(let (($x8908 (or (not (and $x1212 $x1344 (not (<= 1 ?0)))) $x3766)))
(let (($x3763 (and $x1345 (< ?0 1))))
(let (($x3767 (=> $x3763 $x3766)))
(let (($x8887 (<= 1 ?0)))
(let (($x8888 (not $x8887)))
(let (($x8899 (and $x1212 $x1344 $x8888)))
(let ((@x8895 (trans (rewrite (= (< ?0 1) $x8888)) (monotonicity (rewrite (= $x8887 $x8887)) (= $x8888 $x8888)) (= (< ?0 1) $x8888))))
(let ((@x8903 (trans (monotonicity @x5523 @x8895 (= $x3763 (and $x1345 $x8888))) (rewrite (= (and $x1345 $x8888) $x8899)) (= $x3763 $x8899))))
(let ((@x8912 (trans (monotonicity @x8903 (= $x3767 (=> $x8899 $x3766))) (rewrite (= (=> $x8899 $x3766) $x8908)) (= $x3767 $x8908))))
(let ((@x10006 (monotonicity (quant-intro @x8912 (= $x3768 $x8913)) (trans @x9998 (rewrite (= (and $x8916 $x9991) $x9999)) (= $x4024 $x9999)) (= $x4025 (=> $x8913 $x9999)))))
(let ((@x10015 (monotonicity (quant-intro @x8912 (= $x3768 $x8913)) (trans @x10006 (rewrite (= (=> $x8913 $x9999) $x10008)) (= $x4025 $x10008)) (= (and $x3768 $x4025) $x10013))))
(let ((@x10018 (monotonicity (rewrite (= $x3761 $x3761)) @x10015 (= $x4027 (=> $x3761 $x10013)))))
(let ((@x10027 (monotonicity (rewrite (= $x3761 $x3761)) (trans @x10018 (rewrite (= (=> $x3761 $x10013) $x10020)) (= $x4027 $x10020)) (= (and $x3761 $x4027) $x10025))))
(let ((@x8874 (rewrite (= (and $x3747 (and $x3748 $x3749 $x3750)) (and $x3747 $x3748 $x3749 $x3750)))))
(let ((@x8838 (monotonicity (rewrite (= $x3752 true)) (rewrite (= $x3752 true)) (= $x3753 (and true true)))))
(let ((@x8844 (monotonicity (rewrite (= $x3751 true)) (trans @x8838 @x8840 (= $x3753 true)) (= $x3754 (and true true)))))
(let ((@x8848 (monotonicity (rewrite (= $x3751 true)) (trans @x8844 @x8840 (= $x3754 true)) (= $x3755 (and true true)))))
(let ((@x8853 (monotonicity (trans @x8848 @x8840 (= $x3755 true)) (= $x3756 (and $x3750 true)))))
(let ((@x8860 (monotonicity (trans @x8853 (rewrite (= (and $x3750 true) $x3750)) (= $x3756 $x3750)) (= (and $x3749 $x3756) (and $x3749 $x3750)))))
(let ((@x8868 (trans (monotonicity @x8860 (= $x3758 (and $x3748 (and $x3749 $x3750)))) (rewrite (= (and $x3748 (and $x3749 $x3750)) (and $x3748 $x3749 $x3750))) (= $x3758 (and $x3748 $x3749 $x3750)))))
(let ((@x8876 (trans (monotonicity @x8868 (= $x3759 (and $x3747 (and $x3748 $x3749 $x3750)))) @x8874 (= $x3759 (and $x3747 $x3748 $x3749 $x3750)))))
(let ((@x8884 (trans (monotonicity @x8876 (= $x3760 (and $x3744 (and $x3747 $x3748 $x3749 $x3750)))) (rewrite (= (and $x3744 (and $x3747 $x3748 $x3749 $x3750)) $x8880)) (= $x3760 $x8880))))
(let ((@x10036 (trans (monotonicity @x8884 @x10027 (= $x4029 (=> $x8880 $x10025))) (rewrite (= (=> $x8880 $x10025) $x10032)) (= $x4029 $x10032))))
(let ((@x10044 (trans (monotonicity @x10036 (= $x4030 (and $x3744 $x10032))) (rewrite (= (and $x3744 $x10032) $x10040)) (= $x4030 $x10040))))
(let ((@x10053 (trans (monotonicity @x10044 (= $x4031 (=> $x3742 $x10040))) (rewrite (= (=> $x3742 $x10040) $x10049)) (= $x4031 $x10049))))
(let ((@x10061 (trans (monotonicity @x10053 (= $x4032 (and $x3742 $x10049))) (rewrite (= (and $x3742 $x10049) $x10057)) (= $x4032 $x10057))))
(let ((@x10070 (trans (monotonicity @x10061 (= $x4033 (=> $x3738 $x10057))) (rewrite (= (=> $x3738 $x10057) $x10066)) (= $x4033 $x10066))))
(let (($x8812 (and $x3667 $x3668 $x3671 $x3672 $x8658 $x8667 $x3683 $x3685 $x3686 $x3687 $x3690 $x3691 $x3697 $x3698 $x3699 $x8701 $x3708 $x3709 $x3711 $x3714 $x8707 $x3719 $x3720)))
(let (($x8804 (and $x3671 $x3672 $x8658 $x8667 $x3683 $x3685 $x3686 $x3687 $x3690 $x3691 $x3697 $x3698 $x3699 $x8701 $x3708 $x3709 $x3711 $x3714 $x8707 $x3719 $x3720)))
(let (($x8796 (and $x8658 $x8667 $x3683 $x3685 $x3686 $x3687 $x3690 $x3691 $x3697 $x3698 $x3699 $x8701 $x3708 $x3709 $x3711 $x3714 $x8707 $x3719 $x3720)))
(let (($x8788 (and $x8667 $x3683 $x3685 $x3686 $x3687 $x3690 $x3691 $x3697 $x3698 $x3699 $x8701 $x3708 $x3709 $x3711 $x3714 $x8707 $x3719 $x3720)))
(let (($x8780 (and $x3683 $x3685 $x3686 $x3687 $x3690 $x3691 $x3697 $x3698 $x3699 $x8701 $x3708 $x3709 $x3711 $x3714 $x8707 $x3719 $x3720)))
(let (($x8765 (and $x3697 $x3698 $x3699 $x8701 $x3708 $x3709 $x3711 $x3714 $x8707 $x3719 $x3720)))
(let (($x8692 (and $x3683 $x3685 $x3686 $x3687 $x3690 $x3691)))
(let (($x8766 (= (and $x3697 (and $x3698 $x3699 $x8701 $x3708 $x3709 $x3711 $x3714 $x8707 $x3719 $x3720)) $x8765)))
(let (($x8763 (= $x3728 (and $x3697 (and $x3698 $x3699 $x8701 $x3708 $x3709 $x3711 $x3714 $x8707 $x3719 $x3720)))))
(let (($x8757 (and $x3698 $x3699 $x8701 $x3708 $x3709 $x3711 $x3714 $x8707 $x3719 $x3720)))
(let (($x8758 (= (and (and $x3698 $x3699) (and $x8701 $x3708 $x3709 $x3711 $x3714 $x8707 $x3719 $x3720)) $x8757)))
(let (($x8755 (= $x3727 (and (and $x3698 $x3699) (and $x8701 $x3708 $x3709 $x3711 $x3714 $x8707 $x3719 $x3720)))))
(let (($x8749 (and $x8701 $x3708 $x3709 $x3711 $x3714 $x8707 $x3719 $x3720)))
(let ((@x8751 (rewrite (= (and $x8701 (and $x3708 $x3709 $x3711 $x3714 $x8707 $x3719 $x3720)) $x8749))))
(let (($x8741 (and $x3708 $x3709 $x3711 $x3714 $x8707 $x3719 $x3720)))
(let ((@x8743 (rewrite (= (and (and $x3708 $x3709) (and $x3711 $x3714 $x8707 $x3719 $x3720)) $x8741))))
(let (($x8733 (and $x3711 $x3714 $x8707 $x3719 $x3720)))
(let ((@x8727 (rewrite (= (and $x3714 (and $x8707 $x3719 $x3720)) (and $x3714 $x8707 $x3719 $x3720)))))
(let (($x8705 (= (= (b_S_in_n_writes_n_at$ v_b_H_wrTime_S_1_T_6_o_1$ ?0) false) (not (b_S_in_n_writes_n_at$ v_b_H_wrTime_S_1_T_6_o_1$ ?0)))))
(let ((@x8716 (monotonicity (quant-intro (rewrite $x8705) (= $x3718 $x8707)) (monotonicity (rewrite (= $x3719 $x3719)) (= $x3721 $x3721)) (= $x3722 (and $x8707 $x3721)))))
(let ((@x8721 (trans @x8716 (rewrite (= (and $x8707 $x3721) (and $x8707 $x3719 $x3720))) (= $x3722 (and $x8707 $x3719 $x3720)))))
(let ((@x8729 (trans (monotonicity @x8721 (= $x3723 (and $x3714 (and $x8707 $x3719 $x3720)))) @x8727 (= $x3723 (and $x3714 $x8707 $x3719 $x3720)))))
(let ((@x8737 (trans (monotonicity @x8729 (= $x3724 (and $x3711 (and $x3714 $x8707 $x3719 $x3720)))) (rewrite (= (and $x3711 (and $x3714 $x8707 $x3719 $x3720)) $x8733)) (= $x3724 $x8733))))
(let ((@x8745 (trans (monotonicity @x8737 (= $x3725 (and (and $x3708 $x3709) $x8733))) @x8743 (= $x3725 $x8741))))
(let (($x8699 (= (< (b_S_frame_n_level$ ?0) b_S_current_n_frame_n_level$) (not (<= b_S_current_n_frame_n_level$ (b_S_frame_n_level$ ?0))))))
(let ((@x8748 (monotonicity (quant-intro (rewrite $x8699) (= $x3706 $x8701)) @x8745 (= $x3726 (and $x8701 $x8741)))))
(let ((@x8761 (trans (monotonicity (trans @x8748 @x8751 (= $x3726 $x8749)) $x8755) (rewrite $x8758) (= $x3727 $x8757))))
(let ((@x8772 (monotonicity (trans (monotonicity @x8761 $x8763) (rewrite $x8766) (= $x3728 $x8765)) (= $x3729 (and true $x8765)))))
(let (($x8684 (and $x3685 $x3686 $x3687 $x3690 $x3691)))
(let ((@x8678 (rewrite (= (and $x3686 (and $x3687 $x3690 $x3691)) (and $x3686 $x3687 $x3690 $x3691)))))
(let ((@x8675 (monotonicity (rewrite (= (and $x3687 (and $x3690 $x3691)) (and $x3687 $x3690 $x3691))) (= $x3694 (and $x3686 (and $x3687 $x3690 $x3691))))))
(let ((@x8683 (monotonicity (trans @x8675 @x8678 (= $x3694 (and $x3686 $x3687 $x3690 $x3691))) (= $x3695 (and $x3685 (and $x3686 $x3687 $x3690 $x3691))))))
(let ((@x8688 (trans @x8683 (rewrite (= (and $x3685 (and $x3686 $x3687 $x3690 $x3691)) $x8684)) (= $x3695 $x8684))))
(let ((@x8696 (trans (monotonicity @x8688 (= $x3696 (and $x3683 $x8684))) (rewrite (= (and $x3683 $x8684) $x8692)) (= $x3696 $x8692))))
(let ((@x8779 (monotonicity @x8696 (trans @x8772 (rewrite (= (and true $x8765) $x8765)) (= $x3729 $x8765)) (= $x3730 (and $x8692 $x8765)))))
(let ((@x8787 (monotonicity (rewrite (= $x3676 $x8667)) (trans @x8779 (rewrite (= (and $x8692 $x8765) $x8780)) (= $x3730 $x8780)) (= $x3731 (and $x8667 $x8780)))))
(let ((@x8665 (trans (rewrite (= (< v_b_P_H_len$ 1099511627776) $x8658)) (monotonicity (rewrite (= $x8657 $x8657)) (= $x8658 $x8658)) (= (< v_b_P_H_len$ 1099511627776) $x8658))))
(let ((@x8795 (monotonicity @x8665 (trans @x8787 (rewrite (= (and $x8667 $x8780) $x8788)) (= $x3731 $x8788)) (= $x3732 (and $x8658 $x8788)))))
(let ((@x8803 (monotonicity (monotonicity (rewrite (= $x3671 $x3671)) (= $x3673 $x3673)) (trans @x8795 (rewrite (= (and $x8658 $x8788) $x8796)) (= $x3732 $x8796)) (= $x3733 (and $x3673 $x8796)))))
(let ((@x8811 (monotonicity (monotonicity (rewrite (= $x3667 $x3667)) (= $x3669 $x3669)) (trans @x8803 (rewrite (= (and $x3673 $x8796) $x8804)) (= $x3733 $x8804)) (= $x3734 (and $x3669 $x8804)))))
(let ((@x8819 (monotonicity (monotonicity (rewrite (= $x3663 $x3663)) (= $x3665 $x3665)) (trans @x8811 (rewrite (= (and $x3669 $x8804) $x8812)) (= $x3734 $x8812)) (= $x3735 (and $x3665 $x8812)))))
(let ((@x8827 (monotonicity (trans @x8819 (rewrite (= (and $x3665 $x8812) $x8820)) (= $x3735 $x8820)) (= $x3736 (and true $x8820)))))
(let ((@x10076 (monotonicity (trans @x8827 (rewrite (= (and true $x8820) $x8820)) (= $x3736 $x8820)) (monotonicity @x10070 (= (and $x3738 $x4033) $x10071)) (= $x4035 (=> $x8820 $x10071)))))
(let ((@x10085 (monotonicity (trans @x10076 (rewrite (= (=> $x8820 $x10071) $x10078)) (= $x4035 $x10078)) (= $x4036 (not $x10078)))))
(let ((@x10087 (not-or-elim (mp (asserted $x4036) @x10085 (not $x10078)) $x8820)))
(let ((@x10095 (and-elim @x10087 $x8667)))
(let (($x21235 (or $x12351 $x21232)))
(let (($x21238 (not $x21235)))
(let (($x16251 (not $x3743)))
(let (($x16242 (not $x3740)))
(let (($x21241 (or $x16242 $x16251 (not $x3747) (not $x3748) (not $x3749) (not $x3750) $x21238)))
(let (($x21244 (not $x21241)))
(let (($x23354 (= (b_S_kind_n_of$ (b_S_typ$ ?x23206)) b_S_kind_n_primitive$)))
(let ((?x22173 (b_S_kind_n_of$ b_T_T_u1$)))
(let (($x22174 (= ?x22173 b_S_kind_n_primitive$)))
(let (($x3529 (b_S_is_n_primitive$ b_T_T_u1$)))
(let (($x22181 (= $x3529 $x22174)))
(let (($x12265 (forall ((?v0 B_S_ctype$) )(!(let (($x1179 (b_S_is_n_primitive$ ?v0)))
(= $x1179 (= (b_S_kind_n_of$ ?v0) b_S_kind_n_primitive$))) :pattern ( (b_S_is_n_primitive$ ?v0) )))
))
(let (($x1179 (b_S_is_n_primitive$ ?0)))
(let (($x12261 (= $x1179 (= (b_S_kind_n_of$ ?0) b_S_kind_n_primitive$))))
(let (($x3575 (forall ((?v0 B_S_ctype$) )(!(let (($x1179 (b_S_is_n_primitive$ ?v0)))
(= $x1179 (= (b_S_kind_n_of$ ?v0) b_S_kind_n_primitive$))) :pattern ( (b_S_is_n_primitive$ ?v0) )))
))
(let ((@x12264 (rewrite (= (= $x1179 (= (b_S_kind_n_of$ ?0) b_S_kind_n_primitive$)) $x12261))))
(let ((@x16196 (mp~ (mp (asserted $x3575) (quant-intro @x12264 (= $x3575 $x12265)) $x12265) (nnf-pos (refl (~ $x12261 $x12261)) (~ $x12265 $x12265)) $x12265)))
(let ((@x5093 (asserted $x3529)))
(let ((@x23476 (unit-resolution (def-axiom (or (not $x22181) (not $x3529) $x22174)) @x5093 (or (not $x22181) $x22174))))
(let ((@x23477 (unit-resolution @x23476 (unit-resolution ((_ quant-inst b_T_T_u1$) (or (not $x12265) $x22181)) @x16196 $x22181) $x22174)))
(let ((@x23492 (unit-resolution (def-axiom (or (not $x23223) $x16242 $x23216)) @x23251 (or (not $x23223) $x23216))))
(let ((@x23499 (unit-resolution @x23492 (unit-resolution ((_ quant-inst (b_S_idx$ ?x3680 0 b_T_T_u1$) b_T_T_u1$) (or (not $x20961) $x23223)) @x20966 $x23223) $x23216)))
(let ((@x23922 (symm (unit-resolution @x23405 @x16076 @x23251 $x23207) (= ?x23206 ?x3739))))
(let ((@x23778 (trans (monotonicity @x23922 (= (b_S_typ$ ?x23206) ?x23215)) @x23499 (= (b_S_typ$ ?x23206) b_T_T_u1$))))
(let ((@x23574 (trans (monotonicity @x23778 (= (b_S_kind_n_of$ (b_S_typ$ ?x23206)) ?x22173)) @x23477 $x23354)))
(let (($x23361 (not (b_S_closed$ v_b_S_s$ (b_S_ts_n_emb$ (b_S_select_o_tm$ ?x3874 ?x23206))))))
(let ((?x23356 (b_S_select_o_tm$ ?x3874 ?x23206)))
(let (($x23357 (b_S_ts_n_is_n_volatile$ ?x23356)))
(let (($x23358 (not $x23357)))
(let (($x23362 (or $x23358 $x23361)))
(let ((@x24072 (monotonicity @x23922 (= ?x23356 (b_S_select_o_tm$ ?x3874 ?x3739)))))
(let ((@x23530 (monotonicity @x24072 (= $x23357 (b_S_ts_n_is_n_volatile$ (b_S_select_o_tm$ ?x3874 ?x3739))))))
(let ((@x23502 (symm @x23530 (= (b_S_ts_n_is_n_volatile$ (b_S_select_o_tm$ ?x3874 ?x3739)) $x23357))))
(let ((@x23522 (monotonicity @x23502 (= (not (b_S_ts_n_is_n_volatile$ (b_S_select_o_tm$ ?x3874 ?x3739))) $x23358))))
(let ((?x23179 (b_S_select_o_tm$ ?x3874 ?x3739)))
(let (($x23303 (b_S_ts_n_is_n_volatile$ ?x23179)))
(let (($x23260 (not $x23303)))
(let (($x16245 (not $x3741)))
(let (($x23304 (or $x16245 $x23303)))
(let (($x23305 (not $x23304)))
(let ((?x23296 (b_S_ptr$ ?x3678 v_b_P_H_arr$)))
(let (($x23297 (b_S_set_n_in$ ?x23296 (b_S_domain$ v_b_S_s$ (b_S_ptr$ ?x3678 (b_S_ref$ ?x3682))))))
(let ((?x21715 (b_S_ref$ ?x3682)))
(let ((?x22684 (b_S_ptr$ ?x3678 ?x21715)))
(let (($x23045 (b_S_set_n_in$ ?x22684 (b_S_domain$ v_b_S_s$ ?x22684))))
(let ((@x23339 (monotonicity (symm @x23283 (= v_b_P_H_arr$ ?x3681)) (= ?x23296 ?x3682))))
(let (($x22691 (= ?x3682 ?x22684)))
(let (($x22699 (= (or (not $x8559) (or (not $x3686) $x22691)) (or (not $x8559) (not $x3686) $x22691))))
(let ((@x22701 (mp ((_ quant-inst (b_S_ptr$ ?x3678 ?x3681) (b_S_array$ b_T_T_u1$ v_b_P_H_len$)) (or (not $x8559) (or (not $x3686) $x22691))) (rewrite $x22699) (or (not $x8559) (not $x3686) $x22691))))
(let ((@x24449 (symm (unit-resolution @x22701 @x16076 (and-elim @x10087 $x3686) $x22691) (= ?x22684 ?x3682))))
(let ((@x23394 (monotonicity (trans @x24449 (symm @x23339 (= ?x3682 ?x23296)) (= ?x22684 ?x23296)) (= $x23045 $x23297))))
(let (($x23063 (forall ((?v3 B_S_ptr$) )(!(let ((?x3680 (b_S_ptr$ b_T_T_u1$ v_b_P_H_arr$)))
(let ((?x3681 (b_S_ref$ ?x3680)))
(let ((?x3678 (b_S_array$ b_T_T_u1$ v_b_P_H_len$)))
(let ((?x3682 (b_S_ptr$ ?x3678 ?x3681)))
(let ((?x21715 (b_S_ref$ ?x3682)))
(let ((?x22684 (b_S_ptr$ ?x3678 ?x21715)))
(let (($x23060 (b_S_set_n_in2$ ?v3 (b_S_ver_n_domain$ (b_S_read_n_version$ v_b_S_s$ ?x22684)))))
(or (b_S_has_n_volatile_n_owns_n_set$ (b_S_typ$ ?x22684)) (not (b_S_set_n_in$ ?v3 (b_S_owns$ v_b_S_s$ ?x22684))) $x23060)))))))) :pattern ( (b_S_set_n_in$ ?v3 (b_S_owns$ v_b_S_s$ (b_S_ptr$ (b_S_array$ b_T_T_u1$ v_b_P_H_len$) (b_S_ref$ (b_S_ptr$ (b_S_array$ b_T_T_u1$ v_b_P_H_len$) (b_S_ref$ (b_S_ptr$ b_T_T_u1$ v_b_P_H_arr$))))))) )))
))
(let (($x22949 (b_S_closed$ v_b_S_s$ ?x22684)))
(let (($x22973 (not $x22949)))
(let (($x23066 (not (or (not $x23045) $x22973 (not $x23063)))))
(let (($x23019 (b_S_in_n_domain$ v_b_S_s$ ?x22684 ?x22684)))
(let (($x23018 (b_S_in_n_domain_n_lab$ v_b_S_s$ ?x22684 ?x22684 b_l_H_public$)))
(let (($x23027 (= $x23018 $x23019)))
(let (($x12066 (forall ((?v0 B_S_state$) (?v1 B_S_ptr$) (?v2 B_S_ptr$) (?v3 B_S_label$) )(!(let (($x3056 (b_S_in_n_domain_n_lab$ ?v0 ?v1 ?v2 ?v3)))
(= $x3056 (b_S_in_n_domain$ ?v0 ?v1 ?v2))) :pattern ( (b_S_in_n_domain_n_lab$ ?v0 ?v1 ?v2 ?v3) )))
))
(let (($x3056 (b_S_in_n_domain_n_lab$ ?3 ?2 ?1 ?0)))
(let (($x12062 (= $x3056 (b_S_in_n_domain$ ?3 ?2 ?1))))
(let (($x3060 (forall ((?v0 B_S_state$) (?v1 B_S_ptr$) (?v2 B_S_ptr$) (?v3 B_S_label$) )(!(let (($x3056 (b_S_in_n_domain_n_lab$ ?v0 ?v1 ?v2 ?v3)))
(= $x3056 (b_S_in_n_domain$ ?v0 ?v1 ?v2))) :pattern ( (b_S_in_n_domain_n_lab$ ?v0 ?v1 ?v2 ?v3) )))
))
(let ((@x12068 (quant-intro (rewrite (= (= $x3056 (b_S_in_n_domain$ ?3 ?2 ?1)) $x12062)) (= $x3060 $x12066))))
(let ((@x15761 (mp~ (mp (asserted $x3060) @x12068 $x12066) (nnf-pos (refl (~ $x12062 $x12062)) (~ $x12066 $x12066)) $x12066)))
(let (($x36 (= b_S_kind_n_primitive$ b_S_kind_n_array$)))
(let (($x37 (not $x36)))
(let (($x23052 (= $x37 (not (= (b_S_kind_n_of$ (b_S_typ$ ?x22684)) b_S_kind_n_primitive$)))))
(let ((?x22935 (b_S_typ$ ?x22684)))
(let ((?x23088 (b_S_kind_n_of$ ?x22935)))
(let (($x23089 (= ?x23088 b_S_kind_n_primitive$)))
(let ((?x3688 (b_S_kind_n_of$ ?x3678)))
(let (($x22849 (= ?x3688 b_S_kind_n_array$)))
(let (($x21816 (b_S_is_n_arraytype$ ?x3678)))
(let (($x22850 (= $x21816 $x22849)))
(let (($x12251 (forall ((?v0 B_S_ctype$) )(!(let (($x2733 (b_S_is_n_arraytype$ ?v0)))
(= $x2733 (= (b_S_kind_n_of$ ?v0) b_S_kind_n_array$))) :pattern ( (b_S_is_n_arraytype$ ?v0) )))
))
(let (($x2733 (b_S_is_n_arraytype$ ?0)))
(let (($x12247 (= $x2733 (= (b_S_kind_n_of$ ?0) b_S_kind_n_array$))))
(let (($x3569 (forall ((?v0 B_S_ctype$) )(!(let (($x2733 (b_S_is_n_arraytype$ ?v0)))
(= $x2733 (= (b_S_kind_n_of$ ?v0) b_S_kind_n_array$))) :pattern ( (b_S_is_n_arraytype$ ?v0) )))
))
(let ((@x12250 (rewrite (= (= $x2733 (= (b_S_kind_n_of$ ?0) b_S_kind_n_array$)) $x12247))))
(let ((@x16186 (mp~ (mp (asserted $x3569) (quant-intro @x12250 (= $x3569 $x12251)) $x12251) (nnf-pos (refl (~ $x12247 $x12247)) (~ $x12251 $x12251)) $x12251)))
(let (($x2482 (forall ((?v0 B_S_ctype$) (?v1 Int) )(!(let ((?x2267 (b_S_array$ ?v0 ?v1)))
(b_S_is_n_arraytype$ ?x2267)) :pattern ( (b_S_array$ ?v0 ?v1) )))
))
(let ((?x2267 (b_S_array$ ?1 ?0)))
(let (($x2481 (b_S_is_n_arraytype$ ?x2267)))
(let ((@x15316 (mp~ (asserted $x2482) (nnf-pos (refl (~ $x2481 $x2481)) (~ $x2482 $x2482)) $x2482)))
(let ((@x24927 (unit-resolution (def-axiom (or (not $x22850) (not $x21816) $x22849)) (unit-resolution ((_ quant-inst b_T_T_u1$ v_b_P_H_len$) (or (not $x2482) $x21816)) @x15316 $x21816) (or (not $x22850) $x22849))))
(let ((@x24928 (unit-resolution @x24927 (unit-resolution ((_ quant-inst (b_S_array$ b_T_T_u1$ v_b_P_H_len$)) (or (not $x12251) $x22850)) @x16186 $x22850) $x22849)))
(let ((@x24406 (unit-resolution ((_ quant-inst (b_S_array$ b_T_T_u1$ v_b_P_H_len$) (b_S_ref$ ?x3680)) (or (not $x20974) (= (b_S_typ$ ?x3682) ?x3678))) @x20979 (= (b_S_typ$ ?x3682) ?x3678))))
(let ((@x23038 (trans (monotonicity @x24449 (= ?x22935 (b_S_typ$ ?x3682))) @x24406 (= ?x22935 ?x3678))))
(let ((@x23042 (trans (monotonicity @x23038 (= ?x23088 ?x3688)) @x24928 (= ?x23088 b_S_kind_n_array$))))
(let ((@x23031 (monotonicity @x23042 (= $x23089 (= b_S_kind_n_array$ b_S_kind_n_primitive$)))))
(let ((@x23049 (trans @x23031 (commutativity (= (= b_S_kind_n_array$ b_S_kind_n_primitive$) $x36)) (= $x23089 $x36))))
(let (($x45 (and (not (= b_S_kind_n_composite$ b_S_kind_n_array$)) (and (not (= b_S_kind_n_thread$ b_S_kind_n_array$)) true))))
(let (($x47 (and $x37 (and (not (= b_S_kind_n_composite$ b_S_kind_n_thread$)) $x45))))
(let (($x49 (and (not (= b_S_kind_n_primitive$ b_S_kind_n_composite$)) (and (not (= b_S_kind_n_primitive$ b_S_kind_n_thread$)) $x47))))
(let ((@x4039 (and-elim (asserted $x49) (and (not (= b_S_kind_n_primitive$ b_S_kind_n_thread$)) $x47))))
(let ((@x23078 (mp (and-elim (and-elim @x4039 $x47) $x37) (monotonicity (symm @x23049 (= $x36 $x23089)) $x23052) (not $x23089))))
(let (($x23034 (not $x23019)))
(let (($x23037 (not $x23018)))
(let ((@x23072 (monotonicity (symm (monotonicity @x24449 @x24449 (= $x23018 $x3738)) (= $x3738 $x23018)) (= $x10065 $x23037))))
(let ((@x23071 (unit-resolution (def-axiom (or (not $x23027) $x23018 $x23034)) (mp (hypothesis $x10065) @x23072 $x23037) (unit-resolution ((_ quant-inst v_b_S_s$ (b_S_ptr$ ?x3678 ?x21715) (b_S_ptr$ ?x3678 ?x21715) b_l_H_public$) (or (not $x12066) $x23027)) @x15761 $x23027) $x23034)))
(let (($x23069 (b_S_is$ ?x22684 ?x22935)))
(let ((@x23095 (mp (and-elim @x10087 $x3686) (symm (monotonicity @x24449 @x23038 (= $x23069 $x3686)) (= $x3686 $x23069)) $x23069)))
(let (($x23086 (b_S_typed$ v_b_S_s$ ?x22684)))
(let ((@x23099 (mp (and-elim @x10087 $x3687) (symm (monotonicity @x24449 (= $x23086 $x3687)) (= $x3687 $x23086)) $x23086)))
(let ((@x10097 (and-elim @x10087 $x3685)))
(let ((@x23104 (trans (monotonicity @x24449 (= (b_S_owner$ v_b_S_s$ ?x22684) ?x3684)) @x10097 (= (b_S_owner$ v_b_S_s$ ?x22684) b_S_me$))))
(let ((@x23113 (mp (and-elim @x10087 $x3683) (symm (monotonicity @x24449 (= $x22949 $x3683)) (= $x3683 $x22949)) $x22949)))
(let (($x22936 (b_S_is_n_non_n_primitive$ ?x22935)))
(let ((@x23118 (mp (and-elim @x10087 $x3691) (symm (monotonicity @x23038 (= $x22936 $x3691)) (= $x3691 $x22936)) $x22936)))
(let ((@x10104 (and-elim @x10087 $x3699)))
(let (($x19623 (forall ((?v0 B_S_state$) (?v1 B_S_ptr$) )(!(let (($x3028 (b_S_in_n_domain$ ?v0 ?v1 ?v1)))
(let (($x1001 (= (b_S_kind_n_of$ (b_S_typ$ ?v1)) b_S_kind_n_primitive$)))
(let (($x1106 (b_S_typed$ ?v0 ?v1)))
(let (($x8534 (not $x1106)))
(let (($x1098 (b_S_closed$ ?v0 ?v1)))
(let (($x3231 (not $x1098)))
(or (not (b_S_full_n_stop$ ?v0)) $x3231 (not (= (b_S_owner$ ?v0 ?v1) b_S_me$)) (not (b_S_is$ ?v1 (b_S_typ$ ?v1))) $x8534 $x1001 (not (b_S_is_n_non_n_primitive$ (b_S_typ$ ?v1))) $x3028))))))) :pattern ( (b_S_in_n_domain$ ?v0 ?v1 ?v1) )))
))
(let (($x8148 (forall ((?v0 B_S_state$) (?v1 B_S_ptr$) )(!(let (($x3028 (b_S_in_n_domain$ ?v0 ?v1 ?v1)))
(let ((?x999 (b_S_typ$ ?v1)))
(let (($x1042 (b_S_is_n_non_n_primitive$ ?x999)))
(let (($x1001 (= (b_S_kind_n_of$ ?x999) b_S_kind_n_primitive$)))
(let (($x1024 (not $x1001)))
(let (($x1106 (b_S_typed$ ?v0 ?v1)))
(let (($x1105 (b_S_is$ ?v1 ?x999)))
(let ((?x1103 (b_S_owner$ ?v0 ?v1)))
(let (($x1104 (= ?x1103 b_S_me$)))
(let (($x1098 (b_S_closed$ ?v0 ?v1)))
(let (($x1172 (b_S_full_n_stop$ ?v0)))
(let (($x8134 (and $x1172 $x1098 $x1104 $x1105 $x1106 $x1024 $x1042)))
(let (($x8142 (not $x8134)))
(or $x8142 $x3028)))))))))))))) :pattern ( (b_S_in_n_domain$ ?v0 ?v1 ?v1) )))
))
(let (($x3028 (b_S_in_n_domain$ ?1 ?0 ?0)))
(let (($x1098 (b_S_closed$ ?1 ?0)))
(let (($x3231 (not $x1098)))
(let (($x19618 (or (not (b_S_full_n_stop$ ?1)) $x3231 (not $x1104) (not (b_S_is$ ?0 (b_S_typ$ ?0))) $x8534 $x1001 (not (b_S_is_n_non_n_primitive$ (b_S_typ$ ?0))) $x3028)))
(let ((?x999 (b_S_typ$ ?0)))
(let (($x1042 (b_S_is_n_non_n_primitive$ ?x999)))
(let (($x1105 (b_S_is$ ?0 ?x999)))
(let (($x1172 (b_S_full_n_stop$ ?1)))
(let (($x8134 (and $x1172 $x1098 $x1104 $x1105 $x1106 $x1024 $x1042)))
(let (($x8142 (not $x8134)))
(let (($x8143 (or $x8142 $x3028)))
(let (($x19604 (or (not $x1172) $x3231 (not $x1104) (not $x1105) $x8534 $x1001 (not $x1042))))
(let ((@x19610 (monotonicity (rewrite (= $x8134 (not $x19604))) (= $x8142 (not (not $x19604))))))
(let ((@x19617 (monotonicity (trans @x19610 (rewrite (= (not (not $x19604)) $x19604)) (= $x8142 $x19604)) (= $x8143 (or $x19604 $x3028)))))
(let ((@x19625 (quant-intro (trans @x19617 (rewrite (= (or $x19604 $x3028) $x19618)) (= $x8143 $x19618)) (= $x8148 $x19623))))
(let (($x3031 (forall ((?v0 B_S_state$) (?v1 B_S_ptr$) )(!(let (($x3028 (b_S_in_n_domain$ ?v0 ?v1 ?v1)))
(let ((?x999 (b_S_typ$ ?v1)))
(let (($x1042 (b_S_is_n_non_n_primitive$ ?x999)))
(let (($x1001 (= (b_S_kind_n_of$ ?x999) b_S_kind_n_primitive$)))
(let (($x1024 (not $x1001)))
(let (($x1106 (b_S_typed$ ?v0 ?v1)))
(let (($x1105 (b_S_is$ ?v1 ?x999)))
(let (($x3024 (and $x1105 (and $x1106 (and $x1024 $x1042)))))
(let ((?x1103 (b_S_owner$ ?v0 ?v1)))
(let (($x1104 (= ?x1103 b_S_me$)))
(let (($x3025 (and $x1104 $x3024)))
(let (($x1098 (b_S_closed$ ?v0 ?v1)))
(let (($x3026 (and $x1098 $x3025)))
(let (($x1172 (b_S_full_n_stop$ ?v0)))
(let (($x3027 (and $x1172 $x3026)))
(=> $x3027 $x3028)))))))))))))))) :pattern ( (b_S_in_n_domain$ ?v0 ?v1 ?v1) )))
))
(let (($x3024 (and $x1105 (and $x1106 (and $x1024 $x1042)))))
(let (($x3025 (and $x1104 $x3024)))
(let (($x3026 (and $x1098 $x3025)))
(let (($x3027 (and $x1172 $x3026)))
(let (($x3029 (=> $x3027 $x3028)))
(let (($x8126 (and $x1098 $x1104 $x1105 $x1106 $x1024 $x1042)))
(let (($x8118 (and $x1104 $x1105 $x1106 $x1024 $x1042)))
(let ((@x8112 (rewrite (= (and $x1105 (and $x1106 $x1024 $x1042)) (and $x1105 $x1106 $x1024 $x1042)))))
(let ((@x8109 (monotonicity (rewrite (= (and $x1106 (and $x1024 $x1042)) (and $x1106 $x1024 $x1042))) (= $x3024 (and $x1105 (and $x1106 $x1024 $x1042))))))
(let ((@x8117 (monotonicity (trans @x8109 @x8112 (= $x3024 (and $x1105 $x1106 $x1024 $x1042))) (= $x3025 (and $x1104 (and $x1105 $x1106 $x1024 $x1042))))))
(let ((@x8122 (trans @x8117 (rewrite (= (and $x1104 (and $x1105 $x1106 $x1024 $x1042)) $x8118)) (= $x3025 $x8118))))
(let ((@x8130 (trans (monotonicity @x8122 (= $x3026 (and $x1098 $x8118))) (rewrite (= (and $x1098 $x8118) $x8126)) (= $x3026 $x8126))))
(let ((@x8138 (trans (monotonicity @x8130 (= $x3027 (and $x1172 $x8126))) (rewrite (= (and $x1172 $x8126) $x8134)) (= $x3027 $x8134))))
(let ((@x8147 (trans (monotonicity @x8138 (= $x3029 (=> $x8134 $x3028))) (rewrite (= (=> $x8134 $x3028) $x8143)) (= $x3029 $x8143))))
(let ((@x15729 (mp~ (mp (asserted $x3031) (quant-intro @x8147 (= $x3031 $x8148)) $x8148) (nnf-pos (refl (~ $x8143 $x8143)) (~ $x8148 $x8148)) $x8148)))
(let (($x23087 (not $x23086)))
(let (($x23085 (not $x23069)))
(let (($x21687 (not $x3699)))
(let (($x24394 (or (not $x19623) $x21687 $x22973 (not (= (b_S_owner$ v_b_S_s$ ?x22684) b_S_me$)) $x23085 $x23087 $x23089 (not $x22936) $x23019)))
(let (($x23090 (or $x21687 $x22973 (not (= (b_S_owner$ v_b_S_s$ ?x22684) b_S_me$)) $x23085 $x23087 $x23089 (not $x22936) $x23019)))
(let ((@x24401 (mp ((_ quant-inst v_b_S_s$ (b_S_ptr$ ?x3678 ?x21715)) (or (not $x19623) $x23090)) (rewrite (= (or (not $x19623) $x23090) $x24394)) $x24394)))
(let ((@x23120 (unit-resolution @x24401 (mp @x15729 @x19625 $x19623) @x10104 @x23118 @x23113 @x23104 (or $x23085 $x23087 $x23089 $x23019))))
(let ((@x23328 (mp (lemma (unit-resolution @x23120 @x23099 @x23095 @x23071 @x23078 false) $x3738) (symm (monotonicity @x24449 @x24449 (= $x23018 $x3738)) (= $x3738 $x23018)) $x23018)))
(let ((@x23329 (unit-resolution (def-axiom (or (not $x23027) $x23037 $x23019)) @x23328 (unit-resolution ((_ quant-inst v_b_S_s$ (b_S_ptr$ ?x3678 ?x21715) (b_S_ptr$ ?x3678 ?x21715) b_l_H_public$) (or (not $x12066) $x23027)) @x15761 $x23027) $x23019)))
(let (($x19663 (forall ((?v0 B_S_state$) (?v1 B_S_ptr$) (?v2 B_S_ptr$) )(!(let (($x19647 (forall ((?v3 B_S_ptr$) )(!(let (($x3038 (b_S_set_n_in2$ ?v3 (b_S_ver_n_domain$ (b_S_read_n_version$ ?v0 ?v2)))))
(let ((?x2289 (b_S_typ$ ?v1)))
(let (($x3032 (b_S_has_n_volatile_n_owns_n_set$ ?x2289)))
(or $x3032 (not (b_S_set_n_in$ ?v3 (b_S_owns$ ?v0 ?v1))) $x3038)))) :pattern ( (b_S_set_n_in$ ?v3 (b_S_owns$ ?v0 ?v1)) )))
))
(let (($x19654 (or (not (b_S_set_n_in$ ?v1 (b_S_domain$ ?v0 ?v2))) (not (b_S_closed$ ?v0 ?v1)) (not $x19647))))
(let (($x19655 (not $x19654)))
(let (($x2979 (b_S_in_n_domain$ ?v0 ?v1 ?v2)))
(let (($x8173 (not $x2979)))
(or $x8173 $x19655)))))) :pattern ( (b_S_in_n_domain$ ?v0 ?v1 ?v2) )))
))
(let (($x8179 (forall ((?v0 B_S_state$) (?v1 B_S_ptr$) (?v2 B_S_ptr$) )(!(let (($x8156 (forall ((?v3 B_S_ptr$) )(!(let (($x3038 (b_S_set_n_in2$ ?v3 (b_S_ver_n_domain$ (b_S_read_n_version$ ?v0 ?v2)))))
(let (($x3035 (b_S_set_n_in$ ?v3 (b_S_owns$ ?v0 ?v1))))
(let (($x3036 (and (not (b_S_has_n_volatile_n_owns_n_set$ (b_S_typ$ ?v1))) $x3035)))
(let (($x8152 (not $x3036)))
(or $x8152 $x3038))))) :pattern ( (b_S_set_n_in$ ?v3 (b_S_owns$ ?v0 ?v1)) )))
))
(let (($x1136 (b_S_closed$ ?v0 ?v1)))
(let (($x2963 (b_S_set_n_in$ ?v1 (b_S_domain$ ?v0 ?v2))))
(let (($x8165 (and $x2963 $x1136 $x8156)))
(let (($x2979 (b_S_in_n_domain$ ?v0 ?v1 ?v2)))
(let (($x8173 (not $x2979)))
(or $x8173 $x8165))))))) :pattern ( (b_S_in_n_domain$ ?v0 ?v1 ?v2) )))
))
(let (($x19647 (forall ((?v3 B_S_ptr$) )(!(let (($x3038 (b_S_set_n_in2$ ?v3 (b_S_ver_n_domain$ (b_S_read_n_version$ ?2 ?0)))))
(let ((?x2289 (b_S_typ$ ?1)))
(let (($x3032 (b_S_has_n_volatile_n_owns_n_set$ ?x2289)))
(or $x3032 (not (b_S_set_n_in$ ?v3 (b_S_owns$ ?2 ?1))) $x3038)))) :pattern ( (b_S_set_n_in$ ?v3 (b_S_owns$ ?2 ?1)) )))
))
(let (($x19654 (or (not (b_S_set_n_in$ ?1 (b_S_domain$ ?2 ?0))) (not (b_S_closed$ ?2 ?1)) (not $x19647))))
(let (($x19655 (not $x19654)))
(let (($x2979 (b_S_in_n_domain$ ?2 ?1 ?0)))
(let (($x8173 (not $x2979)))
(let (($x8156 (forall ((?v3 B_S_ptr$) )(!(let (($x3038 (b_S_set_n_in2$ ?v3 (b_S_ver_n_domain$ (b_S_read_n_version$ ?2 ?0)))))
(let (($x3035 (b_S_set_n_in$ ?v3 (b_S_owns$ ?2 ?1))))
(let (($x3036 (and (not (b_S_has_n_volatile_n_owns_n_set$ (b_S_typ$ ?1))) $x3035)))
(let (($x8152 (not $x3036)))
(or $x8152 $x3038))))) :pattern ( (b_S_set_n_in$ ?v3 (b_S_owns$ ?2 ?1)) )))
))
(let (($x1136 (b_S_closed$ ?2 ?1)))
(let (($x2963 (b_S_set_n_in$ ?1 (b_S_domain$ ?2 ?0))))
(let (($x8165 (and $x2963 $x1136 $x8156)))
(let (($x8174 (or $x8173 $x8165)))
(let (($x3038 (b_S_set_n_in2$ ?0 (b_S_ver_n_domain$ (b_S_read_n_version$ ?3 ?1)))))
(let ((?x2289 (b_S_typ$ ?2)))
(let (($x3032 (b_S_has_n_volatile_n_owns_n_set$ ?x2289)))
(let (($x19642 (or $x3032 (not (b_S_set_n_in$ ?0 (b_S_owns$ ?3 ?2))) $x3038)))
(let (($x3035 (b_S_set_n_in$ ?0 (b_S_owns$ ?3 ?2))))
(let (($x3036 (and (not $x3032) $x3035)))
(let (($x8152 (not $x3036)))
(let (($x8153 (or $x8152 $x3038)))
(let ((@x19636 (rewrite (= (not (not (or $x3032 (not $x3035)))) (or $x3032 (not $x3035))))))
(let ((@x19634 (monotonicity (rewrite (= $x3036 (not (or $x3032 (not $x3035))))) (= $x8152 (not (not (or $x3032 (not $x3035))))))))
(let ((@x19641 (monotonicity (trans @x19634 @x19636 (= $x8152 (or $x3032 (not $x3035)))) (= $x8153 (or (or $x3032 (not $x3035)) $x3038)))))
(let ((@x19646 (trans @x19641 (rewrite (= (or (or $x3032 (not $x3035)) $x3038) $x19642)) (= $x8153 $x19642))))
(let ((@x19652 (monotonicity (quant-intro @x19646 (= $x8156 $x19647)) (= $x8165 (and $x2963 $x1136 $x19647)))))
(let ((@x19659 (trans @x19652 (rewrite (= (and $x2963 $x1136 $x19647) $x19655)) (= $x8165 $x19655))))
(let ((@x19665 (quant-intro (monotonicity @x19659 (= $x8174 (or $x8173 $x19655))) (= $x8179 $x19663))))
(let ((@x15741 (monotonicity (refl (~ $x2963 $x2963)) (refl (~ $x1136 $x1136)) (nnf-pos (refl (~ $x8153 $x8153)) (~ $x8156 $x8156)) (~ $x8165 $x8165))))
(let ((@x15745 (nnf-pos (monotonicity (refl (~ $x8173 $x8173)) @x15741 (~ $x8174 $x8174)) (~ $x8179 $x8179))))
(let (($x3046 (forall ((?v0 B_S_state$) (?v1 B_S_ptr$) (?v2 B_S_ptr$) )(!(let (($x3041 (forall ((?v3 B_S_ptr$) )(!(let (($x3038 (b_S_set_n_in2$ ?v3 (b_S_ver_n_domain$ (b_S_read_n_version$ ?v0 ?v2)))))
(let (($x3035 (b_S_set_n_in$ ?v3 (b_S_owns$ ?v0 ?v1))))
(let (($x3036 (and (not (b_S_has_n_volatile_n_owns_n_set$ (b_S_typ$ ?v1))) $x3035)))
(=> $x3036 $x3038)))) :pattern ( (b_S_set_n_in$ ?v3 (b_S_owns$ ?v0 ?v1)) )))
))
(let (($x1136 (b_S_closed$ ?v0 ?v1)))
(let (($x2963 (b_S_set_n_in$ ?v1 (b_S_domain$ ?v0 ?v2))))
(let (($x3043 (and $x2963 (and $x1136 $x3041))))
(let (($x2979 (b_S_in_n_domain$ ?v0 ?v1 ?v2)))
(=> $x2979 $x3043)))))) :pattern ( (b_S_in_n_domain$ ?v0 ?v1 ?v2) )))
))
(let (($x3041 (forall ((?v3 B_S_ptr$) )(!(let (($x3038 (b_S_set_n_in2$ ?v3 (b_S_ver_n_domain$ (b_S_read_n_version$ ?2 ?0)))))
(let (($x3035 (b_S_set_n_in$ ?v3 (b_S_owns$ ?2 ?1))))
(let (($x3036 (and (not (b_S_has_n_volatile_n_owns_n_set$ (b_S_typ$ ?1))) $x3035)))
(=> $x3036 $x3038)))) :pattern ( (b_S_set_n_in$ ?v3 (b_S_owns$ ?2 ?1)) )))
))
(let (($x3043 (and $x2963 (and $x1136 $x3041))))
(let (($x3044 (=> $x2979 $x3043)))
(let ((@x8161 (monotonicity (quant-intro (rewrite (= (=> $x3036 $x3038) $x8153)) (= $x3041 $x8156)) (= (and $x1136 $x3041) (and $x1136 $x8156)))))
(let ((@x8169 (trans (monotonicity @x8161 (= $x3043 (and $x2963 (and $x1136 $x8156)))) (rewrite (= (and $x2963 (and $x1136 $x8156)) $x8165)) (= $x3043 $x8165))))
(let ((@x8178 (trans (monotonicity @x8169 (= $x3044 (=> $x2979 $x8165))) (rewrite (= (=> $x2979 $x8165) $x8174)) (= $x3044 $x8174))))
(let ((@x15746 (mp~ (mp (asserted $x3046) (quant-intro @x8178 (= $x3046 $x8179)) $x8179) @x15745 $x8179)))
(let ((@x24384 (rewrite (= (or (not $x19663) (or $x23034 $x23066)) (or (not $x19663) $x23034 $x23066)))))
(let ((@x24402 (mp ((_ quant-inst v_b_S_s$ (b_S_ptr$ ?x3678 ?x21715) (b_S_ptr$ ?x3678 ?x21715)) (or (not $x19663) (or $x23034 $x23066))) @x24384 (or (not $x19663) $x23034 $x23066))))
(let ((@x23335 (unit-resolution (unit-resolution @x24402 (mp @x15746 @x19665 $x19663) (or $x23034 $x23066)) @x23329 $x23066)))
(let ((@x23336 (unit-resolution (def-axiom (or (or (not $x23045) $x22973 (not $x23063)) $x23045)) @x23335 $x23045)))
(let (($x19385 (forall ((?v0 B_S_state$) (?v1 Int) (?v2 B_S_ptr$) (?v3 Int) (?v4 Int) (?v5 B_S_ctype$) )(!(let ((?x2903 (b_S_idx$ (b_S_ptr$ ?v5 ?v1) ?v4 ?v5)))
(let ((?x2429 (b_S_typemap$ ?v0)))
(let (($x19373 (or (not (b_S_typed$ ?v0 ?x2903)) (b_S_ts_n_is_n_volatile$ (b_S_select_o_tm$ ?x2429 ?x2903)))))
(let (($x19374 (not $x19373)))
(let (($x11257 (>= (+ ?v4 (* (- 1) ?v3)) 0)))
(let (($x2898 (b_S_set_n_in$ (b_S_ptr$ (b_S_array$ ?v5 ?v3) ?v1) (b_S_domain$ ?v0 ?v2))))
(or (not (b_S_full_n_stop$ ?v0)) (not (b_S_is_n_primitive$ ?v5)) (not $x2898) (not (>= ?v4 0)) $x11257 $x19374))))))) :pattern ( (b_S_set_n_in$ (b_S_ptr$ (b_S_array$ ?v5 ?v3) ?v1) (b_S_domain$ ?v0 ?v2)) (b_S_select_o_tm$ (b_S_typemap$ ?v0) (b_S_idx$ (b_S_ptr$ ?v5 ?v1) ?v4 ?v5)) (b_S_is_n_primitive$ ?v5) ) :pattern ( (b_S_set_n_in$ (b_S_ptr$ (b_S_array$ ?v5 ?v3) ?v1) (b_S_domain$ ?v0 ?v2)) (b_S_owner$ ?v0 (b_S_idx$ (b_S_ptr$ ?v5 ?v1) ?v4 ?v5)) (b_S_is_n_primitive$ ?v5) )))
))
(let (($x12034 (forall ((?v0 B_S_state$) (?v1 Int) (?v2 B_S_ptr$) (?v3 Int) (?v4 Int) (?v5 B_S_ctype$) )(!(let ((?x2903 (b_S_idx$ (b_S_ptr$ ?v5 ?v1) ?v4 ?v5)))
(let ((?x2429 (b_S_typemap$ ?v0)))
(let (($x2915 (and (b_S_typed$ ?v0 ?x2903) (not (b_S_ts_n_is_n_volatile$ (b_S_select_o_tm$ ?x2429 ?x2903))))))
(let (($x10181 (>= ?v4 0)))
(let (($x2898 (b_S_set_n_in$ (b_S_ptr$ (b_S_array$ ?v5 ?v3) ?v1) (b_S_domain$ ?v0 ?v2))))
(let (($x1179 (b_S_is_n_primitive$ ?v5)))
(let (($x2894 (b_S_full_n_stop$ ?v0)))
(let (($x12018 (and $x2894 $x1179 $x2898 $x10181 (not (>= (+ ?v4 (* (- 1) ?v3)) 0)))))
(let (($x12021 (not $x12018)))
(or $x12021 $x2915)))))))))) :pattern ( (b_S_set_n_in$ (b_S_ptr$ (b_S_array$ ?v5 ?v3) ?v1) (b_S_domain$ ?v0 ?v2)) (b_S_select_o_tm$ (b_S_typemap$ ?v0) (b_S_idx$ (b_S_ptr$ ?v5 ?v1) ?v4 ?v5)) (b_S_is_n_primitive$ ?v5) ) :pattern ( (b_S_set_n_in$ (b_S_ptr$ (b_S_array$ ?v5 ?v3) ?v1) (b_S_domain$ ?v0 ?v2)) (b_S_owner$ ?v0 (b_S_idx$ (b_S_ptr$ ?v5 ?v1) ?v4 ?v5)) (b_S_is_n_primitive$ ?v5) )))
))
(let ((?x2903 (b_S_idx$ (b_S_ptr$ ?0 ?4) ?1 ?0)))
(let ((?x2429 (b_S_typemap$ ?5)))
(let (($x19373 (or (not (b_S_typed$ ?5 ?x2903)) (b_S_ts_n_is_n_volatile$ (b_S_select_o_tm$ ?x2429 ?x2903)))))
(let (($x19374 (not $x19373)))
(let (($x11257 (>= (+ ?1 (* (- 1) ?2)) 0)))
(let (($x2898 (b_S_set_n_in$ (b_S_ptr$ (b_S_array$ ?0 ?2) ?4) (b_S_domain$ ?5 ?3))))
(let (($x19380 (or (not (b_S_full_n_stop$ ?5)) (not $x1179) (not $x2898) (not (>= ?1 0)) $x11257 $x19374)))
(let (($x2915 (and (b_S_typed$ ?5 ?x2903) (not (b_S_ts_n_is_n_volatile$ (b_S_select_o_tm$ ?x2429 ?x2903))))))
(let (($x10181 (>= ?1 0)))
(let (($x2894 (b_S_full_n_stop$ ?5)))
(let (($x12018 (and $x2894 $x1179 $x2898 $x10181 (not $x11257))))
(let (($x12021 (not $x12018)))
(let (($x12031 (or $x12021 $x2915)))
(let (($x19381 (= (or (or (not $x2894) (not $x1179) (not $x2898) (not $x10181) $x11257) $x19374) $x19380)))
(let (($x19378 (= $x12031 (or (or (not $x2894) (not $x1179) (not $x2898) (not $x10181) $x11257) $x19374))))
(let (($x19349 (or (not $x2894) (not $x1179) (not $x2898) (not $x10181) $x11257)))
(let ((@x19355 (monotonicity (rewrite (= $x12018 (not $x19349))) (= $x12021 (not (not $x19349))))))
(let ((@x19379 (monotonicity (trans @x19355 (rewrite (= (not (not $x19349)) $x19349)) (= $x12021 $x19349)) (rewrite (= $x2915 $x19374)) $x19378)))
(let ((@x19387 (quant-intro (trans @x19379 (rewrite $x19381) (= $x12031 $x19380)) (= $x12034 $x19385))))
(let (($x7948 (forall ((?v0 B_S_state$) (?v1 Int) (?v2 B_S_ptr$) (?v3 Int) (?v4 Int) (?v5 B_S_ctype$) )(!(let ((?x2903 (b_S_idx$ (b_S_ptr$ ?v5 ?v1) ?v4 ?v5)))
(let ((?x2429 (b_S_typemap$ ?v0)))
(let (($x2915 (and (b_S_typed$ ?v0 ?x2903) (not (b_S_ts_n_is_n_volatile$ (b_S_select_o_tm$ ?x2429 ?x2903))))))
(let (($x1751 (<= ?v3 ?v4)))
(let (($x7247 (not $x1751)))
(let (($x1330 (<= 0 ?v4)))
(let (($x2898 (b_S_set_n_in$ (b_S_ptr$ (b_S_array$ ?v5 ?v3) ?v1) (b_S_domain$ ?v0 ?v2))))
(let (($x1179 (b_S_is_n_primitive$ ?v5)))
(let (($x2894 (b_S_full_n_stop$ ?v0)))
(let (($x7922 (and $x2894 $x1179 $x2898 $x1330 $x7247)))
(or (not $x7922) $x2915))))))))))) :pattern ( (b_S_set_n_in$ (b_S_ptr$ (b_S_array$ ?v5 ?v3) ?v1) (b_S_domain$ ?v0 ?v2)) (b_S_select_o_tm$ (b_S_typemap$ ?v0) (b_S_idx$ (b_S_ptr$ ?v5 ?v1) ?v4 ?v5)) (b_S_is_n_primitive$ ?v5) ) :pattern ( (b_S_set_n_in$ (b_S_ptr$ (b_S_array$ ?v5 ?v3) ?v1) (b_S_domain$ ?v0 ?v2)) (b_S_owner$ ?v0 (b_S_idx$ (b_S_ptr$ ?v5 ?v1) ?v4 ?v5)) (b_S_is_n_primitive$ ?v5) )))
))
(let (($x7943 (or (not (and $x2894 $x1179 $x2898 (<= 0 ?1) (not (<= ?2 ?1)))) $x2915)))
(let (($x12022 (= (not (and $x2894 $x1179 $x2898 (<= 0 ?1) (not (<= ?2 ?1)))) $x12021)))
(let (($x1751 (<= ?2 ?1)))
(let (($x7247 (not $x1751)))
(let (($x1330 (<= 0 ?1)))
(let (($x7922 (and $x2894 $x1179 $x2898 $x1330 $x7247)))
(let ((@x12020 (monotonicity (rewrite (= $x1330 $x10181)) (monotonicity (rewrite (= $x1751 $x11257)) (= $x7247 (not $x11257))) (= $x7922 $x12018))))
(let ((@x12036 (quant-intro (monotonicity (monotonicity @x12020 $x12022) (= $x7943 $x12031)) (= $x7948 $x12034))))
(let (($x2920 (forall ((?v0 B_S_state$) (?v1 Int) (?v2 B_S_ptr$) (?v3 Int) (?v4 Int) (?v5 B_S_ctype$) )(!(let ((?x2903 (b_S_idx$ (b_S_ptr$ ?v5 ?v1) ?v4 ?v5)))
(let ((?x2429 (b_S_typemap$ ?v0)))
(let (($x2915 (and (b_S_typed$ ?v0 ?x2903) (not (b_S_ts_n_is_n_volatile$ (b_S_select_o_tm$ ?x2429 ?x2903))))))
(let (($x1330 (<= 0 ?v4)))
(let (($x2333 (and $x1330 (< ?v4 ?v3))))
(let (($x2898 (b_S_set_n_in$ (b_S_ptr$ (b_S_array$ ?v5 ?v3) ?v1) (b_S_domain$ ?v0 ?v2))))
(let (($x2899 (and $x2898 $x2333)))
(let (($x1179 (b_S_is_n_primitive$ ?v5)))
(let (($x2900 (and $x1179 $x2899)))
(let (($x2894 (b_S_full_n_stop$ ?v0)))
(let (($x2901 (and $x2894 $x2900)))
(=> $x2901 $x2915)))))))))))) :pattern ( (b_S_set_n_in$ (b_S_ptr$ (b_S_array$ ?v5 ?v3) ?v1) (b_S_domain$ ?v0 ?v2)) (b_S_select_o_tm$ (b_S_typemap$ ?v0) (b_S_idx$ (b_S_ptr$ ?v5 ?v1) ?v4 ?v5)) (b_S_is_n_primitive$ ?v5) ) :pattern ( (b_S_set_n_in$ (b_S_ptr$ (b_S_array$ ?v5 ?v3) ?v1) (b_S_domain$ ?v0 ?v2)) (b_S_owner$ ?v0 (b_S_idx$ (b_S_ptr$ ?v5 ?v1) ?v4 ?v5)) (b_S_is_n_primitive$ ?v5) )))
))
(let (($x2333 (and $x1330 (< ?1 ?2))))
(let (($x2899 (and $x2898 $x2333)))
(let (($x2900 (and $x1179 $x2899)))
(let (($x2901 (and $x2894 $x2900)))
(let (($x2916 (=> $x2901 $x2915)))
(let ((@x7916 (rewrite (= (and $x1179 (and $x2898 $x1330 $x7247)) (and $x1179 $x2898 $x1330 $x7247)))))
(let ((@x7252 (monotonicity (rewrite (= $x1330 $x1330)) (rewrite (= (< ?1 ?2) $x7247)) (= $x2333 (and $x1330 $x7247)))))
(let ((@x7910 (trans (monotonicity @x7252 (= $x2899 (and $x2898 (and $x1330 $x7247)))) (rewrite (= (and $x2898 (and $x1330 $x7247)) (and $x2898 $x1330 $x7247))) (= $x2899 (and $x2898 $x1330 $x7247)))))
(let ((@x7918 (trans (monotonicity @x7910 (= $x2900 (and $x1179 (and $x2898 $x1330 $x7247)))) @x7916 (= $x2900 (and $x1179 $x2898 $x1330 $x7247)))))
(let ((@x7926 (trans (monotonicity @x7918 (= $x2901 (and $x2894 (and $x1179 $x2898 $x1330 $x7247)))) (rewrite (= (and $x2894 (and $x1179 $x2898 $x1330 $x7247)) $x7922)) (= $x2901 $x7922))))
(let ((@x7947 (trans (monotonicity @x7926 (= $x2916 (=> $x7922 $x2915))) (rewrite (= (=> $x7922 $x2915) $x7943)) (= $x2916 $x7943))))
(let ((@x12037 (mp (mp (asserted $x2920) (quant-intro @x7947 (= $x2920 $x7948)) $x7948) @x12036 $x12034)))
(let ((@x19388 (mp (mp~ @x12037 (nnf-pos (refl (~ $x12031 $x12031)) (~ $x12034 $x12034)) $x12034) @x19387 $x19385)))
(let (($x23298 (not $x23297)))
(let (($x22190 (not $x3529)))
(let (($x23330 (not $x19385)))
(let (($x23309 (or $x23330 $x21687 $x22190 $x23298 $x8666 $x23305)))
(let (($x23302 (>= (+ 0 (* (- 1) v_b_P_H_len$)) 0)))
(let (($x23300 (not (>= 0 0))))
(let (($x23306 (or $x21687 $x22190 $x23298 $x23300 $x23302 $x23305)))
(let (($x23310 (or $x23330 $x23306)))
(let (($x23348 (or $x21687 $x22190 $x23298 $x8666 $x23305)))
(let ((@x23277 (rewrite (= (+ 0 (* (- 1) v_b_P_H_len$)) (* (- 1) v_b_P_H_len$)))))
(let ((@x23344 (trans (monotonicity @x23277 (= $x23302 (>= (* (- 1) v_b_P_H_len$) 0))) (rewrite (= (>= (* (- 1) v_b_P_H_len$) 0) $x8666)) (= $x23302 $x8666))))
(let ((@x23275 (trans (monotonicity (rewrite (= (>= 0 0) true)) (= $x23300 $x3805)) (rewrite (= $x3805 false)) (= $x23300 false))))
(let ((@x23347 (monotonicity @x23275 @x23344 (= $x23306 (or $x21687 $x22190 $x23298 false $x8666 $x23305)))))
(let ((@x23308 (trans @x23347 (rewrite (= (or $x21687 $x22190 $x23298 false $x8666 $x23305) $x23348)) (= $x23306 $x23348))))
(let ((@x23318 (trans (monotonicity @x23308 (= $x23310 (or $x23330 $x23348))) (rewrite (= (or $x23330 $x23348) $x23309)) (= $x23310 $x23309))))
(let ((@x23396 (unit-resolution (mp ((_ quant-inst v_b_S_s$ v_b_P_H_arr$ (b_S_ptr$ ?x3678 ?x21715) v_b_P_H_len$ 0 b_T_T_u1$) $x23310) @x23318 $x23309) @x19388 @x5093 @x10095 @x10104 (mp @x23336 @x23394 $x23297) (hypothesis $x23304) false)))
(let ((@x23503 (mp (unit-resolution (def-axiom (or $x23304 $x23260)) (lemma @x23396 $x23305) $x23260) @x23522 $x23358)))
(let (($x23368 (= (b_S_owner$ v_b_S_s$ (b_S_ts_n_emb$ ?x23356)) b_S_me$)))
(let (($x23370 (or $x23368 (b_S_in_n_wrapped_n_domain$ v_b_S_s$ (b_S_ts_n_emb$ ?x23356)))))
(let (($x23366 (= (b_S_kind_n_of$ (b_S_typ$ (b_S_ts_n_emb$ ?x23356))) b_S_kind_n_primitive$)))
(let (($x23363 (not $x23362)))
(let (($x23355 (not $x23354)))
(let (($x23372 (or $x23355 $x23363 $x23366 (not $x23370))))
(let (($x23377 (or (= (b_S_owner$ v_b_S_s$ ?x23206) b_S_me$) (b_S_in_n_wrapped_n_domain$ v_b_S_s$ ?x23206))))
(let (($x23373 (not $x23372)))
(let (($x23382 (not (or $x23373 (not (or $x23354 (not $x23377)))))))
(let (($x23383 (or (not (b_S_typed$ v_b_S_s$ ?x23206)) $x23382)))
(let (($x23349 (b_S_thread_n_local$ v_b_S_s$ ?x23206)))
(let (($x23385 (= $x23349 (not $x23383))))
(let ((@x23535 (monotonicity (symm (monotonicity @x23922 (= $x23349 $x3743)) (= $x3743 $x23349)) (= $x16251 (not $x23349)))))
(let ((@x23541 (unit-resolution (def-axiom (or (not $x23385) $x23349 $x23383)) (mp (hypothesis $x16251) @x23535 (not $x23349)) (unit-resolution ((_ quant-inst v_b_S_s$ (b_S_ptr$ b_T_T_u1$ ?x23186)) (or (not $x19790) $x23385)) @x19793 $x23385) $x23383)))
(let (($x23350 (b_S_typed$ v_b_S_s$ ?x23206)))
(let ((@x23928 (mp (unit-resolution (def-axiom (or $x23304 $x3741)) (lemma @x23396 $x23305) $x3741) (symm (monotonicity @x23922 (= $x23350 $x3741)) (= $x3741 $x23350)) $x23350)))
(let ((@x23600 (unit-resolution (def-axiom (or (not $x23383) (not $x23350) $x23382)) @x23928 @x23541 $x23382)))
(let ((@x23583 (unit-resolution (def-axiom (or (or $x23373 (not (or $x23354 (not $x23377)))) $x23372)) @x23600 $x23372)))
(let ((?x24269 (b_S_ref$ ?x22684)))
(let ((?x24283 (b_S_ptr$ b_T_T_u1$ ?x24269)))
(let ((?x24260 (b_S_idx$ ?x22684 0 b_T_T_u1$)))
(let (($x24286 (= ?x24260 ?x24283)))
(let (($x24289 (not $x24286)))
(let (($x24292 (or (not (b_S_extent_n_hint$ ?x24260 ?x22684)) $x24289)))
(let (($x24232 (not $x24292)))
(let (($x24310 (or $x23217 $x24232)))
(let (($x24274 (or (not (b_S_extent_n_hint$ ?x24260 ?x22684)) (not (= ?x24260 (b_S_ptr$ b_T_T_u1$ (+ ?x24269 (* 0 ?x3652))))))))
(let (($x24290 (= (not (= ?x24260 (b_S_ptr$ b_T_T_u1$ (+ ?x24269 (* 0 ?x3652))))) $x24289)))
(let ((@x24278 (monotonicity (rewrite (= (* 0 ?x3652) 0)) (= (+ ?x24269 (* 0 ?x3652)) (+ ?x24269 0)))))
(let ((@x24282 (trans @x24278 (rewrite (= (+ ?x24269 0) ?x24269)) (= (+ ?x24269 (* 0 ?x3652)) ?x24269))))
(let ((@x24285 (monotonicity @x24282 (= (b_S_ptr$ b_T_T_u1$ (+ ?x24269 (* 0 ?x3652))) ?x24283))))
(let ((@x24288 (monotonicity @x24285 (= (= ?x24260 (b_S_ptr$ b_T_T_u1$ (+ ?x24269 (* 0 ?x3652)))) $x24286))))
(let ((@x24309 (monotonicity (monotonicity (monotonicity @x24288 $x24290) (= $x24274 $x24292)) (= (not $x24274) $x24232))))
(let ((@x24303 (trans (monotonicity @x24309 (= (or $x23217 (not $x24274)) $x24310)) (rewrite (= $x24310 $x24310)) (= (or $x23217 (not $x24274)) $x24310))))
(let ((@x24501 (unit-resolution (mp ((_ quant-inst (b_S_ptr$ ?x3678 ?x21715) 0 b_T_T_u1$) (or $x23217 (not $x24274))) @x24303 $x24310) @x18901 (hypothesis $x24292) false)))
(let (($x24111 (= (b_S_ts_n_emb$ (b_S_select_o_tm$ ?x3874 (b_S_idx$ ?x23296 0 b_T_T_u1$))) ?x23296)))
(let ((?x24137 (b_S_idx$ ?x23296 0 b_T_T_u1$)))
(let ((?x24145 (b_S_select_o_tm$ ?x3874 ?x24137)))
(let (($x24127 (or (not $x24111) (b_S_ts_n_is_n_volatile$ ?x24145) (not (b_S_ts_n_is_n_array_n_elt$ ?x24145)) (not (b_S_typed$ v_b_S_s$ ?x24137)))))
(let (($x24130 (not $x24127)))
(let (($x24131 (b_S_typed$ v_b_S_s$ ?x23296)))
(let ((@x24253 (mp (and-elim @x10087 $x3687) (symm (monotonicity @x23339 (= $x24131 $x3687)) (= $x3687 $x24131)) $x24131)))
(let (($x18682 (forall ((?v0 B_S_state$) (?v1 Int) (?v2 B_S_ctype$) (?v3 Int) (?v4 Int) )(!(let (($x2378 (b_S_typed$ ?v0 (b_S_idx$ (b_S_ptr$ (b_S_array$ ?v2 ?v3) ?v1) ?v4 ?v2))))
(let ((?x2370 (b_S_typemap$ ?v0)))
(let ((?x2372 (b_S_select_o_tm$ ?x2370 (b_S_idx$ (b_S_ptr$ (b_S_array$ ?v2 ?v3) ?v1) ?v4 ?v2))))
(let (($x2377 (b_S_ts_n_is_n_array_n_elt$ ?x2372)))
(let (($x18670 (or (not (= (b_S_ts_n_emb$ ?x2372) (b_S_ptr$ (b_S_array$ ?v2 ?v3) ?v1))) (b_S_ts_n_is_n_volatile$ ?x2372) (not $x2377) (not $x2378))))
(let (($x18671 (not $x18670)))
(let (($x11071 (>= (+ ?v4 (* (- 1) ?v3)) 0)))
(let (($x10138 (>= ?v4 0)))
(let (($x10556 (not $x10138)))
(or (not (b_S_typed$ ?v0 (b_S_ptr$ (b_S_array$ ?v2 ?v3) ?v1))) $x10556 $x11071 $x18671)))))))))) :pattern ( (b_S_select_o_sm$ (b_S_statusmap$ ?v0) (b_S_idx$ (b_S_ptr$ ?v2 ?v1) ?v4 ?v2)) (b_S_ptr$ (b_S_array$ ?v2 ?v3) ?v1) ) :pattern ( (b_S_select_o_tm$ (b_S_typemap$ ?v0) (b_S_idx$ (b_S_ptr$ ?v2 ?v1) ?v4 ?v2)) (b_S_ptr$ (b_S_array$ ?v2 ?v3) ?v1) )))
))
(let (($x11697 (forall ((?v0 B_S_state$) (?v1 Int) (?v2 B_S_ctype$) (?v3 Int) (?v4 Int) )(!(let (($x2378 (b_S_typed$ ?v0 (b_S_idx$ (b_S_ptr$ (b_S_array$ ?v2 ?v3) ?v1) ?v4 ?v2))))
(let ((?x2370 (b_S_typemap$ ?v0)))
(let ((?x2372 (b_S_select_o_tm$ ?x2370 (b_S_idx$ (b_S_ptr$ (b_S_array$ ?v2 ?v3) ?v1) ?v4 ?v2))))
(let (($x2377 (b_S_ts_n_is_n_array_n_elt$ ?x2372)))
(let (($x2376 (not (b_S_ts_n_is_n_volatile$ ?x2372))))
(let ((?x2367 (b_S_ptr$ (b_S_array$ ?v2 ?v3) ?v1)))
(let (($x2374 (= (b_S_ts_n_emb$ ?x2372) ?x2367)))
(let (($x7338 (and $x2374 $x2376 $x2377 $x2378)))
(let (($x10138 (>= ?v4 0)))
(let (($x2368 (b_S_typed$ ?v0 ?x2367)))
(let (($x11688 (and $x2368 $x10138 (not (>= (+ ?v4 (* (- 1) ?v3)) 0)))))
(let (($x11691 (not $x11688)))
(or $x11691 $x7338))))))))))))) :pattern ( (b_S_select_o_sm$ (b_S_statusmap$ ?v0) (b_S_idx$ (b_S_ptr$ ?v2 ?v1) ?v4 ?v2)) (b_S_ptr$ (b_S_array$ ?v2 ?v3) ?v1) ) :pattern ( (b_S_select_o_tm$ (b_S_typemap$ ?v0) (b_S_idx$ (b_S_ptr$ ?v2 ?v1) ?v4 ?v2)) (b_S_ptr$ (b_S_array$ ?v2 ?v3) ?v1) )))
))
(let (($x2378 (b_S_typed$ ?4 (b_S_idx$ (b_S_ptr$ (b_S_array$ ?2 ?1) ?3) ?0 ?2))))
(let ((?x2370 (b_S_typemap$ ?4)))
(let ((?x2372 (b_S_select_o_tm$ ?x2370 (b_S_idx$ (b_S_ptr$ (b_S_array$ ?2 ?1) ?3) ?0 ?2))))
(let (($x2377 (b_S_ts_n_is_n_array_n_elt$ ?x2372)))
(let (($x18670 (or (not (= (b_S_ts_n_emb$ ?x2372) (b_S_ptr$ (b_S_array$ ?2 ?1) ?3))) (b_S_ts_n_is_n_volatile$ ?x2372) (not $x2377) (not $x2378))))
(let (($x18671 (not $x18670)))
(let (($x11071 (>= (+ ?0 (* (- 1) ?1)) 0)))
(let (($x10138 (>= ?0 0)))
(let (($x10556 (not $x10138)))
(let (($x18677 (or (not (b_S_typed$ ?4 (b_S_ptr$ (b_S_array$ ?2 ?1) ?3))) $x10556 $x11071 $x18671)))
(let (($x2376 (not (b_S_ts_n_is_n_volatile$ ?x2372))))
(let ((?x2367 (b_S_ptr$ (b_S_array$ ?2 ?1) ?3)))
(let (($x2374 (= (b_S_ts_n_emb$ ?x2372) ?x2367)))
(let (($x7338 (and $x2374 $x2376 $x2377 $x2378)))
(let (($x2368 (b_S_typed$ ?4 ?x2367)))
(let (($x11688 (and $x2368 $x10138 (not $x11071))))
(let (($x11691 (not $x11688)))
(let (($x11694 (or $x11691 $x7338)))
(let (($x18656 (or (not $x2368) $x10556 $x11071)))
(let ((@x18662 (monotonicity (rewrite (= $x11688 (not $x18656))) (= $x11691 (not (not $x18656))))))
(let ((@x18676 (monotonicity (trans @x18662 (rewrite (= (not (not $x18656)) $x18656)) (= $x11691 $x18656)) (rewrite (= $x7338 $x18671)) (= $x11694 (or $x18656 $x18671)))))
(let ((@x18684 (quant-intro (trans @x18676 (rewrite (= (or $x18656 $x18671) $x18677)) (= $x11694 $x18677)) (= $x11697 $x18682))))
(let (($x7352 (forall ((?v0 B_S_state$) (?v1 Int) (?v2 B_S_ctype$) (?v3 Int) (?v4 Int) )(!(let (($x2378 (b_S_typed$ ?v0 (b_S_idx$ (b_S_ptr$ (b_S_array$ ?v2 ?v3) ?v1) ?v4 ?v2))))
(let ((?x2370 (b_S_typemap$ ?v0)))
(let ((?x2372 (b_S_select_o_tm$ ?x2370 (b_S_idx$ (b_S_ptr$ (b_S_array$ ?v2 ?v3) ?v1) ?v4 ?v2))))
(let (($x2377 (b_S_ts_n_is_n_array_n_elt$ ?x2372)))
(let (($x2376 (not (b_S_ts_n_is_n_volatile$ ?x2372))))
(let ((?x2367 (b_S_ptr$ (b_S_array$ ?v2 ?v3) ?v1)))
(let (($x2374 (= (b_S_ts_n_emb$ ?x2372) ?x2367)))
(let (($x7338 (and $x2374 $x2376 $x2377 $x2378)))
(let (($x1660 (<= ?v3 ?v4)))
(let (($x7169 (not $x1660)))
(let (($x1212 (<= 0 ?v4)))
(let (($x2368 (b_S_typed$ ?v0 ?x2367)))
(let (($x7327 (and $x2368 $x1212 $x7169)))
(or (not $x7327) $x7338)))))))))))))) :pattern ( (b_S_select_o_sm$ (b_S_statusmap$ ?v0) (b_S_idx$ (b_S_ptr$ ?v2 ?v1) ?v4 ?v2)) (b_S_ptr$ (b_S_array$ ?v2 ?v3) ?v1) ) :pattern ( (b_S_select_o_tm$ (b_S_typemap$ ?v0) (b_S_idx$ (b_S_ptr$ ?v2 ?v1) ?v4 ?v2)) (b_S_ptr$ (b_S_array$ ?v2 ?v3) ?v1) )))
))
(let ((@x11568 (monotonicity (rewrite (= (<= ?1 ?0) $x11071)) (= (not (<= ?1 ?0)) (not $x11071)))))
(let ((@x10140 (rewrite (= $x1212 $x10138))))
(let ((@x11690 (monotonicity @x10140 @x11568 (= (and $x2368 $x1212 (not (<= ?1 ?0))) $x11688))))
(let ((@x11693 (monotonicity @x11690 (= (not (and $x2368 $x1212 (not (<= ?1 ?0)))) $x11691))))
(let ((@x11696 (monotonicity @x11693 (= (or (not (and $x2368 $x1212 (not (<= ?1 ?0)))) $x7338) $x11694))))
(let (($x2390 (forall ((?v0 B_S_state$) (?v1 Int) (?v2 B_S_ctype$) (?v3 Int) (?v4 Int) )(!(let (($x2378 (b_S_typed$ ?v0 (b_S_idx$ (b_S_ptr$ (b_S_array$ ?v2 ?v3) ?v1) ?v4 ?v2))))
(let ((?x2370 (b_S_typemap$ ?v0)))
(let ((?x2372 (b_S_select_o_tm$ ?x2370 (b_S_idx$ (b_S_ptr$ (b_S_array$ ?v2 ?v3) ?v1) ?v4 ?v2))))
(let (($x2377 (b_S_ts_n_is_n_array_n_elt$ ?x2372)))
(let (($x2376 (not (b_S_ts_n_is_n_volatile$ ?x2372))))
(let ((?x2367 (b_S_ptr$ (b_S_array$ ?v2 ?v3) ?v1)))
(let (($x2374 (= (b_S_ts_n_emb$ ?x2372) ?x2367)))
(let (($x2381 (and $x2374 (and $x2376 (and $x2377 $x2378)))))
(let (($x1212 (<= 0 ?v4)))
(let (($x2271 (and $x1212 (< ?v4 ?v3))))
(let (($x2368 (b_S_typed$ ?v0 ?x2367)))
(let (($x2369 (and $x2368 $x2271)))
(=> $x2369 $x2381))))))))))))) :pattern ( (b_S_select_o_sm$ (b_S_statusmap$ ?v0) (b_S_idx$ (b_S_ptr$ ?v2 ?v1) ?v4 ?v2)) (b_S_ptr$ (b_S_array$ ?v2 ?v3) ?v1) ) :pattern ( (b_S_select_o_tm$ (b_S_typemap$ ?v0) (b_S_idx$ (b_S_ptr$ ?v2 ?v1) ?v4 ?v2)) (b_S_ptr$ (b_S_array$ ?v2 ?v3) ?v1) )))
))
(let (($x7347 (or (not (and $x2368 $x1212 (not (<= ?1 ?0)))) $x7338)))
(let (($x2381 (and $x2374 (and $x2376 (and $x2377 $x2378)))))
(let (($x2271 (and $x1212 (< ?0 ?1))))
(let (($x2369 (and $x2368 $x2271)))
(let (($x2382 (=> $x2369 $x2381)))
(let ((@x7337 (monotonicity (rewrite (= (and $x2376 (and $x2377 $x2378)) (and $x2376 $x2377 $x2378))) (= $x2381 (and $x2374 (and $x2376 $x2377 $x2378))))))
(let ((@x7342 (trans @x7337 (rewrite (= (and $x2374 (and $x2376 $x2377 $x2378)) $x7338)) (= $x2381 $x7338))))
(let (($x1660 (<= ?1 ?0)))
(let (($x7169 (not $x1660)))
(let (($x7327 (and $x2368 $x1212 $x7169)))
(let ((@x7174 (monotonicity @x5396 (rewrite (= (< ?0 ?1) $x7169)) (= $x2271 (and $x1212 $x7169)))))
(let ((@x7331 (trans (monotonicity @x7174 (= $x2369 (and $x2368 (and $x1212 $x7169)))) (rewrite (= (and $x2368 (and $x1212 $x7169)) $x7327)) (= $x2369 $x7327))))
(let ((@x7351 (trans (monotonicity @x7331 @x7342 (= $x2382 (=> $x7327 $x7338))) (rewrite (= (=> $x7327 $x7338) $x7347)) (= $x2382 $x7347))))
(let ((@x11700 (mp (mp (asserted $x2390) (quant-intro @x7351 (= $x2390 $x7352)) $x7352) (quant-intro @x11696 (= $x7352 $x11697)) $x11697)))
(let ((@x18685 (mp (mp~ @x11700 (nnf-pos (refl (~ $x11694 $x11694)) (~ $x11697 $x11697)) $x11697) @x18684 $x18682)))
(let (($x24152 (not $x24131)))
(let (($x24161 (not $x18682)))
(let (($x24167 (or $x24161 $x24152 $x8666 $x24130)))
(let (($x24132 (or $x24152 $x23300 $x23302 $x24130)))
(let (($x24168 (or $x24161 $x24132)))
(let ((@x24160 (trans (monotonicity @x23275 @x23344 (= $x24132 (or $x24152 false $x8666 $x24130))) (rewrite (= (or $x24152 false $x8666 $x24130) (or $x24152 $x8666 $x24130))) (= $x24132 (or $x24152 $x8666 $x24130)))))
(let ((@x24169 (trans (monotonicity @x24160 (= $x24168 (or $x24161 (or $x24152 $x8666 $x24130)))) (rewrite (= (or $x24161 (or $x24152 $x8666 $x24130)) $x24167)) (= $x24168 $x24167))))
(let ((@x24243 (unit-resolution (mp ((_ quant-inst v_b_S_s$ v_b_P_H_arr$ b_T_T_u1$ v_b_P_H_len$ 0) $x24168) @x24169 $x24167) @x18685 @x10095 (lemma (unit-resolution (hypothesis $x24152) @x24253 false) $x24131) (hypothesis $x24127) false)))
(let ((@x24327 (unit-resolution ((_ quant-inst (b_S_array$ b_T_T_u1$ v_b_P_H_len$) (b_S_ref$ ?x3680)) (or (not $x20968) (= ?x21715 ?x3681))) @x20973 (= ?x21715 ?x3681))))
(let ((@x24335 (trans (trans (monotonicity @x24449 (= ?x24269 ?x21715)) @x24327 (= ?x24269 ?x3681)) @x23283 (= ?x24269 v_b_P_H_arr$))))
(let ((@x24339 (trans @x23339 (unit-resolution @x22701 @x16076 (and-elim @x10087 $x3686) $x22691) (= ?x23296 ?x22684))))
(let ((@x24454 (trans (monotonicity @x24339 (= ?x24137 ?x24260)) (hypothesis $x24286) (= ?x24137 ?x24283))))
(let ((@x24456 (trans (trans @x24454 (monotonicity @x24335 (= ?x24283 ?x3680)) (= ?x24137 ?x3680)) @x24358 (= ?x24137 ?x23203))))
(let ((@x24458 (monotonicity (trans @x24456 (symm @x23269 (= ?x23203 ?x3739)) (= ?x24137 ?x3739)) (= ?x24145 ?x23179))))
(let ((@x24492 (monotonicity (trans @x24072 (symm @x24458 (= ?x23179 ?x24145)) (= ?x23356 ?x24145)) (= (b_S_ts_n_emb$ ?x23356) (b_S_ts_n_emb$ ?x24145)))))
(let ((@x24493 (trans @x24492 (unit-resolution (def-axiom (or $x24127 $x24111)) (lemma @x24243 $x24130) $x24111) (= (b_S_ts_n_emb$ ?x23356) ?x23296))))
(let ((@x24496 (monotonicity (trans @x24493 @x23339 (= (b_S_ts_n_emb$ ?x23356) ?x3682)) (= (b_S_owner$ v_b_S_s$ (b_S_ts_n_emb$ ?x23356)) ?x3684))))
(let ((@x24497 (unit-resolution (hypothesis (not $x23368)) (trans @x24496 @x10097 $x23368) false)))
(let ((@x23585 (unit-resolution (lemma @x24497 (or $x24289 $x23368)) (unit-resolution (def-axiom (or $x24292 $x24286)) (lemma @x24501 $x24232) $x24286) $x23368)))
(let (($x23511 (= (b_S_kind_n_of$ (b_S_typ$ (b_S_ts_n_emb$ ?x23179))) b_S_kind_n_primitive$)))
(let (($x23504 (= (b_S_kind_n_of$ (b_S_typ$ (b_S_ts_n_emb$ ?x23179))) (b_S_kind_n_of$ (b_S_typ$ (b_S_ts_n_emb$ ?x23356))))))
(let ((@x23496 (monotonicity (symm @x24072 (= ?x23179 ?x23356)) (= (b_S_ts_n_emb$ ?x23179) (b_S_ts_n_emb$ ?x23356)))))
(let ((@x23773 (monotonicity @x23496 (= (b_S_typ$ (b_S_ts_n_emb$ ?x23179)) (b_S_typ$ (b_S_ts_n_emb$ ?x23356))))))
(let (($x23514 (or $x23511 (not (b_S_is_n_non_n_primitive$ (b_S_typ$ (b_S_ts_n_emb$ ?x23179)))))))
(let (($x19952 (forall ((?v0 B_S_type_n_state$) )(!(let (($x3400 (= (b_S_kind_n_of$ (b_S_typ$ (b_S_ts_n_emb$ ?v0))) b_S_kind_n_primitive$)))
(let (($x19948 (or $x3400 (not (b_S_is_n_non_n_primitive$ (b_S_typ$ (b_S_ts_n_emb$ ?v0)))))))
(not $x19948))) :pattern ( (b_S_ts_n_emb$ ?v0) )))
))
(let (($x3405 (forall ((?v0 B_S_type_n_state$) )(!(let (($x3400 (= (b_S_kind_n_of$ (b_S_typ$ (b_S_ts_n_emb$ ?v0))) b_S_kind_n_primitive$)))
(and (not $x3400) (b_S_is_n_non_n_primitive$ (b_S_typ$ (b_S_ts_n_emb$ ?v0))))) :pattern ( (b_S_ts_n_emb$ ?v0) )))
))
(let (($x3400 (= (b_S_kind_n_of$ (b_S_typ$ (b_S_ts_n_emb$ ?0))) b_S_kind_n_primitive$)))
(let (($x19948 (or $x3400 (not (b_S_is_n_non_n_primitive$ (b_S_typ$ (b_S_ts_n_emb$ ?0)))))))
(let (($x3403 (and (not $x3400) (b_S_is_n_non_n_primitive$ (b_S_typ$ (b_S_ts_n_emb$ ?0))))))
(let ((@x16056 (mp~ (asserted $x3405) (nnf-pos (refl (~ $x3403 $x3403)) (~ $x3405 $x3405)) $x3405)))
(let ((@x19955 (mp @x16056 (quant-intro (rewrite (= $x3403 (not $x19948))) (= $x3405 $x19952)) $x19952)))
(let ((@x23763 (unit-resolution ((_ quant-inst (b_S_select_o_tm$ ?x3874 ?x3739)) (or (not $x19952) (not $x23514))) @x19955 (not $x23514))))
(let ((@x23521 (unit-resolution (unit-resolution (def-axiom (or $x23514 (not $x23511))) @x23763 (not $x23511)) (trans (monotonicity @x23773 $x23504) (hypothesis $x23366) $x23511) false)))
(let ((@x23523 (unit-resolution (def-axiom (or $x23373 $x23355 $x23363 $x23366 (not $x23370))) (lemma @x23521 (not $x23366)) (unit-resolution (def-axiom (or $x23370 (not $x23368))) @x23585 $x23370) (or $x23373 $x23355 $x23363))))
(let ((@x23543 (unit-resolution @x23523 @x23583 (unit-resolution (def-axiom (or $x23362 $x23357)) @x23503 $x23362) @x23574 false)))
(let (($x21247 (or $x16242 $x16251 $x21244)))
(let (($x21250 (not $x21247)))
(let (($x21253 (or $x16242 $x16245 $x21250)))
(let (($x21256 (not $x21253)))
(let (($x21259 (or $x16242 $x16245 $x21256)))
(let (($x21262 (not $x21259)))
(let (($x21265 (or $x10065 $x21262)))
(let (($x21268 (not $x21265)))
(let (($x20335 (forall ((?v0 Int) )(let ((?x3765 (b_S_read_n_u1$ v_b_S_s$ (b_S_idx$ (b_S_ptr$ b_T_T_u1$ v_b_P_H_arr$) ?v0 b_T_T_u1$))))
(let (($x3840 (= ?x3765 v_b_S_result_G_0$)))
(let (($x12631 (>= (+ ?v0 (* (- 1) v_b_P_H_len$)) 0)))
(let (($x14211 (<= ?v0 4294967295)))
(let (($x17271 (not $x14211)))
(let (($x10138 (>= ?v0 0)))
(let (($x10556 (not $x10138)))
(or $x10556 $x17271 $x12631 (not $x3840))))))))))
))
(let (($x20320 (forall ((?v0 Int) )(let ((?x12644 (* (- 1) v_b_S_result_G_0$)))
(let ((?x3765 (b_S_read_n_u1$ v_b_S_s$ (b_S_idx$ (b_S_ptr$ b_T_T_u1$ v_b_P_H_arr$) ?v0 b_T_T_u1$))))
(let (($x12646 (<= (+ ?x3765 ?x12644) 0)))
(let (($x12631 (>= (+ ?v0 (* (- 1) v_b_P_H_len$)) 0)))
(let (($x14211 (<= ?v0 4294967295)))
(let (($x17271 (not $x14211)))
(let (($x10138 (>= ?v0 0)))
(let (($x10556 (not $x10138)))
(or $x10556 $x17271 $x12631 $x12646))))))))))
))
(let (($x20344 (not (or (not $x20320) (not $x20335)))))
(let (($x20349 (or $x20298 $x20344)))
(let (($x20360 (or $x12456 $x20190 $x20219 (not $x3818) (not $x3820) (not $x3822) $x20358 (not $x20349))))
(let (($x20361 (not $x20360)))
(let (($x20126 (forall ((?v0 Int) )(let ((?x12534 (* (- 1) v_b_L_H_max_G_3$)))
(let ((?x3765 (b_S_read_n_u1$ v_b_S_s$ (b_S_idx$ (b_S_ptr$ b_T_T_u1$ v_b_P_H_arr$) ?v0 b_T_T_u1$))))
(let (($x12536 (<= (+ ?x3765 ?x12534) 0)))
(let (($x12521 (>= (+ ?v0 (* (- 1) v_b_L_H_p_G_1$)) 0)))
(let (($x14211 (<= ?v0 4294967295)))
(let (($x17271 (not $x14211)))
(let (($x10138 (>= ?v0 0)))
(let (($x10556 (not $x10138)))
(or $x10556 $x17271 $x12521 $x12536))))))))))
))
(let (($x20146 (not (or (not $x20126) $x20131))))
(let (($x20151 (or $x20104 $x20146)))
(let (($x20159 (not (or $x12518 (not $x20151)))))
(let (($x20164 (or $x12518 $x20159)))
(let (($x20175 (or $x16351 $x16354 $x20170 (not $x3960) (not (>= v_b_L_H_p_G_1$ 2)) $x20173 (not $x20164))))
(let (($x20176 (not $x20175)))
(let (($x20181 (or $x16351 $x16354 $x20176)))
(let (($x20193 (not $x20181)))
(let (($x20233 (not (or $x20190 $x20219 $x12476 $x20230 (not $x3994) $x20173 $x20193))))
(let (($x20194 (or $x16330 $x16339 (not $x3935) (not $x3936) (not $x3937) $x20190 (not $x3940) (not $x3942) $x20173 $x20193)))
(let (($x20195 (not $x20194)))
(let (($x20200 (or $x16330 $x16339 $x20195)))
(let (($x20208 (not (or $x16330 $x16333 (not $x20200)))))
(let (($x20213 (or $x16330 $x16333 $x20208)))
(let (($x20222 (not (or $x20190 $x20219 $x12471 (not $x20213)))))
(let (($x20238 (or $x20222 $x20233)))
(let (($x20246 (not (or $x16330 $x16339 $x20190 $x20219 (not $x20238)))))
(let (($x20251 (or $x16330 $x16339 $x20246)))
(let (($x20259 (not (or $x16330 $x16333 (not $x20251)))))
(let (($x20264 (or $x16330 $x16333 $x20259)))
(let (($x20272 (not (or $x20190 $x20219 $x12453 (not $x20264)))))
(let (($x20366 (or $x20272 $x20361)))
(let (($x20080 (forall ((?v0 Int) )(let ((?x12384 (* (- 1) v_b_L_H_max_G_1$)))
(let ((?x3765 (b_S_read_n_u1$ v_b_S_s$ (b_S_idx$ (b_S_ptr$ b_T_T_u1$ v_b_P_H_arr$) ?v0 b_T_T_u1$))))
(let (($x12425 (<= (+ ?x3765 ?x12384) 0)))
(let (($x12411 (>= (+ ?v0 (* (- 1) v_b_L_H_p_G_0$)) 0)))
(let (($x14211 (<= ?v0 4294967295)))
(let (($x17271 (not $x14211)))
(let (($x10138 (>= ?v0 0)))
(let (($x10556 (not $x10138)))
(or $x10556 $x17271 $x12411 $x12425))))))))))
))
(let (($x20389 (or $x8666 $x16288 (not (>= v_b_L_H_max_G_1$ 0)) (not (<= v_b_L_H_max_G_1$ 255)) $x20374 $x20375 (not (<= v_b_L_H_p_G_0$ 4294967295)) (not (>= (+ v_b_P_H_len$ (* (- 1) v_b_L_H_p_G_0$)) 0)) (not $x20080) $x12435 $x20379 $x20190 $x20219 (not $x3886) (not $x3806) (not $x3893) (not $x3894) (not $x3895) (not $x3896) (not $x3897) (not $x3898) (not $x20366))))
(let (($x20390 (not $x20389)))
(let (($x20395 (or $x8666 $x16288 $x20390)))
(let (($x20058 (forall ((?v0 Int) )(let ((?x3765 (b_S_read_n_u1$ v_b_S_s$ (b_S_idx$ (b_S_ptr$ b_T_T_u1$ v_b_P_H_arr$) ?v0 b_T_T_u1$))))
(let (($x12367 (>= (+ v_b_L_H_max_G_0$ (* (- 1) ?x3765)) 0)))
(let (($x12354 (>= ?v0 1)))
(let (($x14211 (<= ?v0 4294967295)))
(let (($x17271 (not $x14211)))
(let (($x10138 (>= ?v0 0)))
(let (($x10556 (not $x10138)))
(or $x10556 $x17271 $x12354 $x12367)))))))))
))
(let (($x20404 (not (or (not $x20058) (not $x20395)))))
(let (($x20409 (or $x20036 $x20404)))
(let (($x20417 (not (or $x12351 (not $x20409)))))
(let (($x20422 (or $x12351 $x20417)))
(let (($x20433 (or $x16242 $x16251 (not $x3747) (not $x3748) (not $x3749) (not $x3750) (not $x20422))))
(let (($x20434 (not $x20433)))
(let (($x20439 (or $x16242 $x16251 $x20434)))
(let (($x20447 (not (or $x16242 $x16245 (not $x20439)))))
(let (($x20452 (or $x16242 $x16245 $x20447)))
(let (($x20460 (not (or $x10065 (not $x20452)))))
(let (($x20465 (or $x10065 $x20460)))
(let (($x12631 (>= (+ ?0 (* (- 1) v_b_P_H_len$)) 0)))
(let (($x14211 (<= ?0 4294967295)))
(let (($x17271 (not $x14211)))
(let (($x20324 (or $x10556 $x17271 $x12631 (not $x3840))))
(let ((@x21180 (monotonicity (quant-intro (refl (= $x20324 $x20324)) (= $x20335 $x21173)) (= (not $x20335) $x21178))))
(let (($x12646 (<= (+ ?x3765 (* (- 1) v_b_S_result_G_0$)) 0)))
(let (($x20315 (or $x10556 $x17271 $x12631 $x12646)))
(let ((@x21172 (monotonicity (quant-intro (refl (= $x20315 $x20315)) (= $x20320 $x21165)) (= (not $x20320) (not $x21165)))))
(let ((@x21186 (monotonicity (monotonicity @x21172 @x21180 (= (or (not $x20320) (not $x20335)) $x21181)) (= $x20344 $x21184))))
(let ((@x21192 (monotonicity (monotonicity @x21186 (= $x20349 $x21187)) (= (not $x20349) $x21190))))
(let (($x12536 (<= (+ ?x3765 ?x12534) 0)))
(let (($x12521 (>= (+ ?0 (* (- 1) v_b_L_H_p_G_1$)) 0)))
(let (($x20121 (or $x10556 $x17271 $x12521 $x12536)))
(let ((@x21056 (monotonicity (quant-intro (refl (= $x20121 $x20121)) (= $x20126 $x21049)) (= (not $x20126) (not $x21049)))))
(let ((@x21062 (monotonicity (monotonicity @x21056 (= (or (not $x20126) $x20131) $x21057)) (= $x20146 $x21060))))
(let ((@x21068 (monotonicity (monotonicity @x21062 (= $x20151 $x21063)) (= (not $x20151) $x21066))))
(let ((@x21074 (monotonicity (monotonicity @x21068 (= (or $x12518 (not $x20151)) $x21069)) (= $x20159 $x21072))))
(let ((@x21080 (monotonicity (monotonicity @x21074 (= $x20164 $x21075)) (= (not $x20164) $x21078))))
(let ((@x21089 (monotonicity (monotonicity (monotonicity @x21080 (= $x20175 $x21081)) (= $x20176 $x21084)) (= $x20181 $x21087))))
(let ((@x21125 (monotonicity (monotonicity @x21089 (= $x20193 $x21090)) (= (or $x20190 $x20219 $x12476 $x20230 (not $x3994) $x20173 $x20193) $x21123))))
(let ((@x21098 (monotonicity (monotonicity (monotonicity @x21089 (= $x20193 $x21090)) (= $x20194 $x21093)) (= $x20195 $x21096))))
(let ((@x21104 (monotonicity (monotonicity @x21098 (= $x20200 $x21099)) (= (not $x20200) $x21102))))
(let ((@x21110 (monotonicity (monotonicity @x21104 (= (or $x16330 $x16333 (not $x20200)) $x21105)) (= $x20208 $x21108))))
(let ((@x21116 (monotonicity (monotonicity @x21110 (= $x20213 $x21111)) (= (not $x20213) $x21114))))
(let ((@x21122 (monotonicity (monotonicity @x21116 (= (or $x20190 $x20219 $x12471 (not $x20213)) $x21117)) (= $x20222 $x21120))))
(let ((@x21131 (monotonicity @x21122 (monotonicity @x21125 (= $x20233 $x21126)) (= $x20238 $x21129))))
(let ((@x21137 (monotonicity (monotonicity @x21131 (= (not $x20238) $x21132)) (= (or $x16330 $x16339 $x20190 $x20219 (not $x20238)) $x21135))))
(let ((@x21146 (monotonicity (monotonicity (monotonicity @x21137 (= $x20246 $x21138)) (= $x20251 $x21141)) (= (not $x20251) $x21144))))
(let ((@x21152 (monotonicity (monotonicity @x21146 (= (or $x16330 $x16333 (not $x20251)) $x21147)) (= $x20259 $x21150))))
(let ((@x21158 (monotonicity (monotonicity @x21152 (= $x20264 $x21153)) (= (not $x20264) $x21156))))
(let ((@x21164 (monotonicity (monotonicity @x21158 (= (or $x20190 $x20219 $x12453 (not $x20264)) $x21159)) (= $x20272 $x21162))))
(let ((@x21201 (monotonicity @x21164 (monotonicity (monotonicity @x21192 (= $x20360 $x21193)) (= $x20361 $x21196)) (= $x20366 $x21199))))
(let (($x12425 (<= (+ ?x3765 (* (- 1) v_b_L_H_max_G_1$)) 0)))
(let (($x12411 (>= (+ ?0 (* (- 1) v_b_L_H_p_G_0$)) 0)))
(let (($x20075 (or $x10556 $x17271 $x12411 $x12425)))
(let ((@x21048 (monotonicity (quant-intro (refl (= $x20075 $x20075)) (= $x20080 $x21041)) (= (not $x20080) $x21046))))
(let ((@x21207 (monotonicity @x21048 (monotonicity @x21201 (= (not $x20366) $x21202)) (= $x20389 $x21205))))
(let ((@x21216 (monotonicity (monotonicity (monotonicity @x21207 (= $x20390 $x21208)) (= $x20395 $x21211)) (= (not $x20395) $x21214))))
(let (($x12367 (>= (+ v_b_L_H_max_G_0$ (* (- 1) ?x3765)) 0)))
(let (($x12354 (>= ?0 1)))
(let (($x20053 (or $x10556 $x17271 $x12354 $x12367)))
(let ((@x21040 (monotonicity (quant-intro (refl (= $x20053 $x20053)) (= $x20058 $x21033)) (= (not $x20058) (not $x21033)))))
(let ((@x21222 (monotonicity (monotonicity @x21040 @x21216 (= (or (not $x20058) (not $x20395)) $x21217)) (= $x20404 $x21220))))
(let ((@x21228 (monotonicity (monotonicity @x21222 (= $x20409 $x21223)) (= (not $x20409) $x21226))))
(let ((@x21234 (monotonicity (monotonicity @x21228 (= (or $x12351 (not $x20409)) $x21229)) (= $x20417 $x21232))))
(let ((@x21240 (monotonicity (monotonicity @x21234 (= $x20422 $x21235)) (= (not $x20422) $x21238))))
(let ((@x21249 (monotonicity (monotonicity (monotonicity @x21240 (= $x20433 $x21241)) (= $x20434 $x21244)) (= $x20439 $x21247))))
(let ((@x21255 (monotonicity (monotonicity @x21249 (= (not $x20439) $x21250)) (= (or $x16242 $x16245 (not $x20439)) $x21253))))
(let ((@x21264 (monotonicity (monotonicity (monotonicity @x21255 (= $x20447 $x21256)) (= $x20452 $x21259)) (= (not $x20452) $x21262))))
(let ((@x21270 (monotonicity (monotonicity @x21264 (= (or $x10065 (not $x20452)) $x21265)) (= $x20460 $x21268))))
(let (($x16498 (forall ((?v0 Int) )(let ((?x3765 (b_S_read_n_u1$ v_b_S_s$ (b_S_idx$ (b_S_ptr$ b_T_T_u1$ v_b_P_H_arr$) ?v0 b_T_T_u1$))))
(let (($x3840 (= ?x3765 v_b_S_result_G_0$)))
(let (($x12631 (>= (+ ?v0 (* (- 1) v_b_P_H_len$)) 0)))
(let (($x12635 (not $x12631)))
(let (($x14211 (<= ?v0 4294967295)))
(let (($x10138 (>= ?v0 0)))
(let (($x13747 (and $x10138 $x14211 $x12635 $x3840)))
(not $x13747)))))))))
))
(let (($x13163 (forall ((?v0 Int) )(let ((?x12644 (* (- 1) v_b_S_result_G_0$)))
(let ((?x3765 (b_S_read_n_u1$ v_b_S_s$ (b_S_idx$ (b_S_ptr$ b_T_T_u1$ v_b_P_H_arr$) ?v0 b_T_T_u1$))))
(let (($x12646 (<= (+ ?x3765 ?x12644) 0)))
(let (($x12631 (>= (+ ?v0 (* (- 1) v_b_P_H_len$)) 0)))
(let (($x12635 (not $x12631)))
(let (($x14211 (<= ?v0 4294967295)))
(let (($x10138 (>= ?v0 0)))
(let (($x13586 (and $x10138 $x14211 $x12635)))
(let (($x13963 (not $x13586)))
(or $x13963 $x12646)))))))))))
))
(let (($x16502 (and $x13163 $x16498)))
(let (($x16743 (not $x16738)))
(let (($x16746 (and $x16473 $x16474 $x16743)))
(let (($x16749 (not $x16746)))
(let (($x16765 (or $x16749 $x16760)))
(let (($x16768 (not $x16765)))
(let (($x16771 (or $x16768 $x16502)))
(let (($x16777 (and $x12453 $x12404 $x12389 $x3818 $x3820 $x3822 $x3824 $x16771)))
(let (($x12553 (not $x12550)))
(let (($x12556 (and $x12553 $x3976)))
(let (($x16388 (not $x12556)))
(let (($x13130 (forall ((?v0 Int) )(let ((?x12534 (* (- 1) v_b_L_H_max_G_3$)))
(let ((?x3765 (b_S_read_n_u1$ v_b_S_s$ (b_S_idx$ (b_S_ptr$ b_T_T_u1$ v_b_P_H_arr$) ?v0 b_T_T_u1$))))
(let (($x12536 (<= (+ ?x3765 ?x12534) 0)))
(let (($x12521 (>= (+ ?v0 (* (- 1) v_b_L_H_p_G_1$)) 0)))
(let (($x12525 (not $x12521)))
(let (($x14211 (<= ?v0 4294967295)))
(let (($x10138 (>= ?v0 0)))
(let (($x14023 (and $x10138 $x14211 $x12525)))
(let (($x12802 (not $x14023)))
(or $x12802 $x12536)))))))))))
))
(let (($x16391 (and $x13130 $x16388)))
(let (($x16605 (not $x16600)))
(let (($x16608 (and $x16366 $x16367 $x16605)))
(let (($x16611 (not $x16608)))
(let (($x16627 (or $x16611 $x16622)))
(let (($x16630 (not $x16627)))
(let (($x16633 (or $x16630 $x16391)))
(let (($x16636 (and $x12514 $x16633)))
(let (($x16639 (or $x12518 $x16636)))
(let (($x12505 (>= v_b_L_H_p_G_1$ 2)))
(let (($x16645 (and $x12494 $x13856 $x12500 $x3960 $x12505 $x12486 $x16639)))
(let (($x16650 (or $x16351 $x16354 $x16645)))
(let (($x16688 (and $x12404 $x12389 $x12471 $x3993 $x3994 $x12486 $x16650)))
(let (($x16656 (and $x3923 $x3926 $x3935 $x3936 $x3937 $x12404 $x3940 $x3942 $x12486 $x16650)))
(let (($x16661 (or $x16330 $x16339 $x16656)))
(let (($x16667 (and $x3923 $x3924 $x16661)))
(let (($x16672 (or $x16330 $x16333 $x16667)))
(let (($x16678 (and $x12404 $x12389 $x12476 $x16672)))
(let (($x16693 (or $x16678 $x16688)))
(let (($x16699 (and $x3923 $x3926 $x12404 $x12389 $x16693)))
(let (($x16704 (or $x16330 $x16339 $x16699)))
(let (($x16710 (and $x3923 $x3924 $x16704)))
(let (($x16715 (or $x16330 $x16333 $x16710)))
(let (($x16721 (and $x12404 $x12389 $x12456 $x16715)))
(let (($x16782 (or $x16721 $x16777)))
(let (($x12438 (not $x12435)))
(let (($x13341 (forall ((?v0 Int) )(let ((?x12384 (* (- 1) v_b_L_H_max_G_1$)))
(let ((?x3765 (b_S_read_n_u1$ v_b_S_s$ (b_S_idx$ (b_S_ptr$ b_T_T_u1$ v_b_P_H_arr$) ?v0 b_T_T_u1$))))
(let (($x12425 (<= (+ ?x3765 ?x12384) 0)))
(let (($x12411 (>= (+ ?v0 (* (- 1) v_b_L_H_p_G_0$)) 0)))
(let (($x12415 (not $x12411)))
(let (($x14211 (<= ?v0 4294967295)))
(let (($x10138 (>= ?v0 0)))
(let (($x13128 (and $x10138 $x14211 $x12415)))
(let (($x13111 (not $x13128)))
(or $x13111 $x12425)))))))))))
))
(let (($x12407 (>= (+ v_b_P_H_len$ (* (- 1) v_b_L_H_p_G_0$)) 0)))
(let (($x13193 (<= v_b_L_H_p_G_0$ 4294967295)))
(let (($x12799 (<= v_b_L_H_max_G_1$ 255)))
(let (($x12381 (>= v_b_L_H_max_G_1$ 0)))
(let (($x16788 (and $x8667 $x3769 $x12381 $x12799 $x12834 $x12397 $x13193 $x12407 $x13341 $x12438 $x3794 $x12404 $x12389 $x3886 $x3806 $x3893 $x3894 $x3895 $x3896 $x3897 $x3898 $x16782)))
(let (($x16793 (or $x8666 $x16288 $x16788)))
(let (($x12941 (forall ((?v0 Int) )(let ((?x3765 (b_S_read_n_u1$ v_b_S_s$ (b_S_idx$ (b_S_ptr$ b_T_T_u1$ v_b_P_H_arr$) ?v0 b_T_T_u1$))))
(let (($x12367 (>= (+ v_b_L_H_max_G_0$ (* (- 1) ?x3765)) 0)))
(let (($x12354 (>= ?v0 1)))
(let (($x12357 (not $x12354)))
(let (($x14211 (<= ?v0 4294967295)))
(let (($x10138 (>= ?v0 0)))
(let (($x14020 (and $x10138 $x14211 $x12357)))
(let (($x13679 (not $x14020)))
(or $x13679 $x12367))))))))))
))
(let (($x16796 (and $x12941 $x16793)))
(let (($x16268 (not (and (>= ?v0!13 0) (<= ?v0!13 4294967295) (not $x16265)))))
(let (($x16274 (or $x16268 $x16273)))
(let (($x16275 (not $x16274)))
(let (($x16799 (or $x16275 $x16796)))
(let (($x16802 (and $x12348 $x16799)))
(let (($x16805 (or $x12351 $x16802)))
(let (($x16811 (and $x3740 $x3743 $x3747 $x3748 $x3749 $x3750 $x16805)))
(let (($x16816 (or $x16242 $x16251 $x16811)))
(let (($x16822 (and $x3740 $x3741 $x16816)))
(let (($x16827 (or $x16242 $x16245 $x16822)))
(let (($x16830 (and $x3738 $x16827)))
(let (($x16833 (or $x10065 $x16830)))
(let (($x20369 (and $x8667 $x3769 $x12381 $x12799 $x12834 $x12397 $x13193 $x12407 $x20080 $x12438 $x3794 $x12404 $x12389 $x3886 $x3806 $x3893 $x3894 $x3895 $x3896 $x3897 $x3898 $x20366)))
(let ((@x20330 (monotonicity (rewrite (= (and $x10138 $x14211 (not $x12631) $x3840) (not $x20324))) (= (not (and $x10138 $x14211 (not $x12631) $x3840)) (not (not $x20324))))))
(let ((@x20334 (trans @x20330 (rewrite (= (not (not $x20324)) $x20324)) (= (not (and $x10138 $x14211 (not $x12631) $x3840)) $x20324))))
(let (($x12635 (not $x12631)))
(let (($x13586 (and $x10138 $x14211 $x12635)))
(let (($x13963 (not $x13586)))
(let (($x13836 (or $x13963 $x12646)))
(let ((@x20307 (monotonicity (rewrite (= $x13586 (not (or $x10556 $x17271 $x12631)))) (= $x13963 (not (not (or $x10556 $x17271 $x12631)))))))
(let ((@x20311 (trans @x20307 (rewrite (= (not (not (or $x10556 $x17271 $x12631))) (or $x10556 $x17271 $x12631))) (= $x13963 (or $x10556 $x17271 $x12631)))))
(let ((@x20319 (trans (monotonicity @x20311 (= $x13836 (or (or $x10556 $x17271 $x12631) $x12646))) (rewrite (= (or (or $x10556 $x17271 $x12631) $x12646) $x20315)) (= $x13836 $x20315))))
(let ((@x20340 (monotonicity (quant-intro @x20319 (= $x13163 $x20320)) (quant-intro @x20334 (= $x16498 $x20335)) (= $x16502 (and $x20320 $x20335)))))
(let ((@x20285 (monotonicity (rewrite (= $x16746 (not (or $x20277 $x20278 $x16738)))) (= $x16749 (not (not (or $x20277 $x20278 $x16738)))))))
(let ((@x20289 (trans @x20285 (rewrite (= (not (not (or $x20277 $x20278 $x16738))) (or $x20277 $x20278 $x16738))) (= $x16749 (or $x20277 $x20278 $x16738)))))
(let ((@x20297 (trans (monotonicity @x20289 (= $x16765 (or (or $x20277 $x20278 $x16738) $x16760))) (rewrite (= (or (or $x20277 $x20278 $x16738) $x16760) $x20293)) (= $x16765 $x20293))))
(let ((@x20351 (monotonicity (monotonicity @x20297 (= $x16768 $x20298)) (trans @x20340 (rewrite (= (and $x20320 $x20335) $x20344)) (= $x16502 $x20344)) (= $x16771 $x20349))))
(let ((@x20354 (monotonicity @x20351 (= $x16777 (and $x12453 $x12404 $x12389 $x3818 $x3820 $x3822 $x3824 $x20349)))))
(let ((@x20365 (trans @x20354 (rewrite (= (and $x12453 $x12404 $x12389 $x3818 $x3820 $x3822 $x3824 $x20349) $x20361)) (= $x16777 $x20361))))
(let ((@x20140 (trans (monotonicity (rewrite (= $x12556 $x20131)) (= $x16388 (not $x20131))) (rewrite (= (not $x20131) $x20130)) (= $x16388 $x20130))))
(let (($x12525 (not $x12521)))
(let (($x14023 (and $x10138 $x14211 $x12525)))
(let (($x12802 (not $x14023)))
(let (($x13633 (or $x12802 $x12536)))
(let ((@x20113 (monotonicity (rewrite (= $x14023 (not (or $x10556 $x17271 $x12521)))) (= $x12802 (not (not (or $x10556 $x17271 $x12521)))))))
(let ((@x20117 (trans @x20113 (rewrite (= (not (not (or $x10556 $x17271 $x12521))) (or $x10556 $x17271 $x12521))) (= $x12802 (or $x10556 $x17271 $x12521)))))
(let ((@x20125 (trans (monotonicity @x20117 (= $x13633 (or (or $x10556 $x17271 $x12521) $x12536))) (rewrite (= (or (or $x10556 $x17271 $x12521) $x12536) $x20121)) (= $x13633 $x20121))))
(let ((@x20143 (monotonicity (quant-intro @x20125 (= $x13130 $x20126)) @x20140 (= $x16391 (and $x20126 $x20130)))))
(let ((@x20091 (monotonicity (rewrite (= $x16608 (not (or $x20083 $x20084 $x16600)))) (= $x16611 (not (not (or $x20083 $x20084 $x16600)))))))
(let ((@x20095 (trans @x20091 (rewrite (= (not (not (or $x20083 $x20084 $x16600))) (or $x20083 $x20084 $x16600))) (= $x16611 (or $x20083 $x20084 $x16600)))))
(let ((@x20103 (trans (monotonicity @x20095 (= $x16627 (or (or $x20083 $x20084 $x16600) $x16622))) (rewrite (= (or (or $x20083 $x20084 $x16600) $x16622) $x20099)) (= $x16627 $x20099))))
(let ((@x20153 (monotonicity (monotonicity @x20103 (= $x16630 $x20104)) (trans @x20143 (rewrite (= (and $x20126 $x20130) $x20146)) (= $x16391 $x20146)) (= $x16633 $x20151))))
(let ((@x20163 (trans (monotonicity @x20153 (= $x16636 (and $x12514 $x20151))) (rewrite (= (and $x12514 $x20151) $x20159)) (= $x16636 $x20159))))
(let ((@x20169 (monotonicity (monotonicity @x20163 (= $x16639 $x20164)) (= $x16645 (and $x12494 $x13856 $x12500 $x3960 $x12505 $x12486 $x20164)))))
(let ((@x20180 (trans @x20169 (rewrite (= (and $x12494 $x13856 $x12500 $x3960 $x12505 $x12486 $x20164) $x20176)) (= $x16645 $x20176))))
(let ((@x20229 (monotonicity (monotonicity @x20180 (= $x16650 $x20181)) (= $x16688 (and $x12404 $x12389 $x12471 $x3993 $x3994 $x12486 $x20181)))))
(let ((@x20237 (trans @x20229 (rewrite (= (and $x12404 $x12389 $x12471 $x3993 $x3994 $x12486 $x20181) $x20233)) (= $x16688 $x20233))))
(let ((@x20197 (rewrite (= (and $x3923 $x3926 $x3935 $x3936 $x3937 $x12404 $x3940 $x3942 $x12486 $x20181) $x20195))))
(let ((@x20186 (monotonicity (monotonicity @x20180 (= $x16650 $x20181)) (= $x16656 (and $x3923 $x3926 $x3935 $x3936 $x3937 $x12404 $x3940 $x3942 $x12486 $x20181)))))
(let ((@x20205 (monotonicity (monotonicity (trans @x20186 @x20197 (= $x16656 $x20195)) (= $x16661 $x20200)) (= $x16667 (and $x3923 $x3924 $x20200)))))
(let ((@x20212 (trans @x20205 (rewrite (= (and $x3923 $x3924 $x20200) $x20208)) (= $x16667 $x20208))))
(let ((@x20218 (monotonicity (monotonicity @x20212 (= $x16672 $x20213)) (= $x16678 (and $x12404 $x12389 $x12476 $x20213)))))
(let ((@x20226 (trans @x20218 (rewrite (= (and $x12404 $x12389 $x12476 $x20213) $x20222)) (= $x16678 $x20222))))
(let ((@x20243 (monotonicity (monotonicity @x20226 @x20237 (= $x16693 $x20238)) (= $x16699 (and $x3923 $x3926 $x12404 $x12389 $x20238)))))
(let ((@x20250 (trans @x20243 (rewrite (= (and $x3923 $x3926 $x12404 $x12389 $x20238) $x20246)) (= $x16699 $x20246))))
(let ((@x20256 (monotonicity (monotonicity @x20250 (= $x16704 $x20251)) (= $x16710 (and $x3923 $x3924 $x20251)))))
(let ((@x20263 (trans @x20256 (rewrite (= (and $x3923 $x3924 $x20251) $x20259)) (= $x16710 $x20259))))
(let ((@x20269 (monotonicity (monotonicity @x20263 (= $x16715 $x20264)) (= $x16721 (and $x12404 $x12389 $x12456 $x20264)))))
(let ((@x20276 (trans @x20269 (rewrite (= (and $x12404 $x12389 $x12456 $x20264) $x20272)) (= $x16721 $x20272))))
(let (($x12415 (not $x12411)))
(let (($x13128 (and $x10138 $x14211 $x12415)))
(let (($x13111 (not $x13128)))
(let (($x12774 (or $x13111 $x12425)))
(let ((@x20067 (monotonicity (rewrite (= $x13128 (not (or $x10556 $x17271 $x12411)))) (= $x13111 (not (not (or $x10556 $x17271 $x12411)))))))
(let ((@x20071 (trans @x20067 (rewrite (= (not (not (or $x10556 $x17271 $x12411))) (or $x10556 $x17271 $x12411))) (= $x13111 (or $x10556 $x17271 $x12411)))))
(let ((@x20079 (trans (monotonicity @x20071 (= $x12774 (or (or $x10556 $x17271 $x12411) $x12425))) (rewrite (= (or (or $x10556 $x17271 $x12411) $x12425) $x20075)) (= $x12774 $x20075))))
(let ((@x20371 (monotonicity (quant-intro @x20079 (= $x13341 $x20080)) (monotonicity @x20276 @x20365 (= $x16782 $x20366)) (= $x16788 $x20369))))
(let ((@x20397 (monotonicity (trans @x20371 (rewrite (= $x20369 $x20390)) (= $x16788 $x20390)) (= $x16793 $x20395))))
(let (($x12357 (not $x12354)))
(let (($x14020 (and $x10138 $x14211 $x12357)))
(let (($x13679 (not $x14020)))
(let (($x12918 (or $x13679 $x12367)))
(let ((@x20045 (monotonicity (rewrite (= $x14020 (not (or $x10556 $x17271 $x12354)))) (= $x13679 (not (not (or $x10556 $x17271 $x12354)))))))
(let ((@x20049 (trans @x20045 (rewrite (= (not (not (or $x10556 $x17271 $x12354))) (or $x10556 $x17271 $x12354))) (= $x13679 (or $x10556 $x17271 $x12354)))))
(let ((@x20057 (trans (monotonicity @x20049 (= $x12918 (or (or $x10556 $x17271 $x12354) $x12367))) (rewrite (= (or (or $x10556 $x17271 $x12354) $x12367) $x20053)) (= $x12918 $x20053))))
(let ((@x20400 (monotonicity (quant-intro @x20057 (= $x12941 $x20058)) @x20397 (= $x16796 (and $x20058 $x20395)))))
(let (($x20017 (or (not (>= ?v0!13 0)) (not (<= ?v0!13 4294967295)) $x16265)))
(let (($x20019 (= (and (>= ?v0!13 0) (<= ?v0!13 4294967295) (not $x16265)) (not $x20017))))
(let ((@x20027 (trans (monotonicity (rewrite $x20019) (= $x16268 (not (not $x20017)))) (rewrite (= (not (not $x20017)) $x20017)) (= $x16268 $x20017))))
(let ((@x20035 (trans (monotonicity @x20027 (= $x16274 (or $x20017 $x16273))) (rewrite (= (or $x20017 $x16273) $x20031)) (= $x16274 $x20031))))
(let ((@x20411 (monotonicity (monotonicity @x20035 (= $x16275 $x20036)) (trans @x20400 (rewrite (= (and $x20058 $x20395) $x20404)) (= $x16796 $x20404)) (= $x16799 $x20409))))
(let ((@x20421 (trans (monotonicity @x20411 (= $x16802 (and $x12348 $x20409))) (rewrite (= (and $x12348 $x20409) $x20417)) (= $x16802 $x20417))))
(let ((@x20427 (monotonicity (monotonicity @x20421 (= $x16805 $x20422)) (= $x16811 (and $x3740 $x3743 $x3747 $x3748 $x3749 $x3750 $x20422)))))
(let ((@x20438 (trans @x20427 (rewrite (= (and $x3740 $x3743 $x3747 $x3748 $x3749 $x3750 $x20422) $x20434)) (= $x16811 $x20434))))
(let ((@x20444 (monotonicity (monotonicity @x20438 (= $x16816 $x20439)) (= $x16822 (and $x3740 $x3741 $x20439)))))
(let ((@x20451 (trans @x20444 (rewrite (= (and $x3740 $x3741 $x20439) $x20447)) (= $x16822 $x20447))))
(let ((@x20457 (monotonicity (monotonicity @x20451 (= $x16827 $x20452)) (= $x16830 (and $x3738 $x20452)))))
(let ((@x20467 (monotonicity (trans @x20457 (rewrite (= (and $x3738 $x20452) $x20460)) (= $x16830 $x20460)) (= $x16833 $x20465))))
(let (($x16483 (<= (+ ?x16481 (* (- 1) v_b_S_result_G_0$)) 0)))
(let (($x16478 (and $x16473 $x16474 (not (>= (+ ?v0!15 (* (- 1) v_b_P_H_len$)) 0)))))
(let (($x16485 (not (or (not $x16478) $x16483))))
(let (($x16506 (or $x16485 $x16502)))
(let (($x14268 (and $x12404 $x12389 $x3818 $x3820 $x3822 $x3824)))
(let (($x14273 (not $x14268)))
(let (($x16469 (not $x14273)))
(let (($x12619 (and $x12404 $x12389 $x12453)))
(let (($x12622 (not $x12619)))
(let (($x16466 (not $x12622)))
(let (($x16510 (and $x16466 $x16469 $x16506)))
(let (($x16376 (<= (+ ?x16374 ?x12534) 0)))
(let (($x16371 (and $x16366 $x16367 (not (>= (+ ?v0!14 (* (- 1) v_b_L_H_p_G_1$)) 0)))))
(let (($x16378 (not (or (not $x16371) $x16376))))
(let (($x16395 (or $x16378 $x16391)))
(let (($x16362 (not $x12518)))
(let (($x16399 (and $x16362 $x16395)))
(let (($x16403 (or $x12518 $x16399)))
(let (($x13815 (and $x12494 $x13856 $x12500 $x3960 $x12505 $x12486)))
(let (($x13880 (not $x13815)))
(let (($x16357 (not $x13880)))
(let (($x16407 (and $x16357 $x16403)))
(let (($x16411 (or $x16351 $x16354 $x16407)))
(let (($x12592 (and $x12404 $x12389 $x12471 $x3993 $x3994 $x12486)))
(let (($x12595 (not $x12592)))
(let (($x16435 (not $x12595)))
(let (($x16438 (and $x16435 $x16411)))
(let (($x12488 (and $x3923 $x3926 $x3935 $x3936 $x3937 $x12404 $x3940 $x3942 $x12486)))
(let (($x12491 (not $x12488)))
(let (($x16348 (not $x12491)))
(let (($x16415 (and $x16348 $x16411)))
(let (($x16419 (or $x16330 $x16339 $x16415)))
(let (($x16336 (not $x9775)))
(let (($x16423 (and $x16336 $x16419)))
(let (($x16427 (or $x16330 $x16333 $x16423)))
(let (($x12479 (and $x12404 $x12389 $x12476)))
(let (($x12482 (not $x12479)))
(let (($x16345 (not $x12482)))
(let (($x16431 (and $x16345 $x16427)))
(let (($x16442 (or $x16431 $x16438)))
(let (($x12465 (and $x3923 $x3926 $x12404 $x12389)))
(let (($x12468 (not $x12465)))
(let (($x16342 (not $x12468)))
(let (($x16446 (and $x16342 $x16442)))
(let (($x16450 (or $x16330 $x16339 $x16446)))
(let (($x16454 (and $x16336 $x16450)))
(let (($x16458 (or $x16330 $x16333 $x16454)))
(let (($x12459 (and $x12404 $x12389 $x12456)))
(let (($x12462 (not $x12459)))
(let (($x16327 (not $x12462)))
(let (($x16462 (and $x16327 $x16458)))
(let (($x16514 (or $x16462 $x16510)))
(let (($x14257 (and $x12404 $x12389 $x3886 $x3806 $x3893 $x3894 $x3895 $x3896 $x3897 $x3898)))
(let (($x14262 (not $x14257)))
(let (($x16324 (not $x14262)))
(let (($x13242 (and $x8667 $x3769 $x12381 $x12799 $x12389 $x12834 $x12397 $x13193 $x12404 $x12407 $x13341 $x12438 $x3794)))
(let (($x16518 (and $x13242 $x16324 $x16514)))
(let (($x16285 (not $x8667)))
(let (($x16522 (or $x16285 $x16288 $x16518)))
(let (($x16526 (and $x12941 $x16522)))
(let (($x16530 (or $x16275 $x16526)))
(let (($x16259 (not $x12351)))
(let (($x16534 (and $x16259 $x16530)))
(let (($x16538 (or $x12351 $x16534)))
(let (($x16254 (not $x10031)))
(let (($x16542 (and $x16254 $x16538)))
(let (($x16546 (or $x16242 $x16251 $x16542)))
(let (($x16248 (not $x10048)))
(let (($x16550 (and $x16248 $x16546)))
(let (($x16554 (or $x16242 $x16245 $x16550)))
(let (($x16239 (not $x10065)))
(let (($x16558 (and $x16239 $x16554)))
(let (($x16562 (or $x10065 $x16558)))
(let (($x16753 (= (+ ?x16481 (* (- 1) v_b_S_result_G_0$)) (+ (* (- 1) v_b_S_result_G_0$) ?x16481))))
(let ((@x16757 (monotonicity (rewrite $x16753) (= $x16483 (<= (+ (* (- 1) v_b_S_result_G_0$) ?x16481) 0)))))
(let ((@x16764 (trans @x16757 (rewrite (= (<= (+ (* (- 1) v_b_S_result_G_0$) ?x16481) 0) $x16760)) (= $x16483 $x16760))))
(let (($x16476 (>= (+ ?v0!15 (* (- 1) v_b_P_H_len$)) 0)))
(let (($x16731 (= (+ ?v0!15 (* (- 1) v_b_P_H_len$)) (+ (* (- 1) v_b_P_H_len$) ?v0!15))))
(let ((@x16735 (monotonicity (rewrite $x16731) (= $x16476 (>= (+ (* (- 1) v_b_P_H_len$) ?v0!15) 0)))))
(let ((@x16742 (trans @x16735 (rewrite (= (>= (+ (* (- 1) v_b_P_H_len$) ?v0!15) 0) $x16738)) (= $x16476 $x16738))))
(let ((@x16748 (monotonicity (monotonicity @x16742 (= (not $x16476) $x16743)) (= $x16478 $x16746))))
(let ((@x16767 (monotonicity (monotonicity @x16748 (= (not $x16478) $x16749)) @x16764 (= (or (not $x16478) $x16483) $x16765))))
(let ((@x16776 (monotonicity (rewrite (= $x16466 $x12619)) (rewrite (= $x16469 $x14268)) (monotonicity (monotonicity @x16767 (= $x16485 $x16768)) (= $x16506 $x16771)) (= $x16510 (and $x12619 $x14268 $x16771)))))
(let ((@x16781 (trans @x16776 (rewrite (= (and $x12619 $x14268 $x16771) $x16777)) (= $x16510 $x16777))))
(let ((@x16619 (monotonicity (rewrite (= (+ ?x16374 ?x12534) (+ ?x12534 ?x16374))) (= $x16376 (<= (+ ?x12534 ?x16374) 0)))))
(let ((@x16626 (trans @x16619 (rewrite (= (<= (+ ?x12534 ?x16374) 0) $x16622)) (= $x16376 $x16622))))
(let ((@x16602 (rewrite (= (>= (+ (* (- 1) v_b_L_H_p_G_1$) ?v0!14) 0) $x16600))))
(let (($x16369 (>= (+ ?v0!14 (* (- 1) v_b_L_H_p_G_1$)) 0)))
(let (($x16593 (= (+ ?v0!14 (* (- 1) v_b_L_H_p_G_1$)) (+ (* (- 1) v_b_L_H_p_G_1$) ?v0!14))))
(let ((@x16597 (monotonicity (rewrite $x16593) (= $x16369 (>= (+ (* (- 1) v_b_L_H_p_G_1$) ?v0!14) 0)))))
(let ((@x16607 (monotonicity (trans @x16597 @x16602 (= $x16369 $x16600)) (= (not $x16369) $x16605))))
(let ((@x16613 (monotonicity (monotonicity @x16607 (= $x16371 $x16608)) (= (not $x16371) $x16611))))
(let ((@x16632 (monotonicity (monotonicity @x16613 @x16626 (= (or (not $x16371) $x16376) $x16627)) (= $x16378 $x16630))))
(let ((@x16638 (monotonicity (rewrite (= $x16362 $x12514)) (monotonicity @x16632 (= $x16395 $x16633)) (= $x16399 $x16636))))
(let ((@x16644 (monotonicity (rewrite (= $x16357 $x13815)) (monotonicity @x16638 (= $x16403 $x16639)) (= $x16407 (and $x13815 $x16639)))))
(let ((@x16652 (monotonicity (trans @x16644 (rewrite (= (and $x13815 $x16639) $x16645)) (= $x16407 $x16645)) (= $x16411 $x16650))))
(let ((@x16687 (monotonicity (rewrite (= $x16435 $x12592)) @x16652 (= $x16438 (and $x12592 $x16650)))))
(let ((@x16655 (monotonicity (rewrite (= $x16348 $x12488)) @x16652 (= $x16415 (and $x12488 $x16650)))))
(let ((@x16663 (monotonicity (trans @x16655 (rewrite (= (and $x12488 $x16650) $x16656)) (= $x16415 $x16656)) (= $x16419 $x16661))))
(let ((@x16666 (monotonicity (rewrite (= $x16336 $x3925)) @x16663 (= $x16423 (and $x3925 $x16661)))))
(let ((@x16674 (monotonicity (trans @x16666 (rewrite (= (and $x3925 $x16661) $x16667)) (= $x16423 $x16667)) (= $x16427 $x16672))))
(let ((@x16677 (monotonicity (rewrite (= $x16345 $x12479)) @x16674 (= $x16431 (and $x12479 $x16672)))))
(let ((@x16695 (monotonicity (trans @x16677 (rewrite (= (and $x12479 $x16672) $x16678)) (= $x16431 $x16678)) (trans @x16687 (rewrite (= (and $x12592 $x16650) $x16688)) (= $x16438 $x16688)) (= $x16442 $x16693))))
(let ((@x16698 (monotonicity (rewrite (= $x16342 $x12465)) @x16695 (= $x16446 (and $x12465 $x16693)))))
(let ((@x16706 (monotonicity (trans @x16698 (rewrite (= (and $x12465 $x16693) $x16699)) (= $x16446 $x16699)) (= $x16450 $x16704))))
(let ((@x16709 (monotonicity (rewrite (= $x16336 $x3925)) @x16706 (= $x16454 (and $x3925 $x16704)))))
(let ((@x16717 (monotonicity (trans @x16709 (rewrite (= (and $x3925 $x16704) $x16710)) (= $x16454 $x16710)) (= $x16458 $x16715))))
(let ((@x16720 (monotonicity (rewrite (= $x16327 $x12459)) @x16717 (= $x16462 (and $x12459 $x16715)))))
(let ((@x16784 (monotonicity (trans @x16720 (rewrite (= (and $x12459 $x16715) $x16721)) (= $x16462 $x16721)) @x16781 (= $x16514 $x16782))))
(let ((@x16787 (monotonicity (rewrite (= $x16324 $x14257)) @x16784 (= $x16518 (and $x13242 $x14257 $x16782)))))
(let ((@x16792 (trans @x16787 (rewrite (= (and $x13242 $x14257 $x16782) $x16788)) (= $x16518 $x16788))))
(let ((@x16798 (monotonicity (monotonicity (rewrite (= $x16285 $x8666)) @x16792 (= $x16522 $x16793)) (= $x16526 $x16796))))
(let ((@x16804 (monotonicity (rewrite (= $x16259 $x12348)) (monotonicity @x16798 (= $x16530 $x16799)) (= $x16534 $x16802))))
(let ((@x16810 (monotonicity (rewrite (= $x16254 $x8880)) (monotonicity @x16804 (= $x16538 $x16805)) (= $x16542 (and $x8880 $x16805)))))
(let ((@x16818 (monotonicity (trans @x16810 (rewrite (= (and $x8880 $x16805) $x16811)) (= $x16542 $x16811)) (= $x16546 $x16816))))
(let ((@x16821 (monotonicity (rewrite (= $x16248 $x3742)) @x16818 (= $x16550 (and $x3742 $x16816)))))
(let ((@x16829 (monotonicity (trans @x16821 (rewrite (= (and $x3742 $x16816) $x16822)) (= $x16550 $x16822)) (= $x16554 $x16827))))
(let ((@x16835 (monotonicity (monotonicity (rewrite (= $x16239 $x3738)) @x16829 (= $x16558 $x16830)) (= $x16562 $x16833))))
(let (($x12742 (exists ((?v0 Int) )(let ((?x3765 (b_S_read_n_u1$ v_b_S_s$ (b_S_idx$ (b_S_ptr$ b_T_T_u1$ v_b_P_H_arr$) ?v0 b_T_T_u1$))))
(let (($x3840 (= ?x3765 v_b_S_result_G_0$)))
(let (($x12631 (>= (+ ?v0 (* (- 1) v_b_P_H_len$)) 0)))
(let (($x12635 (not $x12631)))
(let (($x14211 (<= ?v0 4294967295)))
(let (($x10138 (>= ?v0 0)))
(and $x10138 $x14211 $x12635 $x3840))))))))
))
(let (($x13974 (not $x13163)))
(let (($x14165 (or $x13974 $x12742)))
(let (($x13256 (and $x13163 $x14165)))
(let (($x13521 (or $x12622 $x14273 $x13256)))
(let (($x13025 (not $x13130)))
(let (($x12874 (or $x13025 $x12556)))
(let (($x13199 (and $x13130 $x12874)))
(let (($x13574 (or $x12518 $x13199)))
(let (($x13045 (and $x12514 $x13574)))
(let (($x14132 (or $x13880 $x13045)))
(let (($x13699 (and $x12494 $x13856 $x14132)))
(let (($x13117 (or $x12595 $x13699)))
(let (($x13338 (or $x12491 $x13699)))
(let (($x13207 (and $x3923 $x3926 $x13338)))
(let (($x14076 (or $x9775 $x13207)))
(let (($x14119 (and $x3923 $x3924 $x14076)))
(let (($x13844 (or $x12482 $x14119)))
(let (($x13324 (and $x13844 $x13117)))
(let (($x12957 (or $x12468 $x13324)))
(let (($x13000 (and $x3923 $x3926 $x12957)))
(let (($x13827 (or $x9775 $x13000)))
(let (($x14170 (and $x3923 $x3924 $x13827)))
(let (($x14053 (or $x12462 $x14170)))
(let (($x13922 (and $x14053 $x13521)))
(let (($x13591 (not $x13242)))
(let (($x13357 (or $x13591 $x14262 $x13922)))
(let (($x12756 (and $x8667 $x3769 $x13357)))
(let (($x13900 (not $x12941)))
(let (($x12819 (or $x13900 $x12756)))
(let (($x13702 (and $x12941 $x12819)))
(let (($x13223 (or $x12351 $x13702)))
(let (($x12832 (and $x12348 $x13223)))
(let (($x13861 (or $x10031 $x12832)))
(let (($x12808 (and $x3740 $x3743 $x13861)))
(let (($x13195 (or $x10048 $x12808)))
(let (($x13550 (and $x3740 $x3741 $x13195)))
(let (($x13361 (or $x10065 $x13550)))
(let (($x13725 (not (and $x3738 $x13361))))
(let ((@x16497 (refl (~ (not (and $x10138 $x14211 $x12635 $x3840)) (not (and $x10138 $x14211 $x12635 $x3840))))))
(let ((@x16494 (nnf-neg (nnf-pos (refl (~ $x13836 $x13836)) (~ $x13163 $x13163)) (~ (not $x13974) $x13163))))
(let ((@x16505 (nnf-neg @x16494 (nnf-neg @x16497 (~ (not $x12742) $x16498)) (~ (not $x14165) $x16502))))
(let ((@x16513 (nnf-neg (refl (~ $x16466 $x16466)) (refl (~ $x16469 $x16469)) (nnf-neg (sk (~ $x13974 $x16485)) @x16505 (~ (not $x13256) $x16506)) (~ (not $x13521) $x16510))))
(let ((@x16387 (nnf-neg (nnf-pos (refl (~ $x13633 $x13633)) (~ $x13130 $x13130)) (~ (not $x13025) $x13130))))
(let ((@x16398 (nnf-neg (sk (~ $x13025 $x16378)) (nnf-neg @x16387 (refl (~ $x16388 $x16388)) (~ (not $x12874) $x16391)) (~ (not $x13199) $x16395))))
(let ((@x16406 (nnf-neg (refl (~ $x12518 $x12518)) (nnf-neg (refl (~ $x16362 $x16362)) @x16398 (~ (not $x13574) $x16399)) (~ (not $x13045) $x16403))))
(let ((@x16414 (nnf-neg (refl (~ $x16351 $x16351)) (refl (~ $x16354 $x16354)) (nnf-neg (refl (~ $x16357 $x16357)) @x16406 (~ (not $x14132) $x16407)) (~ (not $x13699) $x16411))))
(let ((@x16332 (refl (~ $x16330 $x16330))))
(let ((@x16422 (nnf-neg @x16332 (refl (~ $x16339 $x16339)) (nnf-neg (refl (~ $x16348 $x16348)) @x16414 (~ (not $x13338) $x16415)) (~ (not $x13207) $x16419))))
(let ((@x16430 (nnf-neg @x16332 (refl (~ $x16333 $x16333)) (nnf-neg (refl (~ $x16336 $x16336)) @x16422 (~ (not $x14076) $x16423)) (~ (not $x14119) $x16427))))
(let ((@x16445 (nnf-neg (nnf-neg (refl (~ $x16345 $x16345)) @x16430 (~ (not $x13844) $x16431)) (nnf-neg (refl (~ $x16435 $x16435)) @x16414 (~ (not $x13117) $x16438)) (~ (not $x13324) $x16442))))
(let ((@x16453 (nnf-neg @x16332 (refl (~ $x16339 $x16339)) (nnf-neg (refl (~ $x16342 $x16342)) @x16445 (~ (not $x12957) $x16446)) (~ (not $x13000) $x16450))))
(let ((@x16461 (nnf-neg @x16332 (refl (~ $x16333 $x16333)) (nnf-neg (refl (~ $x16336 $x16336)) @x16453 (~ (not $x13827) $x16454)) (~ (not $x14170) $x16458))))
(let ((@x16517 (nnf-neg (nnf-neg (refl (~ $x16327 $x16327)) @x16461 (~ (not $x14053) $x16462)) @x16513 (~ (not $x13922) $x16514))))
(let ((@x16320 (monotonicity (refl (~ $x8667 $x8667)) (refl (~ $x3769 $x3769)) (refl (~ $x12381 $x12381)) (refl (~ $x12799 $x12799)) (refl (~ $x12389 $x12389)) (refl (~ $x12834 $x12834)) (refl (~ $x12397 $x12397)) (refl (~ $x13193 $x13193)) (refl (~ $x12404 $x12404)) (refl (~ $x12407 $x12407)) (nnf-pos (refl (~ $x12774 $x12774)) (~ $x13341 $x13341)) (refl (~ $x12438 $x12438)) (refl (~ $x3794 $x3794)) (~ $x13242 $x13242))))
(let ((@x16521 (nnf-neg (nnf-neg @x16320 (~ (not $x13591) $x13242)) (refl (~ $x16324 $x16324)) @x16517 (~ (not $x13357) $x16518))))
(let ((@x16525 (nnf-neg (refl (~ $x16285 $x16285)) (refl (~ $x16288 $x16288)) @x16521 (~ (not $x12756) $x16522))))
(let ((@x16284 (nnf-neg (nnf-pos (refl (~ $x12918 $x12918)) (~ $x12941 $x12941)) (~ (not $x13900) $x12941))))
(let ((@x16533 (nnf-neg (sk (~ $x13900 $x16275)) (nnf-neg @x16284 @x16525 (~ (not $x12819) $x16526)) (~ (not $x13702) $x16530))))
(let ((@x16541 (nnf-neg (refl (~ $x12351 $x12351)) (nnf-neg (refl (~ $x16259 $x16259)) @x16533 (~ (not $x13223) $x16534)) (~ (not $x12832) $x16538))))
(let ((@x16549 (nnf-neg (refl (~ $x16242 $x16242)) (refl (~ $x16251 $x16251)) (nnf-neg (refl (~ $x16254 $x16254)) @x16541 (~ (not $x13861) $x16542)) (~ (not $x12808) $x16546))))
(let ((@x16557 (nnf-neg (refl (~ $x16242 $x16242)) (refl (~ $x16245 $x16245)) (nnf-neg (refl (~ $x16248 $x16248)) @x16549 (~ (not $x13195) $x16550)) (~ (not $x13550) $x16554))))
(let ((@x16564 (nnf-neg (refl (~ $x10065 $x10065)) (nnf-neg (refl (~ $x16239 $x16239)) @x16557 (~ (not $x13361) $x16558)) (~ $x13725 $x16562))))
(let (($x12661 (exists ((?v0 Int) )(let ((?x3765 (b_S_read_n_u1$ v_b_S_s$ (b_S_idx$ (b_S_ptr$ b_T_T_u1$ v_b_P_H_arr$) ?v0 b_T_T_u1$))))
(let (($x3840 (= ?x3765 v_b_S_result_G_0$)))
(let (($x12631 (>= (+ ?v0 (* (- 1) v_b_P_H_len$)) 0)))
(let (($x12635 (not $x12631)))
(let ((?x10215 (* (- 1) b_S_max_o_u4$)))
(let ((?x10220 (+ ?v0 ?x10215)))
(let (($x10221 (<= ?x10220 0)))
(let (($x10138 (>= ?v0 0)))
(and $x10138 $x10221 $x12635 $x3840))))))))))
))
(let (($x12652 (forall ((?v0 Int) )(let ((?x12644 (* (- 1) v_b_S_result_G_0$)))
(let ((?x3765 (b_S_read_n_u1$ v_b_S_s$ (b_S_idx$ (b_S_ptr$ b_T_T_u1$ v_b_P_H_arr$) ?v0 b_T_T_u1$))))
(let (($x12646 (<= (+ ?x3765 ?x12644) 0)))
(let (($x12631 (>= (+ ?v0 (* (- 1) v_b_P_H_len$)) 0)))
(let (($x12635 (not $x12631)))
(let ((?x10215 (* (- 1) b_S_max_o_u4$)))
(let ((?x10220 (+ ?v0 ?x10215)))
(let (($x10221 (<= ?x10220 0)))
(let (($x10138 (>= ?v0 0)))
(let (($x12638 (and $x10138 $x10221 $x12635)))
(let (($x12641 (not $x12638)))
(or $x12641 $x12646)))))))))))))
))
(let (($x12655 (not $x12652)))
(let (($x12664 (or $x12655 $x12661)))
(let (($x12667 (and $x12652 $x12664)))
(let (($x14289 (or $x12622 $x14273 $x12667)))
(let (($x12542 (forall ((?v0 Int) )(let ((?x12534 (* (- 1) v_b_L_H_max_G_3$)))
(let ((?x3765 (b_S_read_n_u1$ v_b_S_s$ (b_S_idx$ (b_S_ptr$ b_T_T_u1$ v_b_P_H_arr$) ?v0 b_T_T_u1$))))
(let (($x12536 (<= (+ ?x3765 ?x12534) 0)))
(let (($x12521 (>= (+ ?v0 (* (- 1) v_b_L_H_p_G_1$)) 0)))
(let (($x12525 (not $x12521)))
(let ((?x10215 (* (- 1) b_S_max_o_u4$)))
(let ((?x10220 (+ ?v0 ?x10215)))
(let (($x10221 (<= ?x10220 0)))
(let (($x10138 (>= ?v0 0)))
(let (($x12528 (and $x10138 $x10221 $x12525)))
(let (($x12531 (not $x12528)))
(or $x12531 $x12536)))))))))))))
))
(let (($x12545 (not $x12542)))
(let (($x12559 (or $x12545 $x12556)))
(let (($x12562 (and $x12542 $x12559)))
(let (($x12565 (or $x12518 $x12562)))
(let (($x12568 (and $x12514 $x12565)))
(let ((?x12400 (* (- 1) v_b_L_H_p_G_0$)))
(let ((?x12401 (+ b_S_max_o_u4$ ?x12400)))
(let (($x12497 (>= ?x12401 1)))
(let (($x12508 (and $x12494 $x12497 $x12500 $x3960 $x12505 $x12486)))
(let (($x12511 (not $x12508)))
(let (($x12571 (or $x12511 $x12568)))
(let (($x12574 (and $x12494 $x12497 $x12571)))
(let (($x12598 (or $x12595 $x12574)))
(let (($x12577 (or $x12491 $x12574)))
(let (($x12580 (and $x3923 $x3926 $x12577)))
(let (($x12583 (or $x9775 $x12580)))
(let (($x12586 (and $x3923 $x3924 $x12583)))
(let (($x12589 (or $x12482 $x12586)))
(let (($x12601 (and $x12589 $x12598)))
(let (($x12604 (or $x12468 $x12601)))
(let (($x12607 (and $x3923 $x3926 $x12604)))
(let (($x12610 (or $x9775 $x12607)))
(let (($x12613 (and $x3923 $x3924 $x12610)))
(let (($x12616 (or $x12462 $x12613)))
(let (($x14294 (and $x12616 $x14289)))
(let (($x12431 (forall ((?v0 Int) )(let ((?x12384 (* (- 1) v_b_L_H_max_G_1$)))
(let ((?x3765 (b_S_read_n_u1$ v_b_S_s$ (b_S_idx$ (b_S_ptr$ b_T_T_u1$ v_b_P_H_arr$) ?v0 b_T_T_u1$))))
(let (($x12425 (<= (+ ?x3765 ?x12384) 0)))
(let (($x12411 (>= (+ ?v0 (* (- 1) v_b_L_H_p_G_0$)) 0)))
(let (($x12415 (not $x12411)))
(let ((?x10215 (* (- 1) b_S_max_o_u4$)))
(let ((?x10220 (+ ?v0 ?x10215)))
(let (($x10221 (<= ?x10220 0)))
(let (($x10138 (>= ?v0 0)))
(let (($x12418 (and $x10138 $x10221 $x12415)))
(let (($x12421 (not $x12418)))
(or $x12421 $x12425)))))))))))))
))
(let (($x12399 (>= ?x12401 0)))
(let (($x12391 (>= (+ b_S_max_o_u4$ (* (- 1) v_b_SL_H_witness_G_0$)) 0)))
(let (($x12383 (>= (+ b_S_max_o_u1$ (* (- 1) v_b_L_H_max_G_1$)) 0)))
(let (($x12441 (and $x8667 $x3769 $x12381 $x12383 $x12389 $x12391 $x12397 $x12399 $x12404 $x12407 $x12431 $x12438 $x3794)))
(let (($x12444 (not $x12441)))
(let (($x14297 (or $x12444 $x14262 $x14294)))
(let (($x14300 (and $x8667 $x3769 $x14297)))
(let (($x12374 (forall ((?v0 Int) )(let ((?x3765 (b_S_read_n_u1$ v_b_S_s$ (b_S_idx$ (b_S_ptr$ b_T_T_u1$ v_b_P_H_arr$) ?v0 b_T_T_u1$))))
(let (($x12367 (>= (+ v_b_L_H_max_G_0$ (* (- 1) ?x3765)) 0)))
(let (($x12354 (>= ?v0 1)))
(let (($x12357 (not $x12354)))
(let ((?x10215 (* (- 1) b_S_max_o_u4$)))
(let ((?x10220 (+ ?v0 ?x10215)))
(let (($x10221 (<= ?x10220 0)))
(let (($x10138 (>= ?v0 0)))
(let (($x12360 (and $x10138 $x10221 $x12357)))
(let (($x12363 (not $x12360)))
(or $x12363 $x12367))))))))))))
))
(let (($x12377 (not $x12374)))
(let (($x14303 (or $x12377 $x14300)))
(let (($x14306 (and $x12374 $x14303)))
(let (($x14309 (or $x12351 $x14306)))
(let (($x14312 (and $x12348 $x14309)))
(let (($x14315 (or $x10031 $x14312)))
(let (($x14318 (and $x3740 $x3743 $x14315)))
(let (($x14321 (or $x10048 $x14318)))
(let (($x14324 (and $x3740 $x3741 $x14321)))
(let (($x14327 (or $x10065 $x14324)))
(let (($x14330 (and $x3738 $x14327)))
(let (($x14333 (not $x14330)))
(let (($x13747 (and $x10138 $x14211 $x12635 $x3840)))
(let ((?x10215 (* (- 1) b_S_max_o_u4$)))
(let ((?x10220 (+ ?0 ?x10215)))
(let (($x10221 (<= ?x10220 0)))
(let (($x12658 (and $x10138 $x10221 $x12635 $x3840)))
(let ((?x2232 (* 65536 65536)))
(let ((?x2237 (- ?x2232 1)))
(let (($x2238 (= b_S_max_o_u4$ ?x2237)))
(let ((@x7014 (monotonicity (rewrite (= (* (- 1) 1) (- 1))) (= (+ 4294967296 (* (- 1) 1)) (+ 4294967296 (- 1))))))
(let ((@x7019 (trans @x7014 (rewrite (= (+ 4294967296 (- 1)) 4294967295)) (= (+ 4294967296 (* (- 1) 1)) 4294967295))))
(let ((@x7011 (trans (monotonicity (rewrite (= ?x2232 4294967296)) (= ?x2237 (- 4294967296 1))) (rewrite (= (- 4294967296 1) (+ 4294967296 (* (- 1) 1)))) (= ?x2237 (+ 4294967296 (* (- 1) 1))))))
(let ((@x7024 (monotonicity (trans @x7011 @x7019 (= ?x2237 4294967295)) (= $x2238 (= b_S_max_o_u4$ 4294967295)))))
(let ((@x7025 (mp (asserted $x2238) @x7024 (= b_S_max_o_u4$ 4294967295))))
(let ((@x13415 (trans (monotonicity @x7025 (= ?x10215 (* (- 1) 4294967295))) (rewrite (= (* (- 1) 4294967295) (- 4294967295))) (= ?x10215 (- 4294967295)))))
(let ((@x12861 (trans (monotonicity @x13415 (= ?x10220 (+ ?0 (- 4294967295)))) (rewrite (= (+ ?0 (- 4294967295)) (+ (- 4294967295) ?0))) (= ?x10220 (+ (- 4294967295) ?0)))))
(let ((@x13817 (trans (monotonicity @x12861 (= $x10221 (<= (+ (- 4294967295) ?0) 0))) (rewrite (= (<= (+ (- 4294967295) ?0) 0) $x14211)) (= $x10221 $x14211))))
(let ((@x12741 (monotonicity (monotonicity @x13817 (= (and $x10138 $x10221 $x12635) $x13586)) (= (not (and $x10138 $x10221 $x12635)) $x13963))))
(let ((@x12841 (quant-intro (monotonicity @x12741 (= (or (not (and $x10138 $x10221 $x12635)) $x12646) $x13836)) (= $x12652 $x13163))))
(let ((@x12999 (monotonicity (monotonicity @x12841 (= $x12655 $x13974)) (quant-intro (monotonicity @x13817 (= $x12658 $x13747)) (= $x12661 $x12742)) (= $x12664 $x14165))))
(let ((@x13331 (monotonicity (monotonicity @x12841 @x12999 (= $x12667 $x13256)) (= $x14289 $x13521))))
(let ((@x13632 (monotonicity (monotonicity @x13817 (= (and $x10138 $x10221 $x12525) $x14023)) (= (not (and $x10138 $x10221 $x12525)) $x12802))))
(let ((@x13024 (quant-intro (monotonicity @x13632 (= (or (not (and $x10138 $x10221 $x12525)) $x12536) $x13633)) (= $x12542 $x13130))))
(let ((@x14205 (monotonicity @x13024 (monotonicity (monotonicity @x13024 (= $x12545 $x13025)) (= $x12559 $x12874)) (= $x12562 $x13199))))
(let ((@x14110 (monotonicity (monotonicity @x7025 (= ?x12401 (+ 4294967295 ?x12400))) (= $x12497 (>= (+ 4294967295 ?x12400) 1)))))
(let ((@x13814 (trans @x14110 (rewrite (= (>= (+ 4294967295 ?x12400) 1) $x13856)) (= $x12497 $x13856))))
(let ((@x13698 (monotonicity (monotonicity (monotonicity @x13814 (= $x12508 $x13815)) (= $x12511 $x13880)) (monotonicity (monotonicity @x14205 (= $x12565 $x13574)) (= $x12568 $x13045)) (= $x12571 $x14132))))
(let ((@x13379 (monotonicity (monotonicity @x13814 @x13698 (= $x12574 $x13699)) (= $x12598 $x13117))))
(let ((@x13206 (monotonicity (monotonicity @x13814 @x13698 (= $x12574 $x13699)) (= $x12577 $x13338))))
(let ((@x13797 (monotonicity (monotonicity (monotonicity @x13206 (= $x12580 $x13207)) (= $x12583 $x14076)) (= $x12586 $x14119))))
(let ((@x12956 (monotonicity (monotonicity @x13797 (= $x12589 $x13844)) @x13379 (= $x12601 $x13324))))
(let ((@x14003 (monotonicity (monotonicity (monotonicity @x12956 (= $x12604 $x12957)) (= $x12607 $x13000)) (= $x12610 $x13827))))
(let ((@x13356 (monotonicity (monotonicity (monotonicity @x14003 (= $x12613 $x14170)) (= $x12616 $x14053)) @x13331 (= $x14294 $x13922))))
(let ((@x13685 (monotonicity (monotonicity @x13817 (= (and $x10138 $x10221 $x12415) $x13128)) (= (not (and $x10138 $x10221 $x12415)) $x13111))))
(let ((@x13593 (quant-intro (monotonicity @x13685 (= (or (not (and $x10138 $x10221 $x12415)) $x12425) $x12774)) (= $x12431 $x13341))))
(let ((@x13192 (monotonicity (monotonicity @x7025 (= ?x12401 (+ 4294967295 ?x12400))) (= $x12399 (>= (+ 4294967295 ?x12400) 0)))))
(let ((@x13397 (trans @x13192 (rewrite (= (>= (+ 4294967295 ?x12400) 0) $x13193)) (= $x12399 $x13193))))
(let ((@x13988 (rewrite (= (>= (+ 4294967295 (* (- 1) v_b_SL_H_witness_G_0$)) 0) $x12834))))
(let (($x13515 (= (+ b_S_max_o_u4$ (* (- 1) v_b_SL_H_witness_G_0$)) (+ 4294967295 (* (- 1) v_b_SL_H_witness_G_0$)))))
(let ((@x12807 (monotonicity (monotonicity @x7025 $x13515) (= $x12391 (>= (+ 4294967295 (* (- 1) v_b_SL_H_witness_G_0$)) 0)))))
(let (($x13742 (= (+ b_S_max_o_u1$ (* (- 1) v_b_L_H_max_G_1$)) (+ 255 (* (- 1) v_b_L_H_max_G_1$)))))
(let ((@x12798 (monotonicity (monotonicity (asserted (= b_S_max_o_u1$ 255)) $x13742) (= $x12383 (>= (+ 255 (* (- 1) v_b_L_H_max_G_1$)) 0)))))
(let ((@x13309 (trans @x12798 (rewrite (= (>= (+ 255 (* (- 1) v_b_L_H_max_G_1$)) 0) $x12799)) (= $x12383 $x12799))))
(let ((@x13590 (monotonicity @x13309 (trans @x12807 @x13988 (= $x12391 $x12834)) @x13397 @x13593 (= $x12441 $x13242))))
(let ((@x13983 (monotonicity (monotonicity @x13590 (= $x12444 $x13591)) @x13356 (= $x14297 $x13357))))
(let ((@x13411 (monotonicity (monotonicity @x13817 (= (and $x10138 $x10221 $x12357) $x14020)) (= (not (and $x10138 $x10221 $x12357)) $x13679))))
(let ((@x14159 (quant-intro (monotonicity @x13411 (= (or (not (and $x10138 $x10221 $x12357)) $x12367) $x12918)) (= $x12374 $x12941))))
(let ((@x13693 (monotonicity (monotonicity @x14159 (= $x12377 $x13900)) (monotonicity @x13983 (= $x14300 $x12756)) (= $x14303 $x12819))))
(let ((@x13179 (monotonicity (monotonicity @x14159 @x13693 (= $x14306 $x13702)) (= $x14309 $x13223))))
(let ((@x13194 (monotonicity (monotonicity (monotonicity @x13179 (= $x14312 $x12832)) (= $x14315 $x13861)) (= $x14318 $x12808))))
(let ((@x13761 (monotonicity (monotonicity (monotonicity @x13194 (= $x14321 $x13195)) (= $x14324 $x13550)) (= $x14327 $x13361))))
(let ((@x13603 (monotonicity (monotonicity @x13761 (= $x14330 (and $x3738 $x13361))) (= $x14333 $x13725))))
(let (($x12625 (and b_S_position_n_marker$ $x12404 $x12389 $x3818 $x3820 $x3822 $x3824)))
(let (($x12628 (not $x12625)))
(let (($x12670 (or $x12628 $x12667)))
(let (($x12673 (and b_S_position_n_marker$ $x12670)))
(let (($x12676 (or $x12622 $x12673)))
(let (($x12679 (and $x12616 $x12676)))
(let (($x12447 (and $x12404 $x12389 $x3886 $x3806 $x3699 $x3893 $x3894 $x3895 $x3896 $x3897 $x3898)))
(let (($x12450 (not $x12447)))
(let (($x12682 (or $x12444 $x12450 $x12679)))
(let (($x12685 (and $x8667 $x3769 $x12682)))
(let (($x12688 (or $x12377 $x12685)))
(let (($x12691 (and $x12374 $x12688)))
(let (($x12694 (or $x12351 $x12691)))
(let (($x12697 (and $x12348 $x12694)))
(let (($x12700 (or $x10031 $x12697)))
(let (($x12703 (and $x3740 $x3743 $x12700)))
(let (($x12706 (or $x10048 $x12703)))
(let (($x12709 (and $x3740 $x3741 $x12706)))
(let (($x12712 (or $x10065 $x12709)))
(let (($x12715 (and $x3738 $x12712)))
(let (($x12718 (not $x12715)))
(let ((@x13981 (iff-true (asserted b_S_position_n_marker$) (= b_S_position_n_marker$ true))))
(let ((@x14267 (monotonicity @x13981 (= $x12625 (and true $x12404 $x12389 $x3818 $x3820 $x3822 $x3824)))))
(let ((@x14272 (trans @x14267 (rewrite (= (and true $x12404 $x12389 $x3818 $x3820 $x3822 $x3824) $x14268)) (= $x12625 $x14268))))
(let ((@x14278 (monotonicity (monotonicity @x14272 (= $x12628 $x14273)) (= $x12670 (or $x14273 $x12667)))))
(let ((@x14285 (trans (monotonicity @x13981 @x14278 (= $x12673 (and true (or $x14273 $x12667)))) (rewrite (= (and true (or $x14273 $x12667)) (or $x14273 $x12667))) (= $x12673 (or $x14273 $x12667)))))
(let ((@x14293 (trans (monotonicity @x14285 (= $x12676 (or $x12622 (or $x14273 $x12667)))) (rewrite (= (or $x12622 (or $x14273 $x12667)) $x14289)) (= $x12676 $x14289))))
(let (($x14258 (= (and $x12404 $x12389 $x3886 $x3806 true $x3893 $x3894 $x3895 $x3896 $x3897 $x3898) $x14257)))
(let (($x14255 (= $x12447 (and $x12404 $x12389 $x3886 $x3806 true $x3893 $x3894 $x3895 $x3896 $x3897 $x3898))))
(let ((@x14261 (trans (monotonicity (iff-true @x10104 (= $x3699 true)) $x14255) (rewrite $x14258) (= $x12447 $x14257))))
(let ((@x14299 (monotonicity (monotonicity @x14261 (= $x12450 $x14262)) (monotonicity @x14293 (= $x12679 $x14294)) (= $x12682 $x14297))))
(let ((@x14308 (monotonicity (monotonicity (monotonicity @x14299 (= $x12685 $x14300)) (= $x12688 $x14303)) (= $x12691 $x14306))))
(let ((@x14317 (monotonicity (monotonicity (monotonicity @x14308 (= $x12694 $x14309)) (= $x12697 $x14312)) (= $x12700 $x14315))))
(let ((@x14326 (monotonicity (monotonicity (monotonicity @x14317 (= $x12703 $x14318)) (= $x12706 $x14321)) (= $x12709 $x14324))))
(let ((@x14335 (monotonicity (monotonicity (monotonicity @x14326 (= $x12712 $x14327)) (= $x12715 $x14330)) (= $x12718 $x14333))))
(let ((@x12637 (monotonicity (rewrite (= (<= v_b_P_H_len$ ?0) $x12631)) (= $x9165 $x12635))))
(let ((@x10223 (rewrite (= $x1344 $x10221))))
(let ((@x12663 (quant-intro (monotonicity @x10140 @x10223 @x12637 (= $x9202 $x12658)) (= $x9207 $x12661))))
(let ((@x12640 (monotonicity @x10140 @x10223 @x12637 (= (and $x1212 $x1344 $x9165) (and $x10138 $x10221 $x12635)))))
(let ((@x12643 (monotonicity @x12640 (= (not (and $x1212 $x1344 $x9165)) (not (and $x10138 $x10221 $x12635))))))
(let ((@x12651 (monotonicity @x12643 (rewrite (= $x3837 $x12646)) (= $x9180 (or (not (and $x10138 $x10221 $x12635)) $x12646)))))
(let ((@x12657 (monotonicity (quant-intro @x12651 (= $x9185 $x12652)) (= (not $x9185) $x12655))))
(let ((@x12669 (monotonicity (quant-intro @x12651 (= $x9185 $x12652)) (monotonicity @x12657 @x12663 (= $x9228 $x12664)) (= $x9233 $x12667))))
(let ((@x12390 (rewrite (= $x3776 $x12389))))
(let ((@x12406 (rewrite (= $x3783 $x12404))))
(let ((@x12630 (monotonicity (monotonicity @x12406 @x12390 (= $x9159 $x12625)) (= (not $x9159) $x12628))))
(let ((@x12675 (monotonicity (monotonicity @x12630 @x12669 (= $x9240 $x12670)) (= $x9245 $x12673))))
(let ((@x12621 (monotonicity @x12406 @x12390 (rewrite (= $x4012 $x12453)) (= (and $x3783 $x3776 $x4012) $x12619))))
(let ((@x12678 (monotonicity (monotonicity @x12621 (= (not (and $x3783 $x3776 $x4012)) $x12622)) @x12675 (= $x9963 $x12676))))
(let ((@x12555 (monotonicity (rewrite (= (<= v_b_P_H_len$ v_b_SL_H_witness_G_1$) $x12550)) (= $x9687 $x12553))))
(let ((@x12527 (monotonicity (rewrite (= (<= v_b_L_H_p_G_1$ ?0) $x12521)) (= $x9663 $x12525))))
(let ((@x12533 (monotonicity (monotonicity @x10140 @x10223 @x12527 (= $x9669 (and $x10138 $x10221 $x12525))) (= (not $x9669) (not (and $x10138 $x10221 $x12525))))))
(let ((@x12541 (monotonicity @x12533 (rewrite (= $x3970 $x12536)) (= $x9678 (or (not (and $x10138 $x10221 $x12525)) $x12536)))))
(let ((@x12547 (monotonicity (quant-intro @x12541 (= $x9683 $x12542)) (= (not $x9683) $x12545))))
(let ((@x12561 (monotonicity @x12547 (monotonicity @x12555 (= $x9690 $x12556)) (= $x9718 $x12559))))
(let ((@x12567 (monotonicity (monotonicity (rewrite (= $x3967 $x12514)) (= (not $x3967) $x12518)) (monotonicity (quant-intro @x12541 (= $x9683 $x12542)) @x12561 (= $x9723 $x12562)) (= $x9730 $x12565))))
(let ((@x12487 (rewrite (= $x3943 $x12486))))
(let ((@x12510 (monotonicity (rewrite (= $x9606 $x12494)) (rewrite (= $x9615 $x12497)) (rewrite (= $x9623 $x12500)) (rewrite (= $x3961 $x12505)) @x12487 (= $x9657 $x12508))))
(let ((@x12573 (monotonicity (monotonicity @x12510 (= (not $x9657) $x12511)) (monotonicity (rewrite (= $x3967 $x12514)) @x12567 (= $x9735 $x12568)) (= $x9742 $x12571))))
(let ((@x12576 (monotonicity (rewrite (= $x9606 $x12494)) (rewrite (= $x9615 $x12497)) @x12573 (= $x9750 $x12574))))
(let ((@x12594 (monotonicity @x12406 @x12390 (rewrite (= $x3992 $x12471)) @x12487 (= $x9858 $x12592))))
(let ((@x12600 (monotonicity (monotonicity @x12594 (= (not $x9858) $x12595)) @x12576 (= $x9874 $x12598))))
(let ((@x12493 (monotonicity (monotonicity @x12406 @x12487 (= $x9595 $x12488)) (= (not $x9595) $x12491))))
(let ((@x12582 (monotonicity (monotonicity @x12493 @x12576 (= $x9759 $x12577)) (= $x9767 $x12580))))
(let ((@x12481 (monotonicity @x12406 @x12390 (monotonicity (rewrite (= $x3992 $x12471)) (= $x9497 $x12476)) (= $x9511 $x12479))))
(let ((@x12591 (monotonicity (monotonicity @x12481 (= (not $x9511) $x12482)) (monotonicity (monotonicity @x12582 (= $x9776 $x12583)) (= $x9784 $x12586)) (= $x9793 $x12589))))
(let ((@x12470 (monotonicity (monotonicity @x12406 @x12390 (= (and $x3923 $x3926 $x3783 $x3776) $x12465)) (= (not (and $x3923 $x3926 $x3783 $x3776)) $x12468))))
(let ((@x12606 (monotonicity @x12470 (monotonicity @x12591 @x12600 (= $x9879 $x12601)) (= $x9886 $x12604))))
(let ((@x12615 (monotonicity (monotonicity (monotonicity @x12606 (= $x9894 $x12607)) (= $x9902 $x12610)) (= $x9910 $x12613))))
(let ((@x12461 (monotonicity @x12406 @x12390 (monotonicity (rewrite (= $x4012 $x12453)) (= $x9465 $x12456)) (= $x9479 $x12459))))
(let ((@x12618 (monotonicity (monotonicity @x12461 (= (not $x9479) $x12462)) @x12615 (= $x9919 $x12616))))
(let ((@x12452 (monotonicity (monotonicity @x12406 @x12390 (= $x9434 $x12447)) (= $x9974 $x12450))))
(let ((@x12440 (monotonicity (rewrite (= (<= v_b_P_H_len$ v_b_SL_H_witness_G_0$) $x12435)) (= $x8960 $x12438))))
(let ((@x12417 (monotonicity (rewrite (= (<= v_b_L_H_p_G_0$ ?0) $x12411)) (= $x8936 $x12415))))
(let ((@x12423 (monotonicity (monotonicity @x10140 @x10223 @x12417 (= $x8942 (and $x10138 $x10221 $x12415))) (= (not $x8942) (not (and $x10138 $x10221 $x12415))))))
(let ((@x12430 (monotonicity @x12423 (rewrite (= $x3788 $x12425)) (= $x8951 (or (not (and $x10138 $x10221 $x12415)) $x12425)))))
(let ((@x12443 (monotonicity (rewrite (= $x3772 $x12381)) (rewrite (= $x3773 $x12383)) @x12390 (rewrite (= $x3777 $x12391)) (rewrite (= $x3780 $x12397)) (rewrite (= $x3781 $x12399)) @x12406 (rewrite (= $x3785 $x12407)) (quant-intro @x12430 (= $x8956 $x12431)) @x12440 (= $x9032 $x12441))))
(let ((@x12684 (monotonicity (monotonicity @x12443 (= (not $x9032) $x12444)) @x12452 (monotonicity @x12618 @x12678 (= $x9968 $x12679)) (= $x9991 $x12682))))
(let ((@x12362 (monotonicity @x10140 @x10223 (monotonicity (rewrite (= $x8887 $x12354)) (= $x8888 $x12357)) (= $x8899 (and $x10138 $x10221 $x12357)))))
(let ((@x12373 (monotonicity (monotonicity @x12362 (= (not $x8899) (not (and $x10138 $x10221 $x12357)))) (rewrite (= $x3766 $x12367)) (= $x8908 (or (not (and $x10138 $x10221 $x12357)) $x12367)))))
(let ((@x12379 (monotonicity (quant-intro @x12373 (= $x8913 $x12374)) (= (not $x8913) $x12377))))
(let ((@x12690 (monotonicity @x12379 (monotonicity @x12684 (= $x9999 $x12685)) (= $x10008 $x12688))))
(let ((@x12696 (monotonicity (monotonicity (rewrite (= $x3761 $x12348)) (= (not $x3761) $x12351)) (monotonicity (quant-intro @x12373 (= $x8913 $x12374)) @x12690 (= $x10013 $x12691)) (= $x10020 $x12694))))
(let ((@x12702 (monotonicity (monotonicity (rewrite (= $x3761 $x12348)) @x12696 (= $x10025 $x12697)) (= $x10032 $x12700))))
(let ((@x12711 (monotonicity (monotonicity (monotonicity @x12702 (= $x10040 $x12703)) (= $x10049 $x12706)) (= $x10057 $x12709))))
(let ((@x12720 (monotonicity (monotonicity (monotonicity @x12711 (= $x10066 $x12712)) (= $x10071 $x12715)) (= (not $x10071) $x12718))))
(let ((@x12721 (mp (not-or-elim (mp (asserted $x4036) @x10085 (not $x10078)) (not $x10071)) @x12720 $x12718)))
(let ((@x20468 (mp (mp (mp~ (mp (mp @x12721 @x14335 $x14333) @x13603 $x13725) @x16564 $x16562) @x16835 $x16833) @x20467 $x20465)))
(let ((@x21274 (mp @x20468 (monotonicity @x21270 (= $x20465 (or $x10065 $x21268))) (or $x10065 $x21268))))
(let ((@x24559 (unit-resolution @x21274 (lemma (unit-resolution @x23120 @x23099 @x23095 @x23071 @x23078 false) $x3738) $x21268)))
(let ((@x24561 (unit-resolution (def-axiom (or $x21262 $x16242 $x16245 $x21256)) (unit-resolution (def-axiom (or $x21265 $x21259)) @x24559 $x21259) $x21259)))
(let ((@x24567 (unit-resolution @x24561 (unit-resolution (def-axiom (or $x23304 $x3741)) (lemma @x23396 $x23305) $x3741) @x23251 $x21256)))
(let ((@x24570 (unit-resolution (def-axiom (or $x21250 $x16242 $x16251 $x21244)) @x23251 (unit-resolution (def-axiom (or $x21253 $x21247)) @x24567 $x21247) (or $x16251 $x21244))))
(let ((@x25304 (unit-resolution (def-axiom (or $x21241 $x21235)) (unit-resolution @x24570 (lemma @x23543 $x3743) $x21244) $x21235)))
(let ((@x25314 (unit-resolution (unit-resolution (def-axiom (or $x21238 $x12351 $x21232)) @x25304 $x21235) (lemma ((_ th-lemma arith farkas 1 1) @x10095 (hypothesis $x12351) false) $x12348) $x21232)))
(let (($x16266 (not $x16265)))
(let ((@x24547 (hypothesis $x20036)))
(let (($x16263 (>= ?v0!13 0)))
(let ((@x24551 ((_ th-lemma arith eq-propagate 0 0) (unit-resolution (def-axiom (or $x20031 $x16263)) @x24547 $x16263) (unit-resolution (def-axiom (or $x20031 $x16266)) @x24547 $x16266) (= ?v0!13 0))))
(let ((@x24574 (monotonicity (monotonicity @x24551 (= (b_S_idx$ ?x3680 ?v0!13 b_T_T_u1$) ?x3739)) (= ?x16270 ?x3746))))
(let ((@x24572 (unit-resolution (def-axiom (or $x21241 $x3747)) (unit-resolution @x24570 (lemma @x23543 $x3743) $x21244) $x3747)))
(let ((@x24591 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not (= v_b_L_H_max_G_0$ ?x16270)) $x16273)) (unit-resolution (def-axiom (or $x20031 (not $x16273))) @x24547 (not $x16273)) (trans @x24572 (symm @x24574 (= ?x3746 ?x16270)) (= v_b_L_H_max_G_0$ ?x16270)) false)))
(let ((@x25316 (unit-resolution (def-axiom (or $x21226 $x20036 $x21220)) (lemma @x24591 $x20031) (unit-resolution (def-axiom (or $x21229 $x21223)) @x25314 $x21223) $x21220)))
(let ((@x25324 (unit-resolution (def-axiom (or $x21214 $x8666 $x16288 $x21208)) @x10095 (or $x21214 $x16288 $x21208))))
(let ((@x25326 (unit-resolution @x25324 (mp @x24572 (symm (commutativity (= $x3769 $x3747)) (= $x3747 $x3769)) $x3769) (or $x21214 $x21208))))
(let ((@x25327 (unit-resolution @x25326 (unit-resolution (def-axiom (or $x21217 $x21211)) @x25316 $x21211) $x21208)))
(let ((@x25328 (unit-resolution (def-axiom (or $x21205 $x12397)) @x25327 $x12397)))
(let ((@x25333 (unit-resolution (def-axiom (or $x21205 $x21041)) @x25327 $x21041)))
(let (($x23869 (<= (+ v_b_L_H_p_G_0$ (* (- 1) ?v0!15)) 0)))
(let (($x23793 (<= (+ v_b_L_H_max_G_1$ (* (- 1) v_b_S_result_G_0$)) 0)))
(let (($x23789 (= v_b_L_H_max_G_1$ v_b_S_result_G_0$)))
(let ((@x24013 (symm (unit-resolution (def-axiom (or $x21193 $x3824)) (hypothesis $x21196) $x3824) $x23789)))
(let (($x21519 (not $x16760)))
(let ((@x23878 (trans (hypothesis $x3794) (symm (hypothesis $x3824) $x23789) (= ?x3793 v_b_S_result_G_0$))))
(let (($x23841 (not (= ?x3793 v_b_S_result_G_0$))))
(let (($x23846 (or $x21178 $x20219 $x20374 $x12435 $x23841)))
(let (($x23737 (>= (+ v_b_SL_H_witness_G_0$ (* (- 1) v_b_P_H_len$)) 0)))
(let (($x23847 (or $x21178 (or $x20219 $x20374 $x23737 $x23841))))
(let (($x23747 (= (>= (+ (* (- 1) v_b_P_H_len$) v_b_SL_H_witness_G_0$) 0) $x12435)))
(let (($x23745 (= $x23737 (>= (+ (* (- 1) v_b_P_H_len$) v_b_SL_H_witness_G_0$) 0))))
(let (($x23742 (= (+ v_b_SL_H_witness_G_0$ (* (- 1) v_b_P_H_len$)) (+ (* (- 1) v_b_P_H_len$) v_b_SL_H_witness_G_0$))))
(let ((@x23750 (trans (monotonicity (rewrite $x23742) $x23745) (rewrite $x23747) (= $x23737 $x12435))))
(let ((@x23845 (monotonicity @x23750 (= (or $x20219 $x20374 $x23737 $x23841) (or $x20219 $x20374 $x12435 $x23841)))))
(let ((@x23855 (trans (monotonicity @x23845 (= $x23847 (or $x21178 (or $x20219 $x20374 $x12435 $x23841)))) (rewrite (= (or $x21178 (or $x20219 $x20374 $x12435 $x23841)) $x23846)) (= $x23847 $x23846))))
(let ((@x23883 (unit-resolution (mp ((_ quant-inst v_b_SL_H_witness_G_0$) $x23847) @x23855 $x23846) (hypothesis $x12834) (hypothesis $x12438) (hypothesis $x12389) (hypothesis $x21173) @x23878 false)))
(let ((@x24019 (unit-resolution (lemma @x23883 (or $x21178 $x20374 $x12435 $x20219 $x20379 $x20358)) (unit-resolution (def-axiom (or $x21193 $x3824)) (hypothesis $x21196) $x3824) (hypothesis $x12438) (hypothesis $x12389) (hypothesis $x3794) (hypothesis $x12834) $x21178)))
(let ((@x24021 (unit-resolution (def-axiom (or $x21190 $x20298 $x21184)) (unit-resolution (def-axiom (or $x21181 $x21173)) @x24019 $x21181) (unit-resolution (def-axiom (or $x21193 $x21187)) (hypothesis $x21196) $x21187) $x20298)))
(let (($x24008 (or (not (>= (+ v_b_L_H_max_G_1$ (* (- 1) ?x16481)) 0)) $x16760 (not $x23793))))
(let ((@x24005 ((_ th-lemma arith farkas -1 1 1) (hypothesis (>= (+ v_b_L_H_max_G_1$ (* (- 1) ?x16481)) 0)) (hypothesis $x21519) (hypothesis $x23793) false)))
(let ((@x24023 (unit-resolution (lemma @x24005 $x24008) (unit-resolution (def-axiom (or $x20293 $x21519)) @x24021 $x21519) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x23789) $x23793)) @x24013 $x23793) (not (>= (+ v_b_L_H_max_G_1$ (* (- 1) ?x16481)) 0)))))
(let (($x23889 (>= (+ v_b_L_H_max_G_1$ (* (- 1) ?x16481)) 0)))
(let (($x23897 (or $x21046 $x20277 $x20278 $x23869 $x23889)))
(let (($x23835 (<= (+ ?x16481 (* (- 1) v_b_L_H_max_G_1$)) 0)))
(let (($x23815 (>= (+ ?v0!15 ?x12400) 0)))
(let (($x23898 (or $x21046 (or $x20277 $x20278 $x23815 $x23835))))
(let (($x23874 (= (+ ?x16481 (* (- 1) v_b_L_H_max_G_1$)) (+ (* (- 1) v_b_L_H_max_G_1$) ?x16481))))
(let ((@x23887 (monotonicity (rewrite $x23874) (= $x23835 (<= (+ (* (- 1) v_b_L_H_max_G_1$) ?x16481) 0)))))
(let ((@x23893 (trans @x23887 (rewrite (= (<= (+ (* (- 1) v_b_L_H_max_G_1$) ?x16481) 0) $x23889)) (= $x23835 $x23889))))
(let ((@x23867 (monotonicity (rewrite (= (+ ?v0!15 ?x12400) (+ ?x12400 ?v0!15))) (= $x23815 (>= (+ ?x12400 ?v0!15) 0)))))
(let ((@x23872 (trans @x23867 (rewrite (= (>= (+ ?x12400 ?v0!15) 0) $x23869)) (= $x23815 $x23869))))
(let ((@x23896 (monotonicity @x23872 @x23893 (= (or $x20277 $x20278 $x23815 $x23835) (or $x20277 $x20278 $x23869 $x23889)))))
(let ((@x23906 (trans (monotonicity @x23896 (= $x23898 (or $x21046 (or $x20277 $x20278 $x23869 $x23889)))) (rewrite (= (or $x21046 (or $x20277 $x20278 $x23869 $x23889)) $x23897)) (= $x23898 $x23897))))
(let ((@x24028 (unit-resolution (mp ((_ quant-inst ?v0!15) $x23898) @x23906 $x23897) (hypothesis $x21041) (unit-resolution (def-axiom (or $x20293 $x16473)) @x24021 $x16473) (unit-resolution (def-axiom (or $x20293 $x16474)) @x24021 $x16474) (or $x23869 $x23889))))
(let ((@x24031 ((_ th-lemma arith farkas -1 1 1) (unit-resolution (def-axiom (or $x20293 $x16743)) @x24021 $x16743) (unit-resolution @x24028 @x24023 $x23869) (unit-resolution (def-axiom (or $x21193 $x12453)) (hypothesis $x21196) $x12453) false)))
(let ((@x25334 (unit-resolution (lemma @x24031 (or $x21193 $x21046 $x12435 $x20219 $x20379 $x20374)) @x25333 (unit-resolution (def-axiom (or $x21205 $x12438)) @x25327 $x12438) (unit-resolution (def-axiom (or $x21205 $x12389)) @x25327 $x12389) (unit-resolution (def-axiom (or $x21205 $x3794)) @x25327 $x3794) (unit-resolution (def-axiom (or $x21205 $x12834)) @x25327 $x12834) $x21193)))
(let ((@x25336 (unit-resolution (def-axiom (or $x21202 $x21162 $x21196)) (unit-resolution (def-axiom (or $x21205 $x21199)) @x25327 $x21199) @x25334 $x21162)))
(let ((@x25337 (unit-resolution (def-axiom (or $x21159 $x12456)) @x25336 $x12456)))
(let ((@x25341 (mp @x23336 (symm (monotonicity @x24339 (= $x23297 $x23045)) (= $x23045 $x23297)) $x23297)))
(let (($x24098 (or $x23330 $x21687 $x22190 $x23298 $x20375 $x12453 $x24083)))
(let (($x24080 (>= (+ v_b_L_H_p_G_0$ (* (- 1) v_b_P_H_len$)) 0)))
(let (($x24099 (or $x23330 (or $x21687 $x22190 $x23298 $x20375 $x24080 $x24083))))
(let (($x24096 (= (or $x21687 $x22190 $x23298 $x20375 $x24080 $x24083) (or $x21687 $x22190 $x23298 $x20375 $x12453 $x24083))))
(let ((@x24092 (rewrite (= (>= (+ (* (- 1) v_b_P_H_len$) v_b_L_H_p_G_0$) 0) $x12453))))
(let (($x24086 (= (+ v_b_L_H_p_G_0$ (* (- 1) v_b_P_H_len$)) (+ (* (- 1) v_b_P_H_len$) v_b_L_H_p_G_0$))))
(let ((@x24090 (monotonicity (rewrite $x24086) (= $x24080 (>= (+ (* (- 1) v_b_P_H_len$) v_b_L_H_p_G_0$) 0)))))
(let ((@x24103 (monotonicity (monotonicity (trans @x24090 @x24092 (= $x24080 $x12453)) $x24096) (= $x24099 (or $x23330 (or $x21687 $x22190 $x23298 $x20375 $x12453 $x24083))))))
(let ((@x24107 (trans @x24103 (rewrite (= (or $x23330 (or $x21687 $x22190 $x23298 $x20375 $x12453 $x24083)) $x24098)) (= $x24099 $x24098))))
(let ((@x24142 (unit-resolution (mp ((_ quant-inst v_b_S_s$ v_b_P_H_arr$ (b_S_ptr$ ?x3678 ?x21715) v_b_P_H_len$ v_b_L_H_p_G_0$ b_T_T_u1$) $x24099) @x24107 $x24098) @x19388 @x5093 @x10104 (hypothesis $x12397) (hypothesis $x12456) (hypothesis $x23297) (hypothesis $x24082) false)))
(let ((@x25343 (unit-resolution (lemma @x24142 (or $x24083 $x20375 $x12453 $x23298)) @x25341 (or $x24083 $x20375 $x12453))))
(let ((@x25345 (unit-resolution (def-axiom (or $x24082 $x3924)) (unit-resolution @x25343 @x25337 @x25328 $x24083) $x3924)))
(let ((@x25354 (unit-resolution (hypothesis $x24195) (mp @x25345 (symm @x25350 (= $x3924 $x24194)) $x24194) false)))
(let ((@x25215 (unit-resolution (def-axiom (or $x24228 $x24195 $x24226)) (unit-resolution (lemma @x25354 (or $x24194 (not $x23973))) @x25156 $x24194) (or $x24228 $x24226))))
(let ((@x25214 (unit-resolution (def-axiom (or (not $x23994) $x16330 $x23984)) @x25032 (or (not $x23994) $x23984))))
(let ((@x25219 (unit-resolution @x25214 (unit-resolution ((_ quant-inst (b_S_idx$ ?x3680 v_b_L_H_p_G_0$ b_T_T_u1$) b_T_T_u1$) (or (not $x20961) $x23994)) @x20966 $x23994) $x23984)))
(let ((@x25248 (trans (monotonicity (symm @x25156 (= ?x23972 ?x3922)) (= (b_S_typ$ ?x23972) ?x23986)) @x25219 (= (b_S_typ$ ?x23972) b_T_T_u1$))))
(let ((@x25302 (trans (monotonicity @x25248 (= (b_S_kind_n_of$ (b_S_typ$ ?x23972)) ?x22173)) @x23477 $x24198)))
(let ((@x25229 (monotonicity (symm (monotonicity @x25156 (= ?x23936 ?x24200)) (= ?x24200 ?x23936)) (= $x24201 $x24081))))
(let (($x24854 (not $x24081)))
(let ((@x25388 (unit-resolution (def-axiom (or $x24082 $x24854)) (unit-resolution @x25343 @x25337 @x25328 $x24083) $x24854)))
(let ((@x25238 (mp @x25388 (monotonicity (symm @x25229 (= $x24081 $x24201)) (= $x24854 $x24202)) $x24202)))
(let ((?x25453 (+ ?x24037 ?x24269)))
(let ((?x25458 (b_S_ptr$ b_T_T_u1$ ?x25453)))
(let ((?x25435 (b_S_idx$ ?x22684 v_b_L_H_p_G_0$ b_T_T_u1$)))
(let (($x25461 (= ?x25435 ?x25458)))
(let (($x25464 (not $x25461)))
(let (($x25467 (or (not (b_S_extent_n_hint$ ?x25435 ?x22684)) $x25464)))
(let (($x25470 (not $x25467)))
(let (($x25473 (or $x23217 $x25470)))
(let (($x25447 (not (= ?x25435 (b_S_ptr$ b_T_T_u1$ (+ ?x24269 (* v_b_L_H_p_G_0$ ?x3652)))))))
(let (($x25476 (= (or $x23217 (not (or (not (b_S_extent_n_hint$ ?x25435 ?x22684)) $x25447))) $x25473)))
(let (($x25462 (= (= ?x25435 (b_S_ptr$ b_T_T_u1$ (+ ?x24269 (* v_b_L_H_p_G_0$ ?x3652)))) $x25461)))
(let ((@x25452 (monotonicity (rewrite (= (* v_b_L_H_p_G_0$ ?x3652) ?x24037)) (= (+ ?x24269 (* v_b_L_H_p_G_0$ ?x3652)) (+ ?x24269 ?x24037)))))
(let ((@x25457 (trans @x25452 (rewrite (= (+ ?x24269 ?x24037) ?x25453)) (= (+ ?x24269 (* v_b_L_H_p_G_0$ ?x3652)) ?x25453))))
(let ((@x25460 (monotonicity @x25457 (= (b_S_ptr$ b_T_T_u1$ (+ ?x24269 (* v_b_L_H_p_G_0$ ?x3652))) ?x25458))))
(let ((@x25469 (monotonicity (monotonicity (monotonicity @x25460 $x25462) (= $x25447 $x25464)) (= (or (not (b_S_extent_n_hint$ ?x25435 ?x22684)) $x25447) $x25467))))
(let ((@x25472 (monotonicity @x25469 (= (not (or (not (b_S_extent_n_hint$ ?x25435 ?x22684)) $x25447)) $x25470))))
(let ((@x25475 ((_ quant-inst (b_S_ptr$ ?x3678 ?x21715) v_b_L_H_p_G_0$ b_T_T_u1$) (or $x23217 (not (or (not (b_S_extent_n_hint$ ?x25435 ?x22684)) $x25447))))))
(let ((@x25481 (mp @x25475 (trans (monotonicity @x25472 $x25476) (rewrite (= $x25473 $x25473)) $x25476) $x25473)))
(let ((@x25407 (unit-resolution (def-axiom (or $x25467 $x25461)) (lemma (unit-resolution @x25481 @x18901 (hypothesis $x25467) false) $x25470) $x25461)))
(let ((?x25308 (b_S_idx$ ?x23296 v_b_L_H_p_G_0$ b_T_T_u1$)))
(let ((?x25309 (b_S_select_o_tm$ ?x3874 ?x25308)))
(let (($x25310 (= (b_S_ts_n_emb$ ?x25309) ?x23296)))
(let (($x25362 (or (not $x25310) (b_S_ts_n_is_n_volatile$ ?x25309) (not (b_S_ts_n_is_n_array_n_elt$ ?x25309)) (not (b_S_typed$ v_b_S_s$ ?x25308)))))
(let (($x25363 (not $x25362)))
(let (($x25293 (or $x24161 $x24152 $x20375 $x12453 $x25363)))
(let (($x25294 (or $x24161 (or $x24152 $x20375 $x24080 $x25363))))
(let ((@x25292 (monotonicity (trans @x24090 @x24092 (= $x24080 $x12453)) (= (or $x24152 $x20375 $x24080 $x25363) (or $x24152 $x20375 $x12453 $x25363)))))
(let ((@x25384 (trans (monotonicity @x25292 (= $x25294 (or $x24161 (or $x24152 $x20375 $x12453 $x25363)))) (rewrite (= (or $x24161 (or $x24152 $x20375 $x12453 $x25363)) $x25293)) (= $x25294 $x25293))))
(let ((@x25376 (unit-resolution (mp ((_ quant-inst v_b_S_s$ v_b_P_H_arr$ b_T_T_u1$ v_b_P_H_len$ v_b_L_H_p_G_0$) $x25294) @x25384 $x25293) @x18685 @x25328 @x25337 (lemma (unit-resolution (hypothesis $x24152) @x24253 false) $x24131) (hypothesis $x25362) false)))
(let ((@x25585 (trans (trans @x23922 @x23269 (= ?x23206 ?x23203)) (symm @x24358 (= ?x23203 ?x3680)) (= ?x23206 ?x3680))))
(let ((@x25593 (trans (symm @x25587 (= ?x24043 ?x23996)) (monotonicity @x25585 (= ?x23996 ?x3922)) (= ?x24043 ?x3922))))
(let (($x25908 (>= (+ ?x24040 (* (- 1) (b_S_ref$ ?x24043))) 0)))
(let ((?x25052 (+ ?x23612 ?x24037 (* (- 1) (b_S_ref$ ?x24043)))))
(let (($x25064 (>= ?x25052 0)))
(let (($x25050 (= ?x25052 0)))
(let (($x21853 (not $x20968)))
(let (($x25054 (or $x21853 $x25050)))
(let ((@x25058 (monotonicity (rewrite (= (= (b_S_ref$ ?x24043) ?x24040) $x25050)) (= (or $x21853 (= (b_S_ref$ ?x24043) ?x24040)) $x25054))))
(let ((@x25061 (trans @x25058 (rewrite (= $x25054 $x25054)) (= (or $x21853 (= (b_S_ref$ ?x24043) ?x24040)) $x25054))))
(let ((@x25599 (unit-resolution (mp ((_ quant-inst b_T_T_u1$ (+ ?x23612 ?x24037)) (or $x21853 (= (b_S_ref$ ?x24043) ?x24040))) @x25061 $x25054) @x20973 $x25050)))
(let ((@x25911 (unit-resolution ((_ th-lemma arith assign-bounds -1) (or $x25908 (not $x25064))) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x25050) $x25064)) @x25599 $x25064) $x25908)))
(let (($x25907 (<= (+ ?x24040 (* (- 1) (b_S_ref$ ?x24043))) 0)))
(let (($x25063 (<= ?x25052 0)))
(let ((@x25914 (unit-resolution ((_ th-lemma arith assign-bounds -1) (or $x25907 (not $x25063))) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x25050) $x25063)) @x25599 $x25063) $x25907)))
(let ((@x25925 (unit-resolution ((_ th-lemma arith triangle-eq) (or (= ?x24040 (b_S_ref$ ?x24043)) (not $x25907) (not $x25908))) @x25914 @x25911 (= ?x24040 (b_S_ref$ ?x24043)))))
(let (($x25910 (>= (+ ?x24040 (* (- 1) ?x25453)) 0)))
(let (($x23420 (<= (+ ?x21715 (* (- 1) ?x23186)) 0)))
(let ((@x25567 (monotonicity (trans @x23269 (symm @x24358 (= ?x23203 ?x3680)) (= ?x3739 ?x3680)) (= ?x23186 ?x3681))))
(let ((@x25574 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not (= ?x21715 ?x23186)) $x23420)) (trans @x24327 (symm @x25567 (= ?x3681 ?x23186)) (= ?x21715 ?x23186)) $x23420)))
(let (($x25491 (>= (+ ?x21715 (* (- 1) ?x24269)) 0)))
(let ((@x25608 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not (= ?x21715 ?x24269)) $x25491)) (symm (monotonicity @x24449 (= ?x24269 ?x21715)) (= ?x21715 ?x24269)) $x25491)))
(let (($x24750 (<= (+ ?x23186 (* (- 1) ?x23612)) 0)))
(let ((@x25581 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not (= ?x23186 ?x23612)) $x24750)) (symm (monotonicity @x23922 (= ?x23612 ?x23186)) (= ?x23186 ?x23612)) $x24750)))
(let ((@x25922 (unit-resolution ((_ th-lemma arith assign-bounds 1 -1 1) (or $x25910 (not $x24750) (not $x25491) (not $x23420))) @x25581 @x25608 @x25574 $x25910)))
(let (($x25909 (<= (+ ?x24040 (* (- 1) ?x25453)) 0)))
(let (($x23421 (>= (+ ?x21715 (* (- 1) ?x23186)) 0)))
(let ((@x25619 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not (= ?x21715 ?x23186)) $x23421)) (trans @x24327 (symm @x25567 (= ?x3681 ?x23186)) (= ?x21715 ?x23186)) $x23421)))
(let (($x25490 (<= (+ ?x21715 (* (- 1) ?x24269)) 0)))
(let ((@x25631 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not (= ?x21715 ?x24269)) $x25490)) (symm (monotonicity @x24449 (= ?x24269 ?x21715)) (= ?x21715 ?x24269)) $x25490)))
(let (($x24751 (>= (+ ?x23186 (* (- 1) ?x23612)) 0)))
(let ((@x25622 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not (= ?x23186 ?x23612)) $x24751)) (symm (monotonicity @x23922 (= ?x23612 ?x23186)) (= ?x23186 ?x23612)) $x24751)))
(let ((@x25916 (unit-resolution ((_ th-lemma arith assign-bounds 1 -1 1) (or $x25909 (not $x24751) (not $x25490) (not $x23421))) @x25622 @x25631 @x25619 $x25909)))
(let ((@x25951 (unit-resolution ((_ th-lemma arith triangle-eq) (or (= ?x24040 ?x25453) (not $x25909) (not $x25910))) @x25916 @x25922 (= ?x24040 ?x25453))))
(let ((@x25927 (trans (trans (symm @x25951 (= ?x25453 ?x24040)) @x25925 (= ?x25453 (b_S_ref$ ?x24043))) (monotonicity @x25593 (= (b_S_ref$ ?x24043) ?x24124)) (= ?x25453 ?x24124))))
(let ((@x25944 (trans (monotonicity @x24339 (= ?x25308 ?x25435)) (hypothesis $x25461) (= ?x25308 ?x25458))))
(let ((@x25837 (monotonicity (trans @x25944 (monotonicity @x25927 (= ?x25458 ?x23972)) (= ?x25308 ?x23972)) (= ?x25309 ?x24200))))
(let ((@x25955 (trans (monotonicity (symm @x25837 (= ?x24200 ?x25309)) (= ?x24203 (b_S_ts_n_emb$ ?x25309))) (unit-resolution (def-axiom (or $x25362 $x25310)) (lemma @x25376 $x25363) $x25310) (= ?x24203 ?x23296))))
(let ((@x25957 (monotonicity (trans @x25955 @x23339 (= ?x24203 ?x3682)) (= (b_S_owner$ v_b_S_s$ ?x24203) ?x3684))))
(let ((@x25971 (unit-resolution (hypothesis (not $x24212)) (trans @x25957 @x10097 $x24212) false)))
(let ((@x25374 (unit-resolution (def-axiom (or $x24214 (not $x24212))) (unit-resolution (lemma @x25971 (or $x25464 $x24212)) @x25407 $x24212) $x24214)))
(let (($x25207 (or (not $x19952) (not (or $x24210 (not (b_S_is_n_non_n_primitive$ (b_S_typ$ ?x24203))))))))
(let ((@x25126 (unit-resolution ((_ quant-inst (b_S_select_o_tm$ ?x3874 ?x23972)) $x25207) @x19955 (hypothesis (or $x24210 (not (b_S_is_n_non_n_primitive$ (b_S_typ$ ?x24203))))) false)))
(let ((@x25204 (lemma @x25126 (not (or $x24210 (not (b_S_is_n_non_n_primitive$ (b_S_typ$ ?x24203))))))))
(let (($x25192 (or $x24210 (not (b_S_is_n_non_n_primitive$ (b_S_typ$ ?x24203))))))
(let ((@x25299 (unit-resolution (def-axiom (or $x24217 $x24199 $x24207 $x24210 (not $x24214))) (unit-resolution (def-axiom (or $x25192 (not $x24210))) @x25204 (not $x24210)) @x25374 (or $x24217 $x24199 $x24207))))
(let ((@x25300 (unit-resolution @x25299 (unit-resolution (def-axiom (or $x24206 $x24201)) @x25238 $x24206) @x25302 $x24217)))
(let (($x25367 (or (or $x24217 (not (or $x24198 (not $x24221)))) (or $x24199 $x24207 $x24210 (not $x24214)))))
(let ((@x25298 (unit-resolution (def-axiom $x25367) @x25300 (unit-resolution @x25215 @x25226 $x24226) false)))
(let (($x25758 (>= (+ v_b_L_H_p_G_0$ (* (- 1) ?v0!14)) 0)))
(let (($x25493 (not $x25758)))
(let (($x26041 (= ?x3929 ?x16374)))
(let (($x26045 (not $x26041)))
(let (($x21439 (<= (+ v_b_L_H_max_G_1$ ?x12534) 0)))
(let (($x21437 (= v_b_L_H_max_G_1$ v_b_L_H_max_G_3$)))
(let ((@x23828 (mp (hypothesis $x3993) (symm (commutativity (= $x21437 $x3993)) (= $x3993 $x21437)) $x21437)))
(let ((@x23799 (lemma (unit-resolution (hypothesis (not $x21437)) @x23828 false) (or $x20230 $x21437))))
(let ((@x25753 (unit-resolution @x23799 (unit-resolution (def-axiom (or $x21123 $x3993)) (hypothesis $x21126) $x3993) $x21437)))
(let (($x21321 (not $x16622)))
(let (($x13842 (<= v_b_P_H_len$ 4294967295)))
(let (($x12342 (>= (+ b_S_max_o_u4$ (* (- 1) v_b_P_H_len$)) 0)))
(let (($x12813 (= (+ b_S_max_o_u4$ (* (- 1) v_b_P_H_len$)) (+ 4294967295 (* (- 1) v_b_P_H_len$)))))
(let ((@x12767 (monotonicity (monotonicity @x7025 $x12813) (= $x12342 (>= (+ 4294967295 (* (- 1) v_b_P_H_len$)) 0)))))
(let ((@x13004 (trans @x12767 (rewrite (= (>= (+ 4294967295 (* (- 1) v_b_P_H_len$)) 0) $x13842)) (= $x12342 $x13842))))
(let ((@x13005 (mp (mp (and-elim @x10087 $x3720) (rewrite (= $x3720 $x12342)) $x12342) @x13004 $x13842)))
(let ((@x25757 (unit-resolution ((_ th-lemma arith assign-bounds 1 -1) (or $x13856 (not $x13842) $x12453)) @x13005 (or $x13856 $x12453))))
(let ((@x26039 (unit-resolution (def-axiom (or $x21090 $x16351 $x16354 $x21084)) (unit-resolution ((_ th-lemma arith farkas 1 1) (or $x20375 $x12494)) @x25328 $x12494) (unit-resolution @x25757 @x25337 $x13856) (or $x21090 $x21084))))
(let ((@x25754 (unit-resolution @x26039 (unit-resolution (def-axiom (or $x21123 $x21087)) (hypothesis $x21126) $x21087) $x21084)))
(let (($x21314 (>= (+ v_b_L_H_p_G_0$ (* (- 1) v_b_L_H_p_G_1$)) (- 1))))
(let ((@x25773 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x20170 $x21314)) (unit-resolution (def-axiom (or $x21081 $x12500)) @x25754 $x12500) $x21314)))
(let ((@x24365 (lemma ((_ th-lemma arith farkas -1 1 1) (hypothesis $x12518) (hypothesis $x12456) (hypothesis $x21314) false) (or $x12514 $x12453 (not $x21314)))))
(let ((@x25776 (unit-resolution (unit-resolution @x24365 @x25337 (or $x12514 (not $x21314))) @x25773 $x12514)))
(let ((@x25780 (unit-resolution (def-axiom (or $x21078 $x12518 $x21072)) @x25776 (unit-resolution (def-axiom (or $x21081 $x21075)) @x25754 $x21075) $x21072)))
(let ((@x25788 (symm (unit-resolution (def-axiom (or $x21123 $x3993)) (hypothesis $x21126) $x3993) $x21437)))
(let ((@x26009 (monotonicity (unit-resolution (def-axiom (or $x21123 $x3994)) (hypothesis $x21126) $x3994) (= ?x3974 (b_S_idx$ ?x3680 v_b_SL_H_witness_G_0$ b_T_T_u1$)))))
(let ((@x25796 (trans (monotonicity @x26009 (= ?x3975 ?x3793)) (unit-resolution (def-axiom (or $x21205 $x3794)) @x25327 $x3794) (= ?x3975 v_b_L_H_max_G_1$))))
(let (($x21444 (>= (+ v_b_SL_H_witness_G_0$ (* (- 1) v_b_SL_H_witness_G_1$)) 0)))
(let (($x21441 (= v_b_SL_H_witness_G_0$ v_b_SL_H_witness_G_1$)))
(let ((@x25805 (mp (unit-resolution (def-axiom (or $x21123 $x3994)) (hypothesis $x21126) $x3994) (symm (commutativity (= $x21441 $x3994)) (= $x3994 $x21441)) $x21441)))
(let ((@x25039 (unit-resolution ((_ th-lemma arith assign-bounds -1 -1) (or $x12553 $x12435 (not $x21444))) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x21441) $x21444)) @x25805 $x21444) (unit-resolution (def-axiom (or $x21205 $x12438)) @x25327 $x12438) $x12553)))
(let ((@x24865 (unit-resolution (def-axiom (or $x20131 $x12550 (not $x3976))) @x25039 (trans @x25796 @x25788 $x3976) $x20131)))
(let ((@x24882 (unit-resolution (def-axiom (or $x21066 $x20104 $x21060)) (unit-resolution (def-axiom (or $x21057 $x20130)) @x24865 $x21057) (unit-resolution (def-axiom (or $x21069 $x21063)) @x25780 $x21063) $x20104)))
(let ((@x25939 ((_ th-lemma arith farkas 1 -1 -1 1) (hypothesis $x12471) (hypothesis $x21321) (hypothesis $x21439) (hypothesis (>= (+ ?x3929 ?x16620) 0)) false)))
(let ((@x25943 (lemma @x25939 (or (not (>= (+ ?x3929 ?x16620) 0)) $x12476 $x16622 (not $x21439)))))
(let ((@x23480 (unit-resolution @x25943 (unit-resolution (def-axiom (or $x21123 $x12471)) (hypothesis $x21126) $x12471) (unit-resolution (def-axiom (or $x20099 $x21321)) @x24882 $x21321) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x21437) $x21439)) @x25753 $x21439) (not (>= (+ ?x3929 ?x16620) 0)))))
(let ((@x25040 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x26045 (>= (+ ?x3929 ?x16620) 0))) @x23480 $x26045)))
(let ((@x26053 (symm (hypothesis (= v_b_L_H_p_G_0$ ?v0!14)) (= ?v0!14 v_b_L_H_p_G_0$))))
(let ((@x26057 (monotonicity (monotonicity @x26053 (= (b_S_idx$ ?x3680 ?v0!14 b_T_T_u1$) ?x3922)) (= ?x16374 ?x3929))))
(let ((@x26062 (lemma (unit-resolution (hypothesis $x26045) (symm @x26057 $x26041) false) (or (not (= v_b_L_H_p_G_0$ ?v0!14)) $x26041))))
(let (($x24388 (<= (+ v_b_L_H_p_G_0$ (* (- 1) ?v0!14)) 0)))
(let (($x24400 (>= (+ v_b_L_H_max_G_1$ ?x16620) 0)))
(let (($x25800 (not $x24400)))
(let ((@x25043 (unit-resolution ((_ th-lemma arith assign-bounds -1 -1) (or $x25800 $x16622 (not $x21439))) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x21437) $x21439)) @x25753 $x21439) (unit-resolution (def-axiom (or $x20099 $x21321)) @x24882 $x21321) $x25800)))
(let (($x25270 (or $x21046 $x20083 $x20084 $x24388 $x24400)))
(let (($x24379 (<= (+ ?x16374 (* (- 1) v_b_L_H_max_G_1$)) 0)))
(let (($x24371 (>= (+ ?v0!14 ?x12400) 0)))
(let (($x25240 (or $x21046 (or $x20083 $x20084 $x24371 $x24379))))
(let (($x25224 (= (+ ?x16374 (* (- 1) v_b_L_H_max_G_1$)) (+ (* (- 1) v_b_L_H_max_G_1$) ?x16374))))
(let ((@x25242 (monotonicity (rewrite $x25224) (= $x24379 (<= (+ (* (- 1) v_b_L_H_max_G_1$) ?x16374) 0)))))
(let ((@x25266 (trans @x25242 (rewrite (= (<= (+ (* (- 1) v_b_L_H_max_G_1$) ?x16374) 0) $x24400)) (= $x24379 $x24400))))
(let ((@x25195 (monotonicity (rewrite (= (+ ?v0!14 ?x12400) (+ ?x12400 ?v0!14))) (= $x24371 (>= (+ ?x12400 ?v0!14) 0)))))
(let ((@x25223 (trans @x25195 (rewrite (= (>= (+ ?x12400 ?v0!14) 0) $x24388)) (= $x24371 $x24388))))
(let ((@x25269 (monotonicity @x25223 @x25266 (= (or $x20083 $x20084 $x24371 $x24379) (or $x20083 $x20084 $x24388 $x24400)))))
(let ((@x25287 (trans (monotonicity @x25269 (= $x25240 (or $x21046 (or $x20083 $x20084 $x24388 $x24400)))) (rewrite (= (or $x21046 (or $x20083 $x20084 $x24388 $x24400)) $x25270)) (= $x25240 $x25270))))
(let ((@x25045 (unit-resolution (mp ((_ quant-inst ?v0!14) $x25240) @x25287 $x25270) @x25333 (unit-resolution (def-axiom (or $x20099 $x16366)) @x24882 $x16366) (unit-resolution (def-axiom (or $x20099 $x16367)) @x24882 $x16367) @x25043 $x24388)))
(let ((@x25794 (unit-resolution ((_ th-lemma arith triangle-eq) (or (= v_b_L_H_p_G_0$ ?v0!14) (not $x24388) $x25493)) @x25045 (or (= v_b_L_H_p_G_0$ ?v0!14) $x25493))))
(let ((@x25807 (unit-resolution @x25794 (unit-resolution @x26062 @x25040 (not (= v_b_L_H_p_G_0$ ?v0!14))) $x25493)))
(let ((@x25542 ((_ th-lemma arith farkas -1 -1 1) (unit-resolution (def-axiom (or $x20099 $x16605)) @x24882 $x16605) @x25773 @x25807 false)))
(let ((@x23800 (hypothesis $x21114)))
(let ((@x23806 (unit-resolution (def-axiom (or $x21111 $x3923)) @x23800 $x3923)))
(let ((@x23831 (unit-resolution (def-axiom (or $x21108 $x16330 $x16333 $x21102)) (unit-resolution (def-axiom (or $x21111 $x21105)) @x23800 $x21105) @x23806 (unit-resolution (def-axiom (or $x21111 $x3924)) @x23800 $x3924) $x21102)))
(let ((@x23833 (unit-resolution (def-axiom (or $x21156 $x16330 $x16333 $x21150)) (unit-resolution (def-axiom (or $x21111 $x3924)) @x23800 $x3924) (hypothesis $x21153) @x23806 $x21150)))
(let ((@x23933 (unit-resolution (def-axiom (or $x21132 $x21120 $x21126)) (unit-resolution (def-axiom (or $x21117 $x21111)) @x23800 $x21117) (hypothesis $x21123) $x21132)))
(let ((@x23949 (unit-resolution (def-axiom (or $x21144 $x16330 $x16339 $x21138)) (unit-resolution (def-axiom (or $x21135 $x21129)) @x23933 $x21135) (unit-resolution (def-axiom (or $x21147 $x21141)) @x23833 $x21141) @x23806 (unit-resolution (def-axiom (or $x21099 $x3926)) @x23831 $x3926) false)))
(let ((@x25705 (unit-resolution (lemma @x23949 (or $x21111 $x21126 $x21156)) (unit-resolution (def-axiom (or $x21159 $x21153)) @x25336 $x21153) (or $x21111 $x21126))))
(let ((@x24823 (unit-resolution (def-axiom (or $x21114 $x16330 $x16333 $x21108)) @x25345 (or $x21114 $x16330 $x21108))))
(let ((@x24804 (unit-resolution @x24823 (unit-resolution (def-axiom (or $x21105 $x21099)) (hypothesis $x21102) $x21105) (unit-resolution (def-axiom (or $x21099 $x3923)) (hypothesis $x21102) $x3923) (hypothesis $x21111) false)))
(let ((@x25544 (unit-resolution (lemma @x24804 (or $x21099 $x21114)) (unit-resolution @x25705 (lemma @x25542 $x21123) $x21111) $x21099)))
(let ((@x25545 (unit-resolution (def-axiom (or $x21102 $x16330 $x16339 $x21096)) @x25032 @x25544 (or $x16339 $x21096))))
(let ((@x25499 (unit-resolution @x25545 (lemma @x25298 $x3926) $x21096)))
(let ((@x24990 (symm (unit-resolution (def-axiom (or $x21093 $x3940)) @x25499 $x3940) (= v_b_L_H_max_G_2$ v_b_L_H_max_G_3$))))
(let ((@x25684 (symm (unit-resolution (def-axiom (or $x21093 $x3935)) @x25499 $x3935) (= ?x3929 v_b_L_H_max_G_2$))))
(let ((@x25702 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not (= ?x3929 v_b_L_H_max_G_3$)) $x24191)) (trans @x25684 @x24990 (= ?x3929 v_b_L_H_max_G_3$)) $x24191)))
(let ((@x25703 (unit-resolution @x26039 (unit-resolution (def-axiom (or $x21093 $x21087)) @x25499 $x21087) $x21084)))
(let ((@x25694 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x20170 $x21314)) (unit-resolution (def-axiom (or $x21081 $x12500)) @x25703 $x12500) $x21314)))
(let ((@x25722 (unit-resolution (unit-resolution @x24365 @x25337 (or $x12514 (not $x21314))) @x25694 $x12514)))
(let ((@x25710 (unit-resolution (def-axiom (or $x21078 $x12518 $x21072)) @x25722 (unit-resolution (def-axiom (or $x21081 $x21075)) @x25703 $x21075) $x21072)))
(let ((@x25723 (monotonicity (unit-resolution (def-axiom (or $x21093 $x3942)) @x25499 $x3942) (= ?x3974 ?x3922))))
(let ((@x25707 (trans (monotonicity @x25723 (= ?x3975 ?x3929)) @x25684 (= ?x3975 v_b_L_H_max_G_2$))))
(let (($x24188 (>= (+ v_b_L_H_p_G_0$ (* (- 1) v_b_SL_H_witness_G_1$)) 0)))
(let ((@x25713 (symm (unit-resolution (def-axiom (or $x21093 $x3942)) @x25499 $x3942) (= v_b_L_H_p_G_0$ v_b_SL_H_witness_G_1$))))
(let ((@x25747 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not (= v_b_L_H_p_G_0$ v_b_SL_H_witness_G_1$)) $x24188)) @x25713 $x24188)))
(let ((@x25736 (unit-resolution ((_ th-lemma arith assign-bounds -1 -1) (or $x12553 $x12453 (not $x24188))) @x25337 (or $x12553 (not $x24188)))))
(let ((@x25735 (unit-resolution (def-axiom (or $x20131 $x12550 (not $x3976))) (unit-resolution @x25736 @x25747 $x12553) (trans @x25707 @x24990 $x3976) $x20131)))
(let ((@x25885 (unit-resolution (def-axiom (or $x21066 $x20104 $x21060)) (unit-resolution (def-axiom (or $x21057 $x20130)) @x25735 $x21057) (unit-resolution (def-axiom (or $x21069 $x21063)) @x25710 $x21063) $x20104)))
(let (($x25930 (>= (+ ?x3929 ?x16620) 0)))
(let (($x26036 (= v_b_L_H_p_G_0$ ?v0!14)))
(let ((@x25738 (unit-resolution ((_ th-lemma arith assign-bounds -1 -1) (or $x25758 $x16600 (not $x21314))) (unit-resolution (def-axiom (or $x20099 $x16605)) @x25885 $x16605) @x25694 $x25758)))
(let ((@x25737 (unit-resolution (def-axiom (or $x21156 $x16330 $x16333 $x21150)) (unit-resolution (def-axiom (or $x21159 $x21153)) @x25336 $x21153) @x25345 (or $x16330 $x21150))))
(let ((@x25813 (unit-resolution (def-axiom (or $x21147 $x21141)) (unit-resolution @x25737 @x25032 $x21150) $x21141)))
(let ((@x25840 (unit-resolution (def-axiom (or $x21144 $x16330 $x16339 $x21138)) @x25032 @x25813 (or $x16339 $x21138))))
(let ((@x25839 (unit-resolution (def-axiom (or $x21135 $x21129)) (unit-resolution @x25840 (lemma @x25298 $x3926) $x21138) $x21129)))
(let ((@x25838 (unit-resolution (def-axiom (or $x21132 $x21120 $x21126)) (lemma @x25542 $x21123) (or $x21132 $x21120))))
(let ((@x25853 (unit-resolution (def-axiom (or $x21117 $x12476)) (unit-resolution @x25838 @x25839 $x21120) $x12476)))
(let ((@x25814 (unit-resolution ((_ th-lemma arith assign-bounds 1 1 1) (or $x25800 $x16622 (not $x24191) $x12471)) (unit-resolution (def-axiom (or $x20099 $x21321)) @x25885 $x21321) @x25853 @x25702 $x25800)))
(let ((@x25830 (unit-resolution (mp ((_ quant-inst ?v0!14) $x25240) @x25287 $x25270) @x25333 (unit-resolution (def-axiom (or $x20099 $x16366)) @x25885 $x16366) (unit-resolution (def-axiom (or $x20099 $x16367)) @x25885 $x16367) @x25814 $x24388)))
(let ((@x25831 (unit-resolution @x26062 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x26036 (not $x24388) $x25493)) @x25830 @x25738 $x26036) $x26041)))
((_ th-lemma arith farkas -1 1 1) (unit-resolution ((_ th-lemma arith triangle-eq) (or $x26045 $x25930)) @x25831 $x25930) (unit-resolution (def-axiom (or $x20099 $x21321)) @x25885 $x21321) @x25702 false

