4130cc2c7db4aedd246ade86526a1512dc2d3ec1 3138 0
unsat
((set-logic AUFLIA)
(declare-fun ?v0!19 () B_Vertex$)
(declare-fun ?v1!18 () B_Vertex$)
(declare-fun ?v0!20 () B_Vertex$)
(declare-fun ?v0!17 () B_Vertex$)
(declare-fun ?v1!16 () B_Vertex$)
(declare-fun ?v0!15 () B_Vertex$)
(declare-fun ?v0!14 () B_Vertex$)
(declare-fun ?v0!13 () B_Vertex$)
(declare-fun ?v0!12 () B_Vertex$)
(declare-fun ?v0!11 () B_Vertex$)
(declare-fun ?v1!10 () B_Vertex$)
(declare-fun ?v1!9 (B_Vertex$) B_Vertex$)
(declare-fun ?v0!8 () B_Vertex$)
(declare-fun ?v1!7 (B_Vertex$) B_Vertex$)
(declare-fun ?v1!6 (B_Vertex$) B_Vertex$)
(declare-fun ?v0!5 () B_Vertex$)
(declare-fun ?v0!4 () B_Vertex$)
(declare-fun ?v1!3 () B_Vertex$)
(declare-fun ?v0!2 () B_Vertex$)
(declare-fun ?v1!1 () B_Vertex$)
(declare-fun ?v0!0 () B_Vertex$)
(proof
(let ((?x2200 (* (- 1) (v_b_SP_G_2$ ?v0!19))))
(let ((?x2198 (v_b_SP_G_2$ ?v1!18)))
(let ((?x2191 (b_G$ (pair$ ?v1!18 ?v0!19))))
(let (($x2202 (>= (+ ?x2191 ?x2198 ?x2200) 0)))
(let (($x2194 (<= (+ b_Infinity$ (* (- 1) ?x2191)) 0)))
(let (($x2189 (fun_app$ v_b_Visited_G_2$ ?v1!18)))
(let (($x3065 (not $x2189)))
(let (($x3080 (or $x3065 $x2194 $x2202)))
(let (($x3085 (not $x3080)))
(let (($x3977 (forall ((?v1 B_Vertex$) )(!(let ((?x2217 (v_b_SP_G_2$ ?v0!20)))
(let ((?x2218 (* (- 1) ?x2217)))
(let ((?x220 (v_b_SP_G_2$ ?v1)))
(let (($x2528 (= (+ ?x220 ?x2218 (b_G$ (pair$ ?v1 ?v0!20))) 0)))
(let (($x238 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x247 (not $x238)))
(or (>= (+ ?x220 ?x2218) 0) $x247 (not $x2528)))))))) :pattern ( (v_b_SP_G_2$ ?v1) ) :pattern ( (fun_app$ v_b_Visited_G_2$ ?v1) ) :pattern ( (pair$ ?v1 ?v0!20) )))
))
(let (($x3982 (not $x3977)))
(let (($x2220 (<= (+ b_Infinity$ (* (- 1) (v_b_SP_G_2$ ?v0!20))) 0)))
(let (($x2215 (= ?v0!20 b_Source$)))
(let (($x3968 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(!(let ((?x220 (v_b_SP_G_2$ ?v1)))
(let ((?x102 (b_G$ (pair$ ?v1 ?v0))))
(let (($x1621 (>= (+ ?x102 ?x220 (* (- 1) (v_b_SP_G_2$ ?v0))) 0)))
(let (($x1303 (<= (+ b_Infinity$ (* (- 1) ?x102)) 0)))
(let (($x238 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x247 (not $x238)))
(or $x247 $x1303 $x1621))))))) :pattern ( (pair$ ?v1 ?v0) )))
))
(let (($x3973 (not $x3968)))
(let (($x3985 (or $x3973 $x2215 $x2220 $x3982)))
(let (($x3988 (not $x3985)))
(let (($x3991 (or $x3085 $x3988)))
(let (($x3994 (not $x3991)))
(let (($x3960 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(!(let (($x1601 (>= (+ (v_b_SP_G_2$ ?v1) (* (- 1) (v_b_SP_G_2$ ?v0))) 0)))
(let (($x238 (fun_app$ v_b_Visited_G_2$ ?v1)))
(or $x238 (not (fun_app$ v_b_Visited_G_2$ ?v0)) $x1601))) :pattern ( (v_b_SP_G_2$ ?v1) (v_b_SP_G_2$ ?v0) )))
))
(let (($x3997 (or (not $x3960) $x3994)))
(let (($x4000 (not $x3997)))
(let (($x2175 (>= (+ (v_b_SP_G_2$ ?v1!16) (* (- 1) (v_b_SP_G_2$ ?v0!17))) 0)))
(let (($x2168 (fun_app$ v_b_Visited_G_2$ ?v0!17)))
(let (($x3019 (not $x2168)))
(let (($x2166 (fun_app$ v_b_Visited_G_2$ ?v1!16)))
(let (($x3034 (or $x2166 $x3019 $x2175)))
(let (($x3943 (forall ((?v0 B_Vertex$) )(!(let ((?x121 (fun_app$c v_b_SP_G_1$ ?v0)))
(let ((?x220 (v_b_SP_G_2$ ?v0)))
(let (($x225 (= ?x220 ?x121)))
(let (($x238 (fun_app$ v_b_Visited_G_2$ ?v0)))
(let (($x247 (not $x238)))
(or $x247 $x225)))))) :pattern ( (fun_app$ v_b_Visited_G_2$ ?v0) ) :pattern ( (v_b_SP_G_2$ ?v0) ) :pattern ( (fun_app$c v_b_SP_G_1$ ?v0) )))
))
(let (($x3039 (not $x3034)))
(let (($x4003 (or $x3039 $x4000)))
(let (($x4006 (not $x4003)))
(let (($x3951 (forall ((?v0 B_Vertex$) )(!(let ((?x220 (v_b_SP_G_2$ ?v0)))
(>= ?x220 0)) :pattern ( (v_b_SP_G_2$ ?v0) )))
))
(let (($x4009 (or (not $x3951) $x4006)))
(let (($x4012 (not $x4009)))
(let ((?x2152 (v_b_SP_G_2$ ?v0!15)))
(let (($x2153 (>= ?x2152 0)))
(let (($x2154 (not $x2153)))
(let ((?x243 (v_b_SP_G_2$ b_Source$)))
(let (($x244 (= ?x243 0)))
(let (($x913 (not $x244)))
(let (($x4015 (or $x913 $x2154 $x4012)))
(let (($x4018 (not $x4015)))
(let (($x3948 (not $x3943)))
(let (($x4021 (or $x3948 $x4018)))
(let (($x4024 (not $x4021)))
(let ((?x2136 (fun_app$c v_b_SP_G_1$ ?v0!14)))
(let ((?x2135 (v_b_SP_G_2$ ?v0!14)))
(let (($x2137 (= ?x2135 ?x2136)))
(let (($x2133 (fun_app$ v_b_Visited_G_2$ ?v0!14)))
(let (($x2134 (not $x2133)))
(let (($x2138 (or $x2134 $x2137)))
(let ((@x8891 (unit-resolution (def-axiom (or $x2138 $x2133)) (hypothesis (not $x2138)) $x2133)))
(let (($x3646 (not $x2137)))
(let ((@x8820 (unit-resolution (def-axiom (or $x2138 $x3646)) (hypothesis (not $x2138)) $x3646)))
(let ((?x212 (fun_app$a (fun_app$b (fun_upd$ v_b_Visited_G_1$) v_b_v_G_1$) true)))
(let (($x213 (= v_b_Visited_G_2$ ?x212)))
(let (($x2139 (not $x2138)))
(let (($x4027 (or $x2139 $x4024)))
(let (($x4030 (not $x4027)))
(let (($x3934 (forall ((?v0 B_Vertex$) )(!(>= (+ (fun_app$c v_b_SP_G_1$ ?v0) (* (- 1) (v_b_SP_G_2$ ?v0))) 0) :pattern ( (fun_app$c v_b_SP_G_1$ ?v0) ) :pattern ( (v_b_SP_G_2$ ?v0) )))
))
(let (($x3939 (not $x3934)))
(let (($x4033 (or $x3939 $x4030)))
(let (($x4036 (not $x4033)))
(let (($x2121 (>= (+ (fun_app$c v_b_SP_G_1$ ?v0!13) (* (- 1) (v_b_SP_G_2$ ?v0!13))) 0)))
(let (($x2122 (not $x2121)))
(let (($x4039 (or $x2122 $x4036)))
(let (($x4042 (not $x4039)))
(let (($x3926 (forall ((?v0 B_Vertex$) )(!(let ((?x121 (fun_app$c v_b_SP_G_1$ ?v0)))
(let ((?x220 (v_b_SP_G_2$ ?v0)))
(let (($x225 (= ?x220 ?x121)))
(let ((?x204 (fun_app$c v_b_SP_G_1$ v_b_v_G_1$)))
(let ((?x1520 (* (- 1) ?x204)))
(let (($x1547 (<= (+ ?x121 ?x1520 (* (- 1) (b_G$ (pair$ v_b_v_G_1$ ?v0)))) 0)))
(let (($x1540 (<= (+ b_Infinity$ (* (- 1) (b_G$ (pair$ v_b_v_G_1$ ?v0)))) 0)))
(let (($x2991 (or $x1540 $x1547)))
(let (($x2992 (not $x2991)))
(or $x2992 $x225)))))))))) :pattern ( (pair$ v_b_v_G_1$ ?v0) ) :pattern ( (fun_app$c v_b_SP_G_1$ ?v0) ) :pattern ( (v_b_SP_G_2$ ?v0) )))
))
(let (($x3931 (not $x3926)))
(let (($x3918 (forall ((?v0 B_Vertex$) )(!(let ((?x220 (v_b_SP_G_2$ ?v0)))
(let ((?x1560 (* (- 1) ?x220)))
(let ((?x215 (b_G$ (pair$ v_b_v_G_1$ ?v0))))
(let ((?x204 (fun_app$c v_b_SP_G_1$ v_b_v_G_1$)))
(let (($x1559 (= (+ ?x204 ?x215 ?x1560) 0)))
(let (($x1547 (<= (+ (fun_app$c v_b_SP_G_1$ ?v0) (* (- 1) ?x204) (* (- 1) ?x215)) 0)))
(let (($x1540 (<= (+ b_Infinity$ (* (- 1) ?x215)) 0)))
(or $x1540 $x1547 $x1559)))))))) :pattern ( (pair$ v_b_v_G_1$ ?v0) ) :pattern ( (fun_app$c v_b_SP_G_1$ ?v0) ) :pattern ( (v_b_SP_G_2$ ?v0) )))
))
(let (($x3923 (not $x3918)))
(let (($x3196 (not $x213)))
(let (($x3908 (forall ((?v0 B_Vertex$) )(!(let ((?x204 (fun_app$c v_b_SP_G_1$ v_b_v_G_1$)))
(let ((?x1520 (* (- 1) ?x204)))
(let ((?x121 (fun_app$c v_b_SP_G_1$ ?v0)))
(let (($x125 (fun_app$ v_b_Visited_G_1$ ?v0)))
(or $x125 (>= (+ ?x121 ?x1520) 0)))))) :pattern ( (fun_app$ v_b_Visited_G_1$ ?v0) ) :pattern ( (fun_app$c v_b_SP_G_1$ ?v0) )))
))
(let (($x3913 (not $x3908)))
(let (($x1522 (<= (+ b_Infinity$ (* (- 1) (fun_app$c v_b_SP_G_1$ v_b_v_G_1$))) 0)))
(let (($x202 (fun_app$ v_b_Visited_G_1$ v_b_v_G_1$)))
(let (($x2087 (<= (+ b_Infinity$ (* (- 1) (fun_app$c v_b_SP_G_1$ ?v0!12))) 0)))
(let (($x2082 (fun_app$ v_b_Visited_G_1$ ?v0!12)))
(let (($x4045 (or $x2082 $x2087 $x202 $x1522 $x3913 $x3196 $x3923 $x3931 $x4042)))
(let (($x4048 (not $x4045)))
(let (($x193 (= (fun_app$c v_b_SP_G_3$ b_Source$) 0)))
(let (($x3870 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(!(let ((?x177 (fun_app$c v_b_SP_G_3$ ?v1)))
(let ((?x102 (b_G$ (pair$ ?v1 ?v0))))
(let (($x1493 (>= (+ ?x102 ?x177 (* (- 1) (fun_app$c v_b_SP_G_3$ ?v0))) 0)))
(let (($x1303 (<= (+ b_Infinity$ (* (- 1) ?x102)) 0)))
(let (($x1448 (<= (+ b_Infinity$ (* (- 1) ?x177)) 0)))
(or $x1448 $x1303 $x1493)))))) :pattern ( (pair$ ?v1 ?v0) )))
))
(let (($x3878 (or (not $x3870) $x193)))
(let (($x3881 (not $x3878)))
(let ((?x2036 (b_G$ (pair$ ?v1!10 ?v0!11))))
(let ((?x2030 (fun_app$c v_b_SP_G_3$ ?v1!10)))
(let (($x2497 (>= (+ ?x2030 ?x2036 (* (- 1) (fun_app$c v_b_SP_G_3$ ?v0!11))) 0)))
(let (($x2039 (<= (+ b_Infinity$ (* (- 1) ?x2036)) 0)))
(let (($x2033 (<= (+ b_Infinity$ (* (- 1) ?x2030)) 0)))
(let (($x2919 (or $x2033 $x2039 $x2497)))
(let (($x2924 (not $x2919)))
(let (($x3884 (or $x2924 $x3881)))
(let (($x3887 (not $x3884)))
(let (($x3862 (forall ((?v0 B_Vertex$) )(!(let ((?x177 (fun_app$c v_b_SP_G_3$ ?v0)))
(let ((?x2479 (+ ?x177 (* (- 1) (fun_app$c v_b_SP_G_3$ (?v1!9 ?v0))) (* (- 1) (b_G$ (pair$ (?v1!9 ?v0) ?v0))))))
(let (($x2480 (= ?x2479 0)))
(let (($x2464 (<= (+ ?x177 (* (- 1) (fun_app$c v_b_SP_G_3$ (?v1!9 ?v0)))) 0)))
(let (($x2891 (not (or $x2464 (not $x2480)))))
(let (($x1448 (<= (+ b_Infinity$ (* (- 1) ?x177)) 0)))
(let (($x74 (= ?v0 b_Source$)))
(or $x74 $x1448 $x2891)))))))) :pattern ( (fun_app$c v_b_SP_G_3$ ?v0) )))
))
(let (($x3890 (or (not $x3862) $x3887)))
(let (($x3893 (not $x3890)))
(let (($x3848 (forall ((?v1 B_Vertex$) )(!(let ((?x1970 (fun_app$c v_b_SP_G_3$ ?v0!8)))
(let ((?x1971 (* (- 1) ?x1970)))
(let ((?x177 (fun_app$c v_b_SP_G_3$ ?v1)))
(let (($x2436 (= (+ ?x177 ?x1971 (b_G$ (pair$ ?v1 ?v0!8))) 0)))
(or (>= (+ ?x177 ?x1971) 0) (not $x2436)))))) :pattern ( (fun_app$c v_b_SP_G_3$ ?v1) ) :pattern ( (pair$ ?v1 ?v0!8) )))
))
(let (($x3853 (not $x3848)))
(let (($x1973 (<= (+ b_Infinity$ (* (- 1) (fun_app$c v_b_SP_G_3$ ?v0!8))) 0)))
(let (($x1968 (= ?v0!8 b_Source$)))
(let (($x3856 (or $x1968 $x1973 $x3853)))
(let (($x3859 (not $x3856)))
(let (($x3896 (or $x3859 $x3893)))
(let (($x3899 (not $x3896)))
(let (($x164 (= v_b_SP_G_3$ v_b_SP_G_1$)))
(let (($x2982 (not $x164)))
(let (($x3838 (forall ((?v0 B_Vertex$) )(!(let (($x1395 (<= (+ b_Infinity$ (* (- 1) (fun_app$c v_b_SP_G_1$ ?v0))) 0)))
(let (($x125 (fun_app$ v_b_Visited_G_1$ ?v0)))
(or $x125 $x1395))) :pattern ( (fun_app$ v_b_Visited_G_1$ ?v0) ) :pattern ( (fun_app$c v_b_SP_G_1$ ?v0) )))
))
(let (($x3843 (not $x3838)))
(let (($x3902 (or $x3843 (not (= v_b_Visited_G_3$ v_b_Visited_G_1$)) (not (= v_b_v_G_2$ v_b_v_G_0$)) $x2982 (not (= v_b_oldSP_G_1$ v_b_oldSP_G_0$)) $x3899)))
(let (($x5759 (>= (+ ?x2030 (* (- 1) (fun_app$c v_b_SP_G_1$ ?v1!10))) 0)))
(let ((?x4698 (fun_app$c v_b_SP_G_1$ ?v1!10)))
(let (($x6220 (= ?x2030 ?x4698)))
(let (($x3905 (not $x3902)))
(let ((@x5698 (hypothesis $x3905)))
(let ((@x5699 (unit-resolution (def-axiom (or $x3902 $x164)) @x5698 $x164)))
(let ((@x7384 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x6220) $x5759)) (monotonicity @x5699 $x6220) $x5759)))
(let (($x3668 (not $x2497)))
(let (($x4677 (>= (+ ?x2036 (* (- 1) (fun_app$c v_b_SP_G_1$ ?v0!11)) ?x4698) 0)))
(let (($x4697 (fun_app$ v_b_Visited_G_1$ ?v1!10)))
(let (($x4492 (<= (+ b_Infinity$ (* (- 1) ?x4698)) 0)))
(let (($x5659 (not $x4492)))
(let (($x2034 (not $x2033)))
(let ((?x119 (fun_app$c v_b_SP_G_1$ b_Source$)))
(let (($x120 (= ?x119 0)))
(let (($x4051 (or $x3905 $x4048)))
(let (($x4054 (not $x4051)))
(let (($x3829 (forall ((?v0 B_Vertex$) )(!(let ((?x121 (fun_app$c v_b_SP_G_1$ ?v0)))
(let ((?x2416 (+ ?x121 (* (- 1) (fun_app$c v_b_SP_G_1$ (?v1!7 ?v0))) (* (- 1) (b_G$ (pair$ (?v1!7 ?v0) ?v0))))))
(let (($x2417 (= ?x2416 0)))
(let (($x2401 (<= (+ ?x121 (* (- 1) (fun_app$c v_b_SP_G_1$ (?v1!7 ?v0)))) 0)))
(let (($x2825 (not (or $x2401 (not (fun_app$ v_b_Visited_G_1$ (?v1!7 ?v0))) (not $x2417)))))
(let (($x1395 (<= (+ b_Infinity$ (* (- 1) ?x121)) 0)))
(let (($x74 (= ?v0 b_Source$)))
(or $x74 $x1395 $x2825)))))))) :pattern ( (fun_app$c v_b_SP_G_1$ ?v0) )))
))
(let (($x3834 (not $x3829)))
(let (($x3821 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(!(let ((?x121 (fun_app$c v_b_SP_G_1$ ?v1)))
(let ((?x102 (b_G$ (pair$ ?v1 ?v0))))
(let (($x1384 (>= (+ ?x102 ?x121 (* (- 1) (fun_app$c v_b_SP_G_1$ ?v0))) 0)))
(let (($x1303 (<= (+ b_Infinity$ (* (- 1) ?x102)) 0)))
(let (($x125 (fun_app$ v_b_Visited_G_1$ ?v1)))
(let (($x126 (not $x125)))
(or $x126 $x1303 $x1384))))))) :pattern ( (pair$ ?v1 ?v0) )))
))
(let (($x3826 (not $x3821)))
(let (($x3813 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(!(let ((?x121 (fun_app$c v_b_SP_G_1$ ?v1)))
(let (($x1367 (>= (+ ?x121 (* (- 1) (fun_app$c v_b_SP_G_1$ ?v0))) 0)))
(let (($x125 (fun_app$ v_b_Visited_G_1$ ?v1)))
(or $x125 (not (fun_app$ v_b_Visited_G_1$ ?v0)) $x1367)))) :pattern ( (fun_app$ v_b_Visited_G_1$ ?v1) (fun_app$ v_b_Visited_G_1$ ?v0) )))
))
(let (($x3818 (not $x3813)))
(let (($x3804 (forall ((?v0 B_Vertex$) )(!(let ((?x121 (fun_app$c v_b_SP_G_1$ ?v0)))
(>= ?x121 0)) :pattern ( (fun_app$c v_b_SP_G_1$ ?v0) )))
))
(let (($x3809 (not $x3804)))
(let (($x3213 (not $x120)))
(let (($x3795 (forall ((?v0 B_Vertex$) )(!(let ((?x75 (v_b_SP_G_0$ ?v0)))
(let ((?x2378 (+ ?x75 (* (- 1) (v_b_SP_G_0$ (?v1!6 ?v0))) (* (- 1) (b_G$ (pair$ (?v1!6 ?v0) ?v0))))))
(let (($x2379 (= ?x2378 0)))
(let (($x2363 (<= (+ ?x75 (* (- 1) (v_b_SP_G_0$ (?v1!6 ?v0)))) 0)))
(let (($x2752 (not (or $x2363 (not (v_b_Visited_G_0$ (?v1!6 ?v0))) (not $x2379)))))
(let (($x1330 (<= (+ b_Infinity$ (* (- 1) ?x75)) 0)))
(let (($x74 (= ?v0 b_Source$)))
(or $x74 $x1330 $x2752)))))))) :pattern ( (v_b_SP_G_0$ ?v0) )))
))
(let (($x4057 (or (not $x3795) $x3213 $x3809 $x3818 $x3826 $x3834 $x4054)))
(let (($x4060 (not $x4057)))
(let (($x3781 (forall ((?v1 B_Vertex$) )(!(let ((?x1849 (v_b_SP_G_0$ ?v0!5)))
(let ((?x1850 (* (- 1) ?x1849)))
(let ((?x75 (v_b_SP_G_0$ ?v1)))
(let (($x83 (v_b_Visited_G_0$ ?v1)))
(let (($x84 (not $x83)))
(or (>= (+ ?x75 ?x1850) 0) $x84 (not (= (+ ?x75 ?x1850 (b_G$ (pair$ ?v1 ?v0!5))) 0)))))))) :pattern ( (v_b_SP_G_0$ ?v1) ) :pattern ( (v_b_Visited_G_0$ ?v1) ) :pattern ( (pair$ ?v1 ?v0!5) )))
))
(let (($x1852 (<= (+ b_Infinity$ (* (- 1) (v_b_SP_G_0$ ?v0!5))) 0)))
(let (($x1847 (= ?v0!5 b_Source$)))
(let (($x3789 (or $x1847 $x1852 (not $x3781))))
(let (($x3792 (not $x3789)))
(let (($x4063 (or $x3792 $x4060)))
(let (($x4066 (not $x4063)))
(let (($x3772 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(!(let ((?x102 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x75 (v_b_SP_G_0$ ?v1)))
(let (($x1316 (>= (+ ?x75 (* (- 1) (v_b_SP_G_0$ ?v0)) ?x102) 0)))
(let (($x1303 (<= (+ b_Infinity$ (* (- 1) ?x102)) 0)))
(let (($x83 (v_b_Visited_G_0$ ?v1)))
(let (($x84 (not $x83)))
(or $x84 $x1303 $x1316))))))) :pattern ( (pair$ ?v1 ?v0) )))
))
(let (($x4069 (or (not $x3772) $x4066)))
(let (($x4072 (not $x4069)))
(let ((?x1823 (b_G$ (pair$ ?v1!3 ?v0!4))))
(let (($x2336 (>= (+ ?x1823 (v_b_SP_G_0$ ?v1!3) (* (- 1) (v_b_SP_G_0$ ?v0!4))) 0)))
(let (($x1826 (<= (+ b_Infinity$ (* (- 1) ?x1823)) 0)))
(let (($x1821 (v_b_Visited_G_0$ ?v1!3)))
(let (($x2668 (not $x1821)))
(let (($x2683 (or $x2668 $x1826 $x2336)))
(let (($x3748 (forall ((?v0 B_Vertex$) )(!(let (($x83 (v_b_Visited_G_0$ ?v0)))
(not $x83)) :pattern ( (v_b_Visited_G_0$ ?v0) )))
))
(let (($x85 (forall ((?v0 B_Vertex$) )(let (($x83 (v_b_Visited_G_0$ ?v0)))
(not $x83)))
))
(let ((@x3752 (quant-intro (refl (= (not (v_b_Visited_G_0$ ?0)) (not (v_b_Visited_G_0$ ?0)))) (= $x85 $x3748))))
(let ((@x1779 (nnf-pos (refl (~ (not (v_b_Visited_G_0$ ?0)) (not (v_b_Visited_G_0$ ?0)))) (~ $x85 $x85))))
(let (($x343 (forall ((?v0 B_Vertex$) )(let (($x74 (= ?v0 b_Source$)))
(or $x74 (= (v_b_SP_G_0$ ?v0) b_Infinity$))))
))
(let (($x337 (forall ((?v0 B_Vertex$) )(let (($x74 (= ?v0 b_Source$)))
(let (($x79 (not $x74)))
(or $x79 (= (v_b_SP_G_0$ ?v0) 0)))))
))
(let (($x354 (and $x337 $x343 $x85)))
(let (($x850 (forall ((?v0 B_Vertex$) )(let (($x838 (exists ((?v1 B_Vertex$) )(let ((?x102 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x220 (v_b_SP_G_2$ ?v1)))
(let ((?x255 (+ ?x220 ?x102)))
(let ((?x250 (v_b_SP_G_2$ ?v0)))
(let (($x262 (= ?x250 ?x255)))
(let (($x238 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x251 (<= ?x250 ?x220)))
(let (($x827 (not $x251)))
(and $x827 $x238 $x262))))))))))
))
(let (($x821 (not (<= b_Infinity$ (v_b_SP_G_2$ ?v0)))))
(let (($x74 (= ?v0 b_Source$)))
(let (($x79 (not $x74)))
(let (($x824 (and $x79 $x821)))
(let (($x844 (not $x824)))
(or $x844 $x838))))))))
))
(let (($x817 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(let ((?x102 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x220 (v_b_SP_G_2$ ?v1)))
(let ((?x255 (+ ?x220 ?x102)))
(let ((?x250 (v_b_SP_G_2$ ?v0)))
(let (($x256 (<= ?x250 ?x255)))
(let (($x378 (not (<= b_Infinity$ ?x102))))
(let (($x238 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x805 (and $x238 $x378)))
(let (($x811 (not $x805)))
(or $x811 $x256)))))))))))
))
(let (($x878 (or (not $x817) $x850)))
(let (($x883 (and $x817 $x878)))
(let (($x802 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(let ((?x220 (v_b_SP_G_2$ ?v1)))
(let ((?x250 (v_b_SP_G_2$ ?v0)))
(let (($x251 (<= ?x250 ?x220)))
(let (($x238 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x247 (not $x238)))
(let (($x249 (and $x247 (fun_app$ v_b_Visited_G_2$ ?v0))))
(let (($x798 (not $x249)))
(or $x798 $x251)))))))))
))
(let (($x889 (not $x802)))
(let (($x890 (or $x889 $x883)))
(let (($x895 (and $x802 $x890)))
(let (($x246 (forall ((?v0 B_Vertex$) )(let ((?x220 (v_b_SP_G_2$ ?v0)))
(<= 0 ?x220)))
))
(let (($x901 (not $x246)))
(let (($x902 (or $x901 $x895)))
(let (($x907 (and $x246 $x902)))
(let (($x914 (or $x913 $x907)))
(let (($x919 (and $x244 $x914)))
(let (($x786 (forall ((?v0 B_Vertex$) )(let ((?x121 (fun_app$c v_b_SP_G_1$ ?v0)))
(let ((?x220 (v_b_SP_G_2$ ?v0)))
(let (($x225 (= ?x220 ?x121)))
(let (($x238 (fun_app$ v_b_Visited_G_2$ ?v0)))
(let (($x247 (not $x238)))
(or $x247 $x225)))))))
))
(let (($x925 (not $x786)))
(let (($x926 (or $x925 $x919)))
(let (($x931 (and $x786 $x926)))
(let (($x237 (forall ((?v0 B_Vertex$) )(let ((?x121 (fun_app$c v_b_SP_G_1$ ?v0)))
(let ((?x220 (v_b_SP_G_2$ ?v0)))
(<= ?x220 ?x121))))
))
(let (($x937 (not $x237)))
(let (($x938 (or $x937 $x931)))
(let (($x943 (and $x237 $x938)))
(let (($x726 (forall ((?v0 B_Vertex$) )(let ((?x121 (fun_app$c v_b_SP_G_1$ ?v0)))
(let ((?x220 (v_b_SP_G_2$ ?v0)))
(let (($x225 (= ?x220 ?x121)))
(let ((?x215 (b_G$ (pair$ v_b_v_G_1$ ?v0))))
(let ((?x204 (fun_app$c v_b_SP_G_1$ v_b_v_G_1$)))
(let ((?x217 (+ ?x204 ?x215)))
(let (($x698 (not (<= ?x121 ?x217))))
(let (($x694 (not (<= b_Infinity$ ?x215))))
(let (($x701 (and $x694 $x698)))
(or $x701 $x225)))))))))))
))
(let (($x713 (forall ((?v0 B_Vertex$) )(let ((?x215 (b_G$ (pair$ v_b_v_G_1$ ?v0))))
(let ((?x204 (fun_app$c v_b_SP_G_1$ v_b_v_G_1$)))
(let ((?x217 (+ ?x204 ?x215)))
(let ((?x220 (v_b_SP_G_2$ ?v0)))
(let (($x221 (= ?x220 ?x217)))
(let (($x698 (not (<= (fun_app$c v_b_SP_G_1$ ?v0) ?x217))))
(let (($x694 (not (<= b_Infinity$ ?x215))))
(let (($x701 (and $x694 $x698)))
(let (($x707 (not $x701)))
(or $x707 $x221)))))))))))
))
(let (($x690 (forall ((?v0 B_Vertex$) )(let ((?x121 (fun_app$c v_b_SP_G_1$ ?v0)))
(let ((?x204 (fun_app$c v_b_SP_G_1$ v_b_v_G_1$)))
(let (($x206 (<= ?x204 ?x121)))
(let (($x125 (fun_app$ v_b_Visited_G_1$ ?v0)))
(or $x125 $x206))))))
))
(let (($x684 (not (<= b_Infinity$ (fun_app$c v_b_SP_G_1$ v_b_v_G_1$)))))
(let (($x203 (not $x202)))
(let (($x540 (exists ((?v0 B_Vertex$) )(let (($x452 (not (<= b_Infinity$ (fun_app$c v_b_SP_G_1$ ?v0)))))
(let (($x125 (fun_app$ v_b_Visited_G_1$ ?v0)))
(let (($x126 (not $x125)))
(and $x126 $x452)))))
))
(let (($x767 (and $x540 $x203 $x684 $x690 $x213 $x713 $x726)))
(let (($x949 (not $x767)))
(let (($x950 (or $x949 $x943)))
(let (($x638 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(let ((?x102 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x177 (fun_app$c v_b_SP_G_3$ ?v1)))
(let ((?x182 (+ ?x177 ?x102)))
(let ((?x180 (fun_app$c v_b_SP_G_3$ ?v0)))
(let (($x189 (<= ?x180 ?x182)))
(let (($x378 (not (<= b_Infinity$ ?x102))))
(let (($x598 (not (<= b_Infinity$ ?x177))))
(let (($x626 (and $x598 $x378)))
(let (($x632 (not $x626)))
(or $x632 $x189)))))))))))
))
(let (($x654 (or (not $x638) $x193)))
(let (($x659 (and $x638 $x654)))
(let (($x623 (forall ((?v0 B_Vertex$) )(let (($x611 (exists ((?v1 B_Vertex$) )(let ((?x102 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x177 (fun_app$c v_b_SP_G_3$ ?v1)))
(let ((?x182 (+ ?x177 ?x102)))
(let ((?x180 (fun_app$c v_b_SP_G_3$ ?v0)))
(let (($x183 (= ?x180 ?x182)))
(let (($x605 (not (<= ?x180 ?x177))))
(and $x605 $x183))))))))
))
(let (($x598 (not (<= b_Infinity$ (fun_app$c v_b_SP_G_3$ ?v0)))))
(let (($x74 (= ?v0 b_Source$)))
(let (($x79 (not $x74)))
(let (($x601 (and $x79 $x598)))
(let (($x617 (not $x601)))
(or $x617 $x611))))))))
))
(let (($x666 (or (not $x623) $x659)))
(let (($x671 (and $x623 $x666)))
(let (($x167 (= v_b_oldSP_G_1$ v_b_oldSP_G_0$)))
(let (($x162 (= v_b_v_G_2$ v_b_v_G_0$)))
(let (($x159 (= v_b_Visited_G_3$ v_b_Visited_G_1$)))
(let (($x543 (not $x540)))
(let (($x581 (and $x543 $x159 $x162 $x164 $x167)))
(let (($x677 (not $x581)))
(let (($x678 (or $x677 $x671)))
(let (($x955 (and $x678 $x950)))
(let (($x481 (forall ((?v0 B_Vertex$) )(let (($x469 (exists ((?v1 B_Vertex$) )(let ((?x102 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x121 (fun_app$c v_b_SP_G_1$ ?v1)))
(let ((?x134 (+ ?x121 ?x102)))
(let ((?x129 (fun_app$c v_b_SP_G_1$ ?v0)))
(let (($x141 (= ?x129 ?x134)))
(let (($x125 (fun_app$ v_b_Visited_G_1$ ?v1)))
(let (($x130 (<= ?x129 ?x121)))
(let (($x458 (not $x130)))
(and $x458 $x125 $x141))))))))))
))
(let (($x452 (not (<= b_Infinity$ (fun_app$c v_b_SP_G_1$ ?v0)))))
(let (($x74 (= ?v0 b_Source$)))
(let (($x79 (not $x74)))
(let (($x455 (and $x79 $x452)))
(let (($x475 (not $x455)))
(or $x475 $x469))))))))
))
(let (($x448 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(let ((?x102 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x121 (fun_app$c v_b_SP_G_1$ ?v1)))
(let ((?x134 (+ ?x121 ?x102)))
(let ((?x129 (fun_app$c v_b_SP_G_1$ ?v0)))
(let (($x135 (<= ?x129 ?x134)))
(let (($x378 (not (<= b_Infinity$ ?x102))))
(let (($x125 (fun_app$ v_b_Visited_G_1$ ?v1)))
(let (($x436 (and $x125 $x378)))
(let (($x442 (not $x436)))
(or $x442 $x135)))))))))))
))
(let (($x433 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(let ((?x121 (fun_app$c v_b_SP_G_1$ ?v1)))
(let ((?x129 (fun_app$c v_b_SP_G_1$ ?v0)))
(let (($x130 (<= ?x129 ?x121)))
(let (($x127 (fun_app$ v_b_Visited_G_1$ ?v0)))
(let (($x125 (fun_app$ v_b_Visited_G_1$ ?v1)))
(let (($x126 (not $x125)))
(let (($x128 (and $x126 $x127)))
(let (($x429 (not $x128)))
(or $x429 $x130))))))))))
))
(let (($x123 (forall ((?v0 B_Vertex$) )(let ((?x121 (fun_app$c v_b_SP_G_1$ ?v0)))
(<= 0 ?x121)))
))
(let (($x426 (forall ((?v0 B_Vertex$) )(let (($x414 (exists ((?v1 B_Vertex$) )(let ((?x97 (v_b_SP_G_0$ ?v0)))
(let (($x112 (= ?x97 (+ (v_b_SP_G_0$ ?v1) (b_G$ (pair$ ?v1 ?v0))))))
(let (($x83 (v_b_Visited_G_0$ ?v1)))
(let ((?x75 (v_b_SP_G_0$ ?v1)))
(let (($x98 (<= ?x97 ?x75)))
(let (($x403 (not $x98)))
(and $x403 $x83 $x112))))))))
))
(let (($x397 (not (<= b_Infinity$ (v_b_SP_G_0$ ?v0)))))
(let (($x74 (= ?v0 b_Source$)))
(let (($x79 (not $x74)))
(let (($x400 (and $x79 $x397)))
(or (not $x400) $x414)))))))
))
(let (($x532 (and $x426 $x120 $x123 $x433 $x448 $x481)))
(let (($x961 (not $x532)))
(let (($x962 (or $x961 $x955)))
(let (($x967 (and $x426 $x962)))
(let (($x393 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(let ((?x97 (v_b_SP_G_0$ ?v0)))
(let (($x106 (<= ?x97 (+ (v_b_SP_G_0$ ?v1) (b_G$ (pair$ ?v1 ?v0))))))
(let (($x378 (not (<= b_Infinity$ (b_G$ (pair$ ?v1 ?v0))))))
(let (($x83 (v_b_Visited_G_0$ ?v1)))
(let (($x381 (and $x83 $x378)))
(or (not $x381) $x106)))))))
))
(let (($x973 (not $x393)))
(let (($x974 (or $x973 $x967)))
(let (($x979 (and $x393 $x974)))
(let (($x374 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(let ((?x75 (v_b_SP_G_0$ ?v1)))
(let ((?x97 (v_b_SP_G_0$ ?v0)))
(let (($x98 (<= ?x97 ?x75)))
(let (($x95 (v_b_Visited_G_0$ ?v0)))
(let (($x83 (v_b_Visited_G_0$ ?v1)))
(let (($x84 (not $x83)))
(let (($x96 (and $x84 $x95)))
(let (($x370 (not $x96)))
(or $x370 $x98))))))))))
))
(let (($x985 (not $x374)))
(let (($x986 (or $x985 $x979)))
(let (($x991 (and $x374 $x986)))
(let (($x94 (forall ((?v0 B_Vertex$) )(let ((?x75 (v_b_SP_G_0$ ?v0)))
(<= 0 ?x75)))
))
(let (($x997 (not $x94)))
(let (($x998 (or $x997 $x991)))
(let (($x1003 (and $x94 $x998)))
(let (($x92 (= (v_b_SP_G_0$ b_Source$) 0)))
(let (($x1009 (not $x92)))
(let (($x1010 (or $x1009 $x1003)))
(let (($x1015 (and $x92 $x1010)))
(let (($x1022 (or (not $x354) $x1015)))
(let (($x267 (forall ((?v0 B_Vertex$) )(let (($x265 (exists ((?v1 B_Vertex$) )(let ((?x102 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x220 (v_b_SP_G_2$ ?v1)))
(let ((?x255 (+ ?x220 ?x102)))
(let ((?x250 (v_b_SP_G_2$ ?v0)))
(let (($x262 (= ?x250 ?x255)))
(let (($x238 (fun_app$ v_b_Visited_G_2$ ?v1)))
(and (< ?x220 ?x250) (and $x238 $x262)))))))))
))
(=> (and (not (= ?v0 b_Source$)) (< (v_b_SP_G_2$ ?v0) b_Infinity$)) $x265)))
))
(let (($x268 (and $x267 false)))
(let (($x269 (=> $x268 true)))
(let (($x270 (and $x267 $x269)))
(let (($x258 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(let ((?x102 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x220 (v_b_SP_G_2$ ?v1)))
(let ((?x255 (+ ?x220 ?x102)))
(let ((?x250 (v_b_SP_G_2$ ?v0)))
(let (($x256 (<= ?x250 ?x255)))
(=> (and (fun_app$ v_b_Visited_G_2$ ?v1) (< ?x102 b_Infinity$)) $x256)))))))
))
(let (($x271 (=> $x258 $x270)))
(let (($x253 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(let ((?x220 (v_b_SP_G_2$ ?v1)))
(let ((?x250 (v_b_SP_G_2$ ?v0)))
(let (($x251 (<= ?x250 ?x220)))
(let (($x238 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x247 (not $x238)))
(let (($x249 (and $x247 (fun_app$ v_b_Visited_G_2$ ?v0))))
(=> $x249 $x251))))))))
))
(let (($x273 (=> $x253 (and $x258 $x271))))
(let (($x275 (=> $x246 (and $x253 $x273))))
(let (($x277 (=> $x244 (and $x246 $x275))))
(let (($x240 (forall ((?v0 B_Vertex$) )(let ((?x121 (fun_app$c v_b_SP_G_1$ ?v0)))
(let ((?x220 (v_b_SP_G_2$ ?v0)))
(let (($x225 (= ?x220 ?x121)))
(let (($x238 (fun_app$ v_b_Visited_G_2$ ?v0)))
(=> $x238 $x225))))))
))
(let (($x242 (and $x240 (and true true))))
(let (($x279 (=> $x242 (and $x244 $x277))))
(let (($x281 (=> $x237 (and $x240 $x279))))
(let (($x227 (forall ((?v0 B_Vertex$) )(let ((?x121 (fun_app$c v_b_SP_G_1$ ?v0)))
(let ((?x220 (v_b_SP_G_2$ ?v0)))
(let (($x225 (= ?x220 ?x121)))
(let ((?x215 (b_G$ (pair$ v_b_v_G_1$ ?v0))))
(let ((?x204 (fun_app$c v_b_SP_G_1$ v_b_v_G_1$)))
(let ((?x217 (+ ?x204 ?x215)))
(let (($x219 (and (< ?x215 b_Infinity$) (< ?x217 ?x121))))
(=> (not $x219) $x225)))))))))
))
(let (($x223 (forall ((?v0 B_Vertex$) )(let ((?x215 (b_G$ (pair$ v_b_v_G_1$ ?v0))))
(let ((?x204 (fun_app$c v_b_SP_G_1$ v_b_v_G_1$)))
(let ((?x217 (+ ?x204 ?x215)))
(let ((?x220 (v_b_SP_G_2$ ?v0)))
(let (($x221 (= ?x220 ?x217)))
(let (($x219 (and (< ?x215 b_Infinity$) (< ?x217 (fun_app$c v_b_SP_G_1$ ?v0)))))
(=> $x219 $x221))))))))
))
(let (($x229 (and $x213 (and $x223 $x227))))
(let (($x208 (forall ((?v0 B_Vertex$) )(let ((?x121 (fun_app$c v_b_SP_G_1$ ?v0)))
(let ((?x204 (fun_app$c v_b_SP_G_1$ v_b_v_G_1$)))
(let (($x206 (<= ?x204 ?x121)))
(let (($x125 (fun_app$ v_b_Visited_G_1$ ?v0)))
(let (($x126 (not $x125)))
(=> $x126 $x206)))))))
))
(let (($x230 (and $x208 $x229)))
(let (($x231 (and (< (fun_app$c v_b_SP_G_1$ v_b_v_G_1$) b_Infinity$) $x230)))
(let (($x232 (and $x203 $x231)))
(let (($x156 (exists ((?v0 B_Vertex$) )(let ((?x121 (fun_app$c v_b_SP_G_1$ ?v0)))
(let (($x138 (< ?x121 b_Infinity$)))
(let (($x125 (fun_app$ v_b_Visited_G_1$ ?v0)))
(let (($x126 (not $x125)))
(and $x126 $x138))))))
))
(let (($x233 (and $x156 $x232)))
(let (($x234 (and true $x233)))
(let (($x235 (and true $x234)))
(let (($x283 (=> $x235 (and $x237 $x281))))
(let (($x195 (and $x193 (=> $x193 true))))
(let (($x191 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(let ((?x102 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x177 (fun_app$c v_b_SP_G_3$ ?v1)))
(let ((?x182 (+ ?x177 ?x102)))
(let ((?x180 (fun_app$c v_b_SP_G_3$ ?v0)))
(let (($x189 (<= ?x180 ?x182)))
(=> (and (< ?x177 b_Infinity$) (< ?x102 b_Infinity$)) $x189)))))))
))
(let (($x196 (=> $x191 $x195)))
(let (($x187 (forall ((?v0 B_Vertex$) )(let (($x185 (exists ((?v1 B_Vertex$) )(let ((?x102 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x177 (fun_app$c v_b_SP_G_3$ ?v1)))
(let ((?x182 (+ ?x177 ?x102)))
(let ((?x180 (fun_app$c v_b_SP_G_3$ ?v0)))
(let (($x183 (= ?x180 ?x182)))
(and (< ?x177 ?x180) $x183)))))))
))
(let ((?x177 (fun_app$c v_b_SP_G_3$ ?v0)))
(let (($x178 (< ?x177 b_Infinity$)))
(let (($x74 (= ?v0 b_Source$)))
(let (($x79 (not $x74)))
(=> (and $x79 $x178) $x185)))))))
))
(let (($x198 (=> $x187 (and $x191 $x196))))
(let (($x170 (and $x162 (and $x164 (and $x167 true)))))
(let (($x171 (and $x159 $x170)))
(let (($x172 (and true $x171)))
(let (($x173 (and true $x172)))
(let (($x174 (and (not $x156) $x173)))
(let (($x175 (and true $x174)))
(let (($x176 (and true $x175)))
(let (($x200 (=> $x176 (and $x187 $x198))))
(let (($x146 (forall ((?v0 B_Vertex$) )(let (($x144 (exists ((?v1 B_Vertex$) )(let ((?x102 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x121 (fun_app$c v_b_SP_G_1$ ?v1)))
(let ((?x134 (+ ?x121 ?x102)))
(let ((?x129 (fun_app$c v_b_SP_G_1$ ?v0)))
(let (($x141 (= ?x129 ?x134)))
(let (($x125 (fun_app$ v_b_Visited_G_1$ ?v1)))
(and (< ?x121 ?x129) (and $x125 $x141)))))))))
))
(let ((?x121 (fun_app$c v_b_SP_G_1$ ?v0)))
(let (($x138 (< ?x121 b_Infinity$)))
(let (($x74 (= ?v0 b_Source$)))
(let (($x79 (not $x74)))
(=> (and $x79 $x138) $x144)))))))
))
(let (($x147 (and $x146 true)))
(let (($x137 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(let ((?x102 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x121 (fun_app$c v_b_SP_G_1$ ?v1)))
(let ((?x134 (+ ?x121 ?x102)))
(let ((?x129 (fun_app$c v_b_SP_G_1$ ?v0)))
(let (($x135 (<= ?x129 ?x134)))
(=> (and (fun_app$ v_b_Visited_G_1$ ?v1) (< ?x102 b_Infinity$)) $x135)))))))
))
(let (($x132 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(let ((?x121 (fun_app$c v_b_SP_G_1$ ?v1)))
(let ((?x129 (fun_app$c v_b_SP_G_1$ ?v0)))
(let (($x130 (<= ?x129 ?x121)))
(let (($x127 (fun_app$ v_b_Visited_G_1$ ?v0)))
(let (($x125 (fun_app$ v_b_Visited_G_1$ ?v1)))
(let (($x126 (not $x125)))
(let (($x128 (and $x126 $x127)))
(=> $x128 $x130)))))))))
))
(let (($x149 (and $x132 (and $x137 $x147))))
(let (($x150 (and $x123 $x149)))
(let (($x151 (and $x120 $x150)))
(let (($x152 (and true $x151)))
(let (($x153 (and true $x152)))
(let (($x117 (forall ((?v0 B_Vertex$) )(let (($x115 (exists ((?v1 B_Vertex$) )(let ((?x97 (v_b_SP_G_0$ ?v0)))
(let (($x112 (= ?x97 (+ (v_b_SP_G_0$ ?v1) (b_G$ (pair$ ?v1 ?v0))))))
(let (($x83 (v_b_Visited_G_0$ ?v1)))
(and (< (v_b_SP_G_0$ ?v1) ?x97) (and $x83 $x112))))))
))
(=> (and (not (= ?v0 b_Source$)) (< (v_b_SP_G_0$ ?v0) b_Infinity$)) $x115)))
))
(let (($x154 (and $x117 $x153)))
(let (($x285 (=> $x154 (and $x200 $x283))))
(let (($x108 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(let ((?x97 (v_b_SP_G_0$ ?v0)))
(let (($x106 (<= ?x97 (+ (v_b_SP_G_0$ ?v1) (b_G$ (pair$ ?v1 ?v0))))))
(let ((?x102 (b_G$ (pair$ ?v1 ?v0))))
(let (($x103 (< ?x102 b_Infinity$)))
(let (($x83 (v_b_Visited_G_0$ ?v1)))
(=> (and $x83 $x103) $x106)))))))
))
(let (($x287 (=> $x108 (and $x117 $x285))))
(let (($x100 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(let ((?x75 (v_b_SP_G_0$ ?v1)))
(let ((?x97 (v_b_SP_G_0$ ?v0)))
(let (($x98 (<= ?x97 ?x75)))
(let (($x95 (v_b_Visited_G_0$ ?v0)))
(let (($x83 (v_b_Visited_G_0$ ?v1)))
(let (($x84 (not $x83)))
(let (($x96 (and $x84 $x95)))
(=> $x96 $x98)))))))))
))
(let (($x289 (=> $x100 (and $x108 $x287))))
(let (($x291 (=> $x94 (and $x100 $x289))))
(let (($x293 (=> $x92 (and $x94 $x291))))
(let (($x82 (forall ((?v0 B_Vertex$) )(let (($x74 (= ?v0 b_Source$)))
(let (($x79 (not $x74)))
(=> $x79 (= (v_b_SP_G_0$ ?v0) b_Infinity$)))))
))
(let (($x78 (forall ((?v0 B_Vertex$) )(let (($x74 (= ?v0 b_Source$)))
(=> $x74 (= (v_b_SP_G_0$ ?v0) 0))))
))
(let (($x88 (and $x78 (and $x82 (and $x85 true)))))
(let (($x89 (and true $x88)))
(let (($x90 (and true $x89)))
(let (($x295 (=> $x90 (and $x92 $x293))))
(let (($x296 (not $x295)))
(let (($x838 (exists ((?v1 B_Vertex$) )(let ((?x102 (b_G$ (pair$ ?v1 ?0))))
(let ((?x220 (v_b_SP_G_2$ ?v1)))
(let ((?x255 (+ ?x220 ?x102)))
(let ((?x250 (v_b_SP_G_2$ ?0)))
(let (($x262 (= ?x250 ?x255)))
(let (($x238 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x251 (<= ?x250 ?x220)))
(let (($x827 (not $x251)))
(and $x827 $x238 $x262))))))))))
))
(let (($x821 (not (<= b_Infinity$ (v_b_SP_G_2$ ?0)))))
(let (($x74 (= ?0 b_Source$)))
(let (($x79 (not $x74)))
(let (($x824 (and $x79 $x821)))
(let (($x844 (not $x824)))
(let (($x845 (or $x844 $x838)))
(let (($x265 (exists ((?v1 B_Vertex$) )(let ((?x102 (b_G$ (pair$ ?v1 ?0))))
(let ((?x220 (v_b_SP_G_2$ ?v1)))
(let ((?x255 (+ ?x220 ?x102)))
(let ((?x250 (v_b_SP_G_2$ ?0)))
(let (($x262 (= ?x250 ?x255)))
(let (($x238 (fun_app$ v_b_Visited_G_2$ ?v1)))
(and (< ?x220 ?x250) (and $x238 $x262)))))))))
))
(let (($x266 (=> (and $x79 (< (v_b_SP_G_2$ ?0) b_Infinity$)) $x265)))
(let ((?x102 (b_G$ (pair$ ?0 ?1))))
(let ((?x220 (v_b_SP_G_2$ ?0)))
(let ((?x255 (+ ?x220 ?x102)))
(let ((?x250 (v_b_SP_G_2$ ?1)))
(let (($x262 (= ?x250 ?x255)))
(let (($x238 (fun_app$ v_b_Visited_G_2$ ?0)))
(let (($x251 (<= ?x250 ?x220)))
(let (($x827 (not $x251)))
(let (($x833 (and $x827 $x238 $x262)))
(let (($x264 (and (< ?x220 ?x250) (and $x238 $x262))))
(let ((@x832 (monotonicity (rewrite (= (< ?x220 ?x250) $x827)) (= $x264 (and $x827 (and $x238 $x262))))))
(let ((@x837 (trans @x832 (rewrite (= (and $x827 (and $x238 $x262)) $x833)) (= $x264 $x833))))
(let ((@x826 (monotonicity (rewrite (= (< ?x220 b_Infinity$) $x821)) (= (and $x79 (< ?x220 b_Infinity$)) $x824))))
(let ((@x843 (monotonicity @x826 (quant-intro @x837 (= $x265 $x838)) (= $x266 (=> $x824 $x838)))))
(let ((@x852 (quant-intro (trans @x843 (rewrite (= (=> $x824 $x838) $x845)) (= $x266 $x845)) (= $x267 $x850))))
(let ((@x859 (trans (monotonicity @x852 (= $x268 (and $x850 false))) (rewrite (= (and $x850 false) false)) (= $x268 false))))
(let ((@x866 (trans (monotonicity @x859 (= $x269 (=> false true))) (rewrite (= (=> false true) true)) (= $x269 true))))
(let ((@x873 (trans (monotonicity @x852 @x866 (= $x270 (and $x850 true))) (rewrite (= (and $x850 true) $x850)) (= $x270 $x850))))
(let (($x256 (<= ?x250 ?x255)))
(let (($x378 (not (<= b_Infinity$ ?x102))))
(let (($x805 (and $x238 $x378)))
(let (($x811 (not $x805)))
(let (($x812 (or $x811 $x256)))
(let (($x257 (=> (and $x238 (< ?x102 b_Infinity$)) $x256)))
(let ((@x380 (rewrite (= (< ?x102 b_Infinity$) $x378))))
(let ((@x810 (monotonicity (monotonicity @x380 (= (and $x238 (< ?x102 b_Infinity$)) $x805)) (= $x257 (=> $x805 $x256)))))
(let ((@x819 (quant-intro (trans @x810 (rewrite (= (=> $x805 $x256) $x812)) (= $x257 $x812)) (= $x258 $x817))))
(let ((@x882 (trans (monotonicity @x819 @x873 (= $x271 (=> $x817 $x850))) (rewrite (= (=> $x817 $x850) $x878)) (= $x271 $x878))))
(let (($x247 (not $x238)))
(let (($x249 (and $x247 (fun_app$ v_b_Visited_G_2$ ?1))))
(let (($x798 (not $x249)))
(let (($x799 (or $x798 $x251)))
(let ((@x888 (monotonicity (quant-intro (rewrite (= (=> $x249 $x251) $x799)) (= $x253 $x802)) (monotonicity @x819 @x882 (= (and $x258 $x271) $x883)) (= $x273 (=> $x802 $x883)))))
(let ((@x897 (monotonicity (quant-intro (rewrite (= (=> $x249 $x251) $x799)) (= $x253 $x802)) (trans @x888 (rewrite (= (=> $x802 $x883) $x890)) (= $x273 $x890)) (= (and $x253 $x273) $x895))))
(let ((@x906 (trans (monotonicity @x897 (= $x275 (=> $x246 $x895))) (rewrite (= (=> $x246 $x895) $x902)) (= $x275 $x902))))
(let ((@x912 (monotonicity (monotonicity @x906 (= (and $x246 $x275) $x907)) (= $x277 (=> $x244 $x907)))))
(let ((@x921 (monotonicity (trans @x912 (rewrite (= (=> $x244 $x907) $x914)) (= $x277 $x914)) (= (and $x244 $x277) $x919))))
(let ((?x121 (fun_app$c v_b_SP_G_1$ ?0)))
(let (($x225 (= ?x220 ?x121)))
(let (($x783 (or $x247 $x225)))
(let ((@x793 (monotonicity (quant-intro (rewrite (= (=> $x238 $x225) $x783)) (= $x240 $x786)) (rewrite (= (and true true) true)) (= $x242 (and $x786 true)))))
(let ((@x924 (monotonicity (trans @x793 (rewrite (= (and $x786 true) $x786)) (= $x242 $x786)) @x921 (= $x279 (=> $x786 $x919)))))
(let ((@x933 (monotonicity (quant-intro (rewrite (= (=> $x238 $x225) $x783)) (= $x240 $x786)) (trans @x924 (rewrite (= (=> $x786 $x919) $x926)) (= $x279 $x926)) (= (and $x240 $x279) $x931))))
(let ((@x942 (trans (monotonicity @x933 (= $x281 (=> $x237 $x931))) (rewrite (= (=> $x237 $x931) $x938)) (= $x281 $x938))))
(let (($x759 (and $x203 $x684 $x690 $x213 $x713 $x726)))
(let (($x751 (and $x684 $x690 $x213 $x713 $x726)))
(let ((@x745 (rewrite (= (and $x690 (and $x213 $x713 $x726)) (and $x690 $x213 $x713 $x726)))))
(let ((?x215 (b_G$ (pair$ v_b_v_G_1$ ?0))))
(let ((?x204 (fun_app$c v_b_SP_G_1$ v_b_v_G_1$)))
(let ((?x217 (+ ?x204 ?x215)))
(let (($x698 (not (<= ?x121 ?x217))))
(let (($x694 (not (<= b_Infinity$ ?x215))))
(let (($x701 (and $x694 $x698)))
(let (($x721 (or $x701 $x225)))
(let (($x226 (=> (not (and (< ?x215 b_Infinity$) (< ?x217 ?x121))) $x225)))
(let ((@x703 (monotonicity (rewrite (= (< ?x215 b_Infinity$) $x694)) (rewrite (= (< ?x217 ?x121) $x698)) (= (and (< ?x215 b_Infinity$) (< ?x217 ?x121)) $x701))))
(let ((@x717 (monotonicity @x703 (= (not (and (< ?x215 b_Infinity$) (< ?x217 ?x121))) (not $x701)))))
(let ((@x725 (trans (monotonicity @x717 (= $x226 (=> (not $x701) $x225))) (rewrite (= (=> (not $x701) $x225) $x721)) (= $x226 $x721))))
(let (($x221 (= ?x220 ?x217)))
(let (($x707 (not $x701)))
(let (($x708 (or $x707 $x221)))
(let (($x219 (and (< ?x215 b_Infinity$) (< ?x217 ?x121))))
(let (($x222 (=> $x219 $x221)))
(let ((@x712 (trans (monotonicity @x703 (= $x222 (=> $x701 $x221))) (rewrite (= (=> $x701 $x221) $x708)) (= $x222 $x708))))
(let ((@x731 (monotonicity (quant-intro @x712 (= $x223 $x713)) (quant-intro @x725 (= $x227 $x726)) (= (and $x223 $x227) (and $x713 $x726)))))
(let ((@x739 (trans (monotonicity @x731 (= $x229 (and $x213 (and $x713 $x726)))) (rewrite (= (and $x213 (and $x713 $x726)) (and $x213 $x713 $x726))) (= $x229 (and $x213 $x713 $x726)))))
(let (($x206 (<= ?x204 ?x121)))
(let (($x125 (fun_app$ v_b_Visited_G_1$ ?0)))
(let (($x687 (or $x125 $x206)))
(let ((@x692 (quant-intro (rewrite (= (=> (not $x125) $x206) $x687)) (= $x208 $x690))))
(let ((@x747 (trans (monotonicity @x692 @x739 (= $x230 (and $x690 (and $x213 $x713 $x726)))) @x745 (= $x230 (and $x690 $x213 $x713 $x726)))))
(let ((@x750 (monotonicity (rewrite (= (< ?x204 b_Infinity$) $x684)) @x747 (= $x231 (and $x684 (and $x690 $x213 $x713 $x726))))))
(let ((@x755 (trans @x750 (rewrite (= (and $x684 (and $x690 $x213 $x713 $x726)) $x751)) (= $x231 $x751))))
(let ((@x763 (trans (monotonicity @x755 (= $x232 (and $x203 $x751))) (rewrite (= (and $x203 $x751) $x759)) (= $x232 $x759))))
(let (($x452 (not (<= b_Infinity$ ?x121))))
(let (($x126 (not $x125)))
(let (($x537 (and $x126 $x452)))
(let ((@x539 (monotonicity (rewrite (= (< ?x121 b_Infinity$) $x452)) (= (and $x126 (< ?x121 b_Infinity$)) $x537))))
(let ((@x766 (monotonicity (quant-intro @x539 (= $x156 $x540)) @x763 (= $x233 (and $x540 $x759)))))
(let ((@x774 (monotonicity (trans @x766 (rewrite (= (and $x540 $x759) $x767)) (= $x233 $x767)) (= $x234 (and true $x767)))))
(let ((@x780 (monotonicity (trans @x774 (rewrite (= (and true $x767) $x767)) (= $x234 $x767)) (= $x235 (and true $x767)))))
(let ((@x948 (monotonicity (trans @x780 (rewrite (= (and true $x767) $x767)) (= $x235 $x767)) (monotonicity @x942 (= (and $x237 $x281) $x943)) (= $x283 (=> $x767 $x943)))))
(let ((@x645 (monotonicity (rewrite (= (=> $x193 true) true)) (= $x195 (and $x193 true)))))
(let ((?x177 (fun_app$c v_b_SP_G_3$ ?0)))
(let ((?x182 (+ ?x177 ?x102)))
(let ((?x180 (fun_app$c v_b_SP_G_3$ ?1)))
(let (($x189 (<= ?x180 ?x182)))
(let (($x598 (not (<= b_Infinity$ ?x177))))
(let (($x626 (and $x598 $x378)))
(let (($x632 (not $x626)))
(let (($x633 (or $x632 $x189)))
(let (($x190 (=> (and (< ?x177 b_Infinity$) (< ?x102 b_Infinity$)) $x189)))
(let ((@x628 (monotonicity (rewrite (= (< ?x177 b_Infinity$) $x598)) @x380 (= (and (< ?x177 b_Infinity$) (< ?x102 b_Infinity$)) $x626))))
(let ((@x637 (trans (monotonicity @x628 (= $x190 (=> $x626 $x189))) (rewrite (= (=> $x626 $x189) $x633)) (= $x190 $x633))))
(let ((@x652 (monotonicity (quant-intro @x637 (= $x191 $x638)) (trans @x645 (rewrite (= (and $x193 true) $x193)) (= $x195 $x193)) (= $x196 (=> $x638 $x193)))))
(let ((@x661 (monotonicity (quant-intro @x637 (= $x191 $x638)) (trans @x652 (rewrite (= (=> $x638 $x193) $x654)) (= $x196 $x654)) (= (and $x191 $x196) $x659))))
(let (($x611 (exists ((?v1 B_Vertex$) )(let ((?x102 (b_G$ (pair$ ?v1 ?0))))
(let ((?x177 (fun_app$c v_b_SP_G_3$ ?v1)))
(let ((?x182 (+ ?x177 ?x102)))
(let ((?x180 (fun_app$c v_b_SP_G_3$ ?0)))
(let (($x183 (= ?x180 ?x182)))
(let (($x605 (not (<= ?x180 ?x177))))
(and $x605 $x183))))))))
))
(let (($x601 (and $x79 $x598)))
(let (($x617 (not $x601)))
(let (($x618 (or $x617 $x611)))
(let (($x185 (exists ((?v1 B_Vertex$) )(let ((?x102 (b_G$ (pair$ ?v1 ?0))))
(let ((?x177 (fun_app$c v_b_SP_G_3$ ?v1)))
(let ((?x182 (+ ?x177 ?x102)))
(let ((?x180 (fun_app$c v_b_SP_G_3$ ?0)))
(let (($x183 (= ?x180 ?x182)))
(and (< ?x177 ?x180) $x183)))))))
))
(let (($x186 (=> (and $x79 (< ?x177 b_Infinity$)) $x185)))
(let (($x183 (= ?x180 ?x182)))
(let (($x605 (not (<= ?x180 ?x177))))
(let (($x608 (and $x605 $x183)))
(let ((@x610 (monotonicity (rewrite (= (< ?x177 ?x180) $x605)) (= (and (< ?x177 ?x180) $x183) $x608))))
(let ((@x603 (monotonicity (rewrite (= (< ?x177 b_Infinity$) $x598)) (= (and $x79 (< ?x177 b_Infinity$)) $x601))))
(let ((@x616 (monotonicity @x603 (quant-intro @x610 (= $x185 $x611)) (= $x186 (=> $x601 $x611)))))
(let ((@x625 (quant-intro (trans @x616 (rewrite (= (=> $x601 $x611) $x618)) (= $x186 $x618)) (= $x187 $x623))))
(let ((@x670 (trans (monotonicity @x625 @x661 (= $x198 (=> $x623 $x659))) (rewrite (= (=> $x623 $x659) $x666)) (= $x198 $x666))))
(let (($x562 (and $x159 $x162 $x164 $x167)))
(let (($x567 (and true $x562)))
(let ((@x550 (monotonicity (rewrite (= (and $x167 true) $x167)) (= (and $x164 (and $x167 true)) (and $x164 $x167)))))
(let ((@x558 (trans (monotonicity @x550 (= $x170 (and $x162 (and $x164 $x167)))) (rewrite (= (and $x162 (and $x164 $x167)) (and $x162 $x164 $x167))) (= $x170 (and $x162 $x164 $x167)))))
(let ((@x566 (trans (monotonicity @x558 (= $x171 (and $x159 (and $x162 $x164 $x167)))) (rewrite (= (and $x159 (and $x162 $x164 $x167)) $x562)) (= $x171 $x562))))
(let ((@x573 (trans (monotonicity @x566 (= $x172 $x567)) (rewrite (= $x567 $x562)) (= $x172 $x562))))
(let ((@x577 (trans (monotonicity @x573 (= $x173 $x567)) (rewrite (= $x567 $x562)) (= $x173 $x562))))
(let ((@x545 (monotonicity (quant-intro @x539 (= $x156 $x540)) (= (not $x156) $x543))))
(let ((@x585 (trans (monotonicity @x545 @x577 (= $x174 (and $x543 $x562))) (rewrite (= (and $x543 $x562) $x581)) (= $x174 $x581))))
(let ((@x592 (trans (monotonicity @x585 (= $x175 (and true $x581))) (rewrite (= (and true $x581) $x581)) (= $x175 $x581))))
(let ((@x596 (trans (monotonicity @x592 (= $x176 (and true $x581))) (rewrite (= (and true $x581) $x581)) (= $x176 $x581))))
(let ((@x676 (monotonicity @x596 (monotonicity @x625 @x670 (= (and $x187 $x198) $x671)) (= $x200 (=> $x581 $x671)))))
(let ((@x957 (monotonicity (trans @x676 (rewrite (= (=> $x581 $x671) $x678)) (= $x200 $x678)) (trans @x948 (rewrite (= (=> $x767 $x943) $x950)) (= $x283 $x950)) (= (and $x200 $x283) $x955))))
(let (($x513 (and $x120 $x123 $x433 $x448 $x481)))
(let (($x518 (and true $x513)))
(let ((@x507 (rewrite (= (and $x123 (and $x433 $x448 $x481)) (and $x123 $x433 $x448 $x481)))))
(let (($x469 (exists ((?v1 B_Vertex$) )(let ((?x102 (b_G$ (pair$ ?v1 ?0))))
(let ((?x121 (fun_app$c v_b_SP_G_1$ ?v1)))
(let ((?x134 (+ ?x121 ?x102)))
(let ((?x129 (fun_app$c v_b_SP_G_1$ ?0)))
(let (($x141 (= ?x129 ?x134)))
(let (($x125 (fun_app$ v_b_Visited_G_1$ ?v1)))
(let (($x130 (<= ?x129 ?x121)))
(let (($x458 (not $x130)))
(and $x458 $x125 $x141))))))))))
))
(let (($x455 (and $x79 $x452)))
(let (($x475 (not $x455)))
(let (($x476 (or $x475 $x469)))
(let (($x144 (exists ((?v1 B_Vertex$) )(let ((?x102 (b_G$ (pair$ ?v1 ?0))))
(let ((?x121 (fun_app$c v_b_SP_G_1$ ?v1)))
(let ((?x134 (+ ?x121 ?x102)))
(let ((?x129 (fun_app$c v_b_SP_G_1$ ?0)))
(let (($x141 (= ?x129 ?x134)))
(let (($x125 (fun_app$ v_b_Visited_G_1$ ?v1)))
(and (< ?x121 ?x129) (and $x125 $x141)))))))))
))
(let (($x145 (=> (and $x79 (< ?x121 b_Infinity$)) $x144)))
(let ((?x134 (+ ?x121 ?x102)))
(let ((?x129 (fun_app$c v_b_SP_G_1$ ?1)))
(let (($x141 (= ?x129 ?x134)))
(let (($x130 (<= ?x129 ?x121)))
(let (($x458 (not $x130)))
(let (($x464 (and $x458 $x125 $x141)))
(let (($x143 (and (< ?x121 ?x129) (and $x125 $x141))))
(let ((@x463 (monotonicity (rewrite (= (< ?x121 ?x129) $x458)) (= $x143 (and $x458 (and $x125 $x141))))))
(let ((@x468 (trans @x463 (rewrite (= (and $x458 (and $x125 $x141)) $x464)) (= $x143 $x464))))
(let ((@x457 (monotonicity (rewrite (= (< ?x121 b_Infinity$) $x452)) (= (and $x79 (< ?x121 b_Infinity$)) $x455))))
(let ((@x474 (monotonicity @x457 (quant-intro @x468 (= $x144 $x469)) (= $x145 (=> $x455 $x469)))))
(let ((@x483 (quant-intro (trans @x474 (rewrite (= (=> $x455 $x469) $x476)) (= $x145 $x476)) (= $x146 $x481))))
(let ((@x490 (trans (monotonicity @x483 (= $x147 (and $x481 true))) (rewrite (= (and $x481 true) $x481)) (= $x147 $x481))))
(let (($x135 (<= ?x129 ?x134)))
(let (($x436 (and $x125 $x378)))
(let (($x442 (not $x436)))
(let (($x443 (or $x442 $x135)))
(let (($x136 (=> (and $x125 (< ?x102 b_Infinity$)) $x135)))
(let ((@x441 (monotonicity (monotonicity @x380 (= (and $x125 (< ?x102 b_Infinity$)) $x436)) (= $x136 (=> $x436 $x135)))))
(let ((@x450 (quant-intro (trans @x441 (rewrite (= (=> $x436 $x135) $x443)) (= $x136 $x443)) (= $x137 $x448))))
(let (($x127 (fun_app$ v_b_Visited_G_1$ ?1)))
(let (($x128 (and $x126 $x127)))
(let (($x429 (not $x128)))
(let (($x430 (or $x429 $x130)))
(let ((@x496 (monotonicity (quant-intro (rewrite (= (=> $x128 $x130) $x430)) (= $x132 $x433)) (monotonicity @x450 @x490 (= (and $x137 $x147) (and $x448 $x481))) (= $x149 (and $x433 (and $x448 $x481))))))
(let ((@x501 (trans @x496 (rewrite (= (and $x433 (and $x448 $x481)) (and $x433 $x448 $x481))) (= $x149 (and $x433 $x448 $x481)))))
(let ((@x509 (trans (monotonicity @x501 (= $x150 (and $x123 (and $x433 $x448 $x481)))) @x507 (= $x150 (and $x123 $x433 $x448 $x481)))))
(let ((@x517 (trans (monotonicity @x509 (= $x151 (and $x120 (and $x123 $x433 $x448 $x481)))) (rewrite (= (and $x120 (and $x123 $x433 $x448 $x481)) $x513)) (= $x151 $x513))))
(let ((@x524 (trans (monotonicity @x517 (= $x152 $x518)) (rewrite (= $x518 $x513)) (= $x152 $x513))))
(let ((@x528 (trans (monotonicity @x524 (= $x153 $x518)) (rewrite (= $x518 $x513)) (= $x153 $x513))))
(let (($x414 (exists ((?v1 B_Vertex$) )(let ((?x97 (v_b_SP_G_0$ ?0)))
(let (($x112 (= ?x97 (+ (v_b_SP_G_0$ ?v1) (b_G$ (pair$ ?v1 ?0))))))
(let (($x83 (v_b_Visited_G_0$ ?v1)))
(let ((?x75 (v_b_SP_G_0$ ?v1)))
(let (($x98 (<= ?x97 ?x75)))
(let (($x403 (not $x98)))
(and $x403 $x83 $x112))))))))
))
(let (($x421 (or (not (and $x79 (not (<= b_Infinity$ (v_b_SP_G_0$ ?0))))) $x414)))
(let (($x115 (exists ((?v1 B_Vertex$) )(let ((?x97 (v_b_SP_G_0$ ?0)))
(let (($x112 (= ?x97 (+ (v_b_SP_G_0$ ?v1) (b_G$ (pair$ ?v1 ?0))))))
(let (($x83 (v_b_Visited_G_0$ ?v1)))
(and (< (v_b_SP_G_0$ ?v1) ?x97) (and $x83 $x112))))))
))
(let (($x116 (=> (and $x79 (< (v_b_SP_G_0$ ?0) b_Infinity$)) $x115)))
(let (($x422 (= (=> (and $x79 (not (<= b_Infinity$ (v_b_SP_G_0$ ?0)))) $x414) $x421)))
(let (($x418 (= $x116 (=> (and $x79 (not (<= b_Infinity$ (v_b_SP_G_0$ ?0)))) $x414))))
(let ((?x97 (v_b_SP_G_0$ ?1)))
(let (($x112 (= ?x97 (+ (v_b_SP_G_0$ ?0) ?x102))))
(let (($x83 (v_b_Visited_G_0$ ?0)))
(let ((?x75 (v_b_SP_G_0$ ?0)))
(let (($x98 (<= ?x97 ?x75)))
(let (($x403 (not $x98)))
(let (($x409 (and $x403 $x83 $x112)))
(let (($x114 (and (< ?x75 ?x97) (and $x83 $x112))))
(let ((@x408 (monotonicity (rewrite (= (< ?x75 ?x97) $x403)) (= $x114 (and $x403 (and $x83 $x112))))))
(let ((@x413 (trans @x408 (rewrite (= (and $x403 (and $x83 $x112)) $x409)) (= $x114 $x409))))
(let (($x397 (not (<= b_Infinity$ ?x75))))
(let (($x400 (and $x79 $x397)))
(let ((@x402 (monotonicity (rewrite (= (< ?x75 b_Infinity$) $x397)) (= (and $x79 (< ?x75 b_Infinity$)) $x400))))
(let ((@x425 (trans (monotonicity @x402 (quant-intro @x413 (= $x115 $x414)) $x418) (rewrite $x422) (= $x116 $x421))))
(let ((@x531 (monotonicity (quant-intro @x425 (= $x117 $x426)) @x528 (= $x154 (and $x426 $x513)))))
(let ((@x960 (monotonicity (trans @x531 (rewrite (= (and $x426 $x513) $x532)) (= $x154 $x532)) @x957 (= $x285 (=> $x532 $x955)))))
(let ((@x969 (monotonicity (quant-intro @x425 (= $x117 $x426)) (trans @x960 (rewrite (= (=> $x532 $x955) $x962)) (= $x285 $x962)) (= (and $x117 $x285) $x967))))
(let (($x106 (<= ?x97 (+ ?x75 ?x102))))
(let (($x388 (or (not (and $x83 $x378)) $x106)))
(let (($x107 (=> (and $x83 (< ?x102 b_Infinity$)) $x106)))
(let ((@x383 (monotonicity @x380 (= (and $x83 (< ?x102 b_Infinity$)) (and $x83 $x378)))))
(let ((@x392 (trans (monotonicity @x383 (= $x107 (=> (and $x83 $x378) $x106))) (rewrite (= (=> (and $x83 $x378) $x106) $x388)) (= $x107 $x388))))
(let ((@x972 (monotonicity (quant-intro @x392 (= $x108 $x393)) @x969 (= $x287 (=> $x393 $x967)))))
(let ((@x981 (monotonicity (quant-intro @x392 (= $x108 $x393)) (trans @x972 (rewrite (= (=> $x393 $x967) $x974)) (= $x287 $x974)) (= (and $x108 $x287) $x979))))
(let (($x95 (v_b_Visited_G_0$ ?1)))
(let (($x84 (not $x83)))
(let (($x96 (and $x84 $x95)))
(let (($x370 (not $x96)))
(let (($x371 (or $x370 $x98)))
(let ((@x984 (monotonicity (quant-intro (rewrite (= (=> $x96 $x98) $x371)) (= $x100 $x374)) @x981 (= $x289 (=> $x374 $x979)))))
(let ((@x993 (monotonicity (quant-intro (rewrite (= (=> $x96 $x98) $x371)) (= $x100 $x374)) (trans @x984 (rewrite (= (=> $x374 $x979) $x986)) (= $x289 $x986)) (= (and $x100 $x289) $x991))))
(let ((@x1002 (trans (monotonicity @x993 (= $x291 (=> $x94 $x991))) (rewrite (= (=> $x94 $x991) $x998)) (= $x291 $x998))))
(let ((@x1008 (monotonicity (monotonicity @x1002 (= (and $x94 $x291) $x1003)) (= $x293 (=> $x92 $x1003)))))
(let ((@x1017 (monotonicity (trans @x1008 (rewrite (= (=> $x92 $x1003) $x1010)) (= $x293 $x1010)) (= (and $x92 $x293) $x1015))))
(let (($x340 (or $x74 (= ?x75 b_Infinity$))))
(let ((@x345 (quant-intro (rewrite (= (=> $x79 (= ?x75 b_Infinity$)) $x340)) (= $x82 $x343))))
(let ((@x350 (monotonicity @x345 (rewrite (= (and $x85 true) $x85)) (= (and $x82 (and $x85 true)) (and $x343 $x85)))))
(let ((@x339 (quant-intro (rewrite (= (=> $x74 (= ?x75 0)) (or $x79 (= ?x75 0)))) (= $x78 $x337))))
(let ((@x358 (trans (monotonicity @x339 @x350 (= $x88 (and $x337 (and $x343 $x85)))) (rewrite (= (and $x337 (and $x343 $x85)) $x354)) (= $x88 $x354))))
(let ((@x365 (trans (monotonicity @x358 (= $x89 (and true $x354))) (rewrite (= (and true $x354) $x354)) (= $x89 $x354))))
(let ((@x369 (trans (monotonicity @x365 (= $x90 (and true $x354))) (rewrite (= (and true $x354) $x354)) (= $x90 $x354))))
(let ((@x1026 (trans (monotonicity @x369 @x1017 (= $x295 (=> $x354 $x1015))) (rewrite (= (=> $x354 $x1015) $x1022)) (= $x295 $x1022))))
(let ((@x1030 (mp (asserted $x296) (monotonicity @x1026 (= $x296 (not $x1022))) (not $x1022))))
(let ((@x1031 (not-or-elim @x1030 $x354)))
(let ((@x1780 (mp~ (mp (and-elim @x1031 $x85) (rewrite* (= $x85 $x85)) $x85) @x1779 $x85)))
(let ((@x4210 (unit-resolution ((_ quant-inst ?v1!3) (or (not $x3748) $x2668)) (mp @x1780 @x3752 $x3748) (hypothesis $x1821) false)))
(let (($x2688 (not $x2683)))
(let (($x4075 (or $x2688 $x4072)))
(let (($x4078 (not $x4075)))
(let (($x3763 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(!(let (($x1288 (>= (+ (v_b_SP_G_0$ ?v1) (* (- 1) (v_b_SP_G_0$ ?v0))) 0)))
(let (($x83 (v_b_Visited_G_0$ ?v1)))
(or $x83 (not (v_b_Visited_G_0$ ?v0)) $x1288))) :pattern ( (v_b_Visited_G_0$ ?v1) (v_b_Visited_G_0$ ?v0) )))
))
(let (($x4081 (or (not $x3763) $x4078)))
(let (($x4084 (not $x4081)))
(let (($x1807 (>= (+ (v_b_SP_G_0$ ?v1!1) (* (- 1) (v_b_SP_G_0$ ?v0!2))) 0)))
(let (($x1800 (v_b_Visited_G_0$ ?v0!2)))
(let (($x2622 (not $x1800)))
(let (($x1798 (v_b_Visited_G_0$ ?v1!1)))
(let (($x2637 (or $x1798 $x2622 $x1807)))
(let (($x2642 (not $x2637)))
(let (($x4087 (or $x2642 $x4084)))
(let (($x4090 (not $x4087)))
(let (($x3754 (forall ((?v0 B_Vertex$) )(!(let ((?x75 (v_b_SP_G_0$ ?v0)))
(>= ?x75 0)) :pattern ( (v_b_SP_G_0$ ?v0) )))
))
(let (($x4093 (or (not $x3754) $x4090)))
(let (($x4096 (not $x4093)))
(let ((?x1784 (v_b_SP_G_0$ ?v0!0)))
(let (($x1785 (>= ?x1784 0)))
(let (($x307 (not (<= b_Infinity$ 0))))
(let ((@x310 (mp (asserted (< 0 b_Infinity$)) (rewrite (= (< 0 b_Infinity$) $x307)) $x307)))
(let (($x3424 (= b_Infinity$ ?x1784)))
(let ((@x3416 (symm (commutativity (= $x3424 (= ?x1784 b_Infinity$))) (= (= ?x1784 b_Infinity$) $x3424))))
(let (($x3481 (= ?x1784 b_Infinity$)))
(let (($x5544 (= ?v0!0 b_Source$)))
(let (($x5542 (not $x5544)))
(let ((@x3411 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not (= ?x1784 0)) $x1785)) (hypothesis (not $x1785)) (not (= ?x1784 0)))))
(let (($x3735 (forall ((?v0 B_Vertex$) )(!(let (($x74 (= ?v0 b_Source$)))
(let (($x79 (not $x74)))
(or $x79 (= (v_b_SP_G_0$ ?v0) 0)))) :pattern ( (v_b_SP_G_0$ ?v0) )))
))
(let ((@x3739 (quant-intro (refl (= (or $x79 (= ?x75 0)) (or $x79 (= ?x75 0)))) (= $x337 $x3735))))
(let ((@x1769 (nnf-pos (refl (~ (or $x79 (= ?x75 0)) (or $x79 (= ?x75 0)))) (~ $x337 $x337))))
(let ((@x1770 (mp~ (mp (and-elim @x1031 $x337) (rewrite* (= $x337 $x337)) $x337) @x1769 $x337)))
(let (($x3446 (= (or (not $x3735) (or $x5542 (= ?x1784 0))) (or (not $x3735) $x5542 (= ?x1784 0)))))
(let ((@x3448 (mp ((_ quant-inst ?v0!0) (or (not $x3735) (or $x5542 (= ?x1784 0)))) (rewrite $x3446) (or (not $x3735) $x5542 (= ?x1784 0)))))
(let (($x3741 (forall ((?v0 B_Vertex$) )(!(let (($x74 (= ?v0 b_Source$)))
(or $x74 (= (v_b_SP_G_0$ ?v0) b_Infinity$))) :pattern ( (v_b_SP_G_0$ ?v0) )))
))
(let ((@x1775 (mp~ (mp (and-elim @x1031 $x343) (rewrite* (= $x343 $x343)) $x343) (nnf-pos (refl (~ $x340 $x340)) (~ $x343 $x343)) $x343)))
(let ((@x3440 (rewrite (= (or (not $x3741) (or $x5544 $x3481)) (or (not $x3741) $x5544 $x3481)))))
(let ((@x3430 (mp ((_ quant-inst ?v0!0) (or (not $x3741) (or $x5544 $x3481))) @x3440 (or (not $x3741) $x5544 $x3481))))
(let ((@x3417 (unit-resolution @x3430 (mp @x1775 (quant-intro (refl (= $x340 $x340)) (= $x343 $x3741)) $x3741) (unit-resolution @x3448 (mp @x1770 @x3739 $x3735) @x3411 $x5542) $x3481)))
(let ((@x3399 ((_ th-lemma arith triangle-eq) (or (not $x3424) (<= (+ b_Infinity$ (* (- 1) ?x1784)) 0)))))
(let ((@x3400 (unit-resolution @x3399 (mp @x3417 @x3416 $x3424) (<= (+ b_Infinity$ (* (- 1) ?x1784)) 0))))
(let ((@x3331 (unit-resolution ((_ th-lemma arith farkas 1 1) (or (<= ?x1784 0) $x1785)) (hypothesis (not $x1785)) (<= ?x1784 0))))
(let ((@x3301 ((_ th-lemma arith farkas 1 -1 1) @x3331 @x3400 (mp @x310 (rewrite* (= $x307 $x307)) $x307) false)))
(let (($x3437 (not $x3735)))
(let (($x3312 (or $x3437 $x92)))
(let ((@x3294 (monotonicity (rewrite (= (= b_Source$ b_Source$) true)) (= (not (= b_Source$ b_Source$)) (not true)))))
(let ((@x3309 (trans @x3294 (rewrite (= (not true) false)) (= (not (= b_Source$ b_Source$)) false))))
(let ((@x3315 (monotonicity @x3309 (= (or (not (= b_Source$ b_Source$)) $x92) (or false $x92)))))
(let ((@x3319 (trans @x3315 (rewrite (= (or false $x92) $x92)) (= (or (not (= b_Source$ b_Source$)) $x92) $x92))))
(let ((@x3291 (monotonicity @x3319 (= (or $x3437 (or (not (= b_Source$ b_Source$)) $x92)) $x3312))))
(let ((@x3299 (trans @x3291 (rewrite (= $x3312 $x3312)) (= (or $x3437 (or (not (= b_Source$ b_Source$)) $x92)) $x3312))))
(let ((@x3300 (mp ((_ quant-inst b_Source$) (or $x3437 (or (not (= b_Source$ b_Source$)) $x92))) @x3299 $x3312)))
(let ((@x4116 (lemma (unit-resolution @x3300 (mp @x1770 @x3739 $x3735) (hypothesis $x1009) false) $x92)))
(let (($x3122 (forall ((?v1 B_Vertex$) )(let ((?x2217 (v_b_SP_G_2$ ?v0!20)))
(let ((?x2218 (* (- 1) ?x2217)))
(let ((?x220 (v_b_SP_G_2$ ?v1)))
(let (($x2528 (= (+ ?x220 ?x2218 (b_G$ (pair$ ?v1 ?v0!20))) 0)))
(let (($x238 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x247 (not $x238)))
(or (>= (+ ?x220 ?x2218) 0) $x247 (not $x2528)))))))))
))
(let (($x3107 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(let ((?x220 (v_b_SP_G_2$ ?v1)))
(let ((?x102 (b_G$ (pair$ ?v1 ?v0))))
(let (($x1621 (>= (+ ?x102 ?x220 (* (- 1) (v_b_SP_G_2$ ?v0))) 0)))
(let (($x1303 (<= (+ b_Infinity$ (* (- 1) ?x102)) 0)))
(let (($x238 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x247 (not $x238)))
(or $x247 $x1303 $x1621))))))))
))
(let (($x3131 (not (or (not $x3107) $x2215 $x2220 (not $x3122)))))
(let (($x3136 (or $x3085 $x3131)))
(let (($x3062 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(let (($x1601 (>= (+ (v_b_SP_G_2$ ?v1) (* (- 1) (v_b_SP_G_2$ ?v0))) 0)))
(let (($x238 (fun_app$ v_b_Visited_G_2$ ?v1)))
(or $x238 (not (fun_app$ v_b_Visited_G_2$ ?v0)) $x1601))))
))
(let (($x3145 (not (or (not $x3062) (not $x3136)))))
(let (($x3150 (or $x3039 $x3145)))
(let (($x1595 (forall ((?v0 B_Vertex$) )(let ((?x220 (v_b_SP_G_2$ ?v0)))
(>= ?x220 0)))
))
(let (($x1598 (not $x1595)))
(let (($x3158 (not (or $x1598 (not $x3150)))))
(let (($x3163 (or $x913 $x2154 $x3158)))
(let (($x3171 (not (or $x925 (not $x3163)))))
(let (($x3176 (or $x2139 $x3171)))
(let (($x1586 (forall ((?v0 B_Vertex$) )(>= (+ (fun_app$c v_b_SP_G_1$ ?v0) (* (- 1) (v_b_SP_G_2$ ?v0))) 0))
))
(let (($x1589 (not $x1586)))
(let (($x3184 (not (or $x1589 (not $x3176)))))
(let (($x3189 (or $x2122 $x3184)))
(let (($x3016 (forall ((?v0 B_Vertex$) )(let ((?x121 (fun_app$c v_b_SP_G_1$ ?v0)))
(let ((?x220 (v_b_SP_G_2$ ?v0)))
(let (($x225 (= ?x220 ?x121)))
(let ((?x204 (fun_app$c v_b_SP_G_1$ v_b_v_G_1$)))
(let ((?x1520 (* (- 1) ?x204)))
(let (($x1547 (<= (+ ?x121 ?x1520 (* (- 1) (b_G$ (pair$ v_b_v_G_1$ ?v0)))) 0)))
(let (($x1540 (<= (+ b_Infinity$ (* (- 1) (b_G$ (pair$ v_b_v_G_1$ ?v0)))) 0)))
(let (($x2991 (or $x1540 $x1547)))
(let (($x2992 (not $x2991)))
(or $x2992 $x225)))))))))))
))
(let (($x3010 (forall ((?v0 B_Vertex$) )(let ((?x220 (v_b_SP_G_2$ ?v0)))
(let ((?x1560 (* (- 1) ?x220)))
(let ((?x215 (b_G$ (pair$ v_b_v_G_1$ ?v0))))
(let ((?x204 (fun_app$c v_b_SP_G_1$ v_b_v_G_1$)))
(let (($x1559 (= (+ ?x204 ?x215 ?x1560) 0)))
(let (($x1547 (<= (+ (fun_app$c v_b_SP_G_1$ ?v0) (* (- 1) ?x204) (* (- 1) ?x215)) 0)))
(let (($x1540 (<= (+ b_Infinity$ (* (- 1) ?x215)) 0)))
(or $x1540 $x1547 $x1559)))))))))
))
(let (($x1535 (forall ((?v0 B_Vertex$) )(let ((?x204 (fun_app$c v_b_SP_G_1$ v_b_v_G_1$)))
(let ((?x1520 (* (- 1) ?x204)))
(let ((?x121 (fun_app$c v_b_SP_G_1$ ?v0)))
(let (($x125 (fun_app$ v_b_Visited_G_1$ ?v0)))
(or $x125 (>= (+ ?x121 ?x1520) 0)))))))
))
(let (($x3200 (or $x2082 $x2087 $x202 $x1522 (not $x1535) $x3196 (not $x3010) (not $x3016) (not $x3189))))
(let (($x3201 (not $x3200)))
(let (($x2946 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(let ((?x177 (fun_app$c v_b_SP_G_3$ ?v1)))
(let ((?x102 (b_G$ (pair$ ?v1 ?v0))))
(let (($x1493 (>= (+ ?x102 ?x177 (* (- 1) (fun_app$c v_b_SP_G_3$ ?v0))) 0)))
(let (($x1303 (<= (+ b_Infinity$ (* (- 1) ?x102)) 0)))
(let (($x1448 (<= (+ b_Infinity$ (* (- 1) ?x177)) 0)))
(or $x1448 $x1303 $x1493)))))))
))
(let (($x2954 (not (or (not $x2946) $x193))))
(let (($x2959 (or $x2924 $x2954)))
(let (($x2902 (forall ((?v0 B_Vertex$) )(let ((?x177 (fun_app$c v_b_SP_G_3$ ?v0)))
(let ((?x2479 (+ ?x177 (* (- 1) (fun_app$c v_b_SP_G_3$ (?v1!9 ?v0))) (* (- 1) (b_G$ (pair$ (?v1!9 ?v0) ?v0))))))
(let (($x2480 (= ?x2479 0)))
(let (($x2464 (<= (+ ?x177 (* (- 1) (fun_app$c v_b_SP_G_3$ (?v1!9 ?v0)))) 0)))
(let (($x2891 (not (or $x2464 (not $x2480)))))
(let (($x1448 (<= (+ b_Infinity$ (* (- 1) ?x177)) 0)))
(let (($x74 (= ?v0 b_Source$)))
(or $x74 $x1448 $x2891)))))))))
))
(let (($x2968 (not (or (not $x2902) (not $x2959)))))
(let (($x2865 (forall ((?v1 B_Vertex$) )(let ((?x1970 (fun_app$c v_b_SP_G_3$ ?v0!8)))
(let ((?x1971 (* (- 1) ?x1970)))
(let ((?x177 (fun_app$c v_b_SP_G_3$ ?v1)))
(let (($x2436 (= (+ ?x177 ?x1971 (b_G$ (pair$ ?v1 ?v0!8))) 0)))
(or (>= (+ ?x177 ?x1971) 0) (not $x2436)))))))
))
(let (($x2873 (not (or $x1968 $x1973 (not $x2865)))))
(let (($x2973 (or $x2873 $x2968)))
(let (($x2850 (forall ((?v0 B_Vertex$) )(let (($x1395 (<= (+ b_Infinity$ (* (- 1) (fun_app$c v_b_SP_G_1$ ?v0))) 0)))
(let (($x125 (fun_app$ v_b_Visited_G_1$ ?v0)))
(or $x125 $x1395))))
))
(let (($x2986 (not (or (not $x2850) (not $x159) (not $x162) $x2982 (not $x167) (not $x2973)))))
(let (($x3206 (or $x2986 $x3201)))
(let (($x2836 (forall ((?v0 B_Vertex$) )(let ((?x121 (fun_app$c v_b_SP_G_1$ ?v0)))
(let ((?x2416 (+ ?x121 (* (- 1) (fun_app$c v_b_SP_G_1$ (?v1!7 ?v0))) (* (- 1) (b_G$ (pair$ (?v1!7 ?v0) ?v0))))))
(let (($x2417 (= ?x2416 0)))
(let (($x2401 (<= (+ ?x121 (* (- 1) (fun_app$c v_b_SP_G_1$ (?v1!7 ?v0)))) 0)))
(let (($x2825 (not (or $x2401 (not (fun_app$ v_b_Visited_G_1$ (?v1!7 ?v0))) (not $x2417)))))
(let (($x1395 (<= (+ b_Infinity$ (* (- 1) ?x121)) 0)))
(let (($x74 (= ?v0 b_Source$)))
(or $x74 $x1395 $x2825)))))))))
))
(let (($x2808 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(let ((?x121 (fun_app$c v_b_SP_G_1$ ?v1)))
(let ((?x102 (b_G$ (pair$ ?v1 ?v0))))
(let (($x1384 (>= (+ ?x102 ?x121 (* (- 1) (fun_app$c v_b_SP_G_1$ ?v0))) 0)))
(let (($x1303 (<= (+ b_Infinity$ (* (- 1) ?x102)) 0)))
(let (($x125 (fun_app$ v_b_Visited_G_1$ ?v1)))
(let (($x126 (not $x125)))
(or $x126 $x1303 $x1384))))))))
))
(let (($x2786 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(let ((?x121 (fun_app$c v_b_SP_G_1$ ?v1)))
(let (($x1367 (>= (+ ?x121 (* (- 1) (fun_app$c v_b_SP_G_1$ ?v0))) 0)))
(let (($x125 (fun_app$ v_b_Visited_G_1$ ?v1)))
(or $x125 (not (fun_app$ v_b_Visited_G_1$ ?v0)) $x1367)))))
))
(let (($x1363 (forall ((?v0 B_Vertex$) )(let ((?x121 (fun_app$c v_b_SP_G_1$ ?v0)))
(>= ?x121 0)))
))
(let (($x2763 (forall ((?v0 B_Vertex$) )(let ((?x75 (v_b_SP_G_0$ ?v0)))
(let ((?x2378 (+ ?x75 (* (- 1) (v_b_SP_G_0$ (?v1!6 ?v0))) (* (- 1) (b_G$ (pair$ (?v1!6 ?v0) ?v0))))))
(let (($x2379 (= ?x2378 0)))
(let (($x2363 (<= (+ ?x75 (* (- 1) (v_b_SP_G_0$ (?v1!6 ?v0)))) 0)))
(let (($x2752 (not (or $x2363 (not (v_b_Visited_G_0$ (?v1!6 ?v0))) (not $x2379)))))
(let (($x1330 (<= (+ b_Infinity$ (* (- 1) ?x75)) 0)))
(let (($x74 (= ?v0 b_Source$)))
(or $x74 $x1330 $x2752)))))))))
))
(let (($x3219 (or (not $x2763) $x3213 (not $x1363) (not $x2786) (not $x2808) (not $x2836) (not $x3206))))
(let (($x3220 (not $x3219)))
(let (($x2725 (forall ((?v1 B_Vertex$) )(let ((?x1849 (v_b_SP_G_0$ ?v0!5)))
(let ((?x1850 (* (- 1) ?x1849)))
(let ((?x75 (v_b_SP_G_0$ ?v1)))
(let (($x83 (v_b_Visited_G_0$ ?v1)))
(let (($x84 (not $x83)))
(or (>= (+ ?x75 ?x1850) 0) $x84 (not (= (+ ?x75 ?x1850 (b_G$ (pair$ ?v1 ?v0!5))) 0)))))))))
))
(let (($x2733 (not (or $x1847 $x1852 (not $x2725)))))
(let (($x3225 (or $x2733 $x3220)))
(let (($x2710 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(let ((?x102 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x75 (v_b_SP_G_0$ ?v1)))
(let (($x1316 (>= (+ ?x75 (* (- 1) (v_b_SP_G_0$ ?v0)) ?x102) 0)))
(let (($x1303 (<= (+ b_Infinity$ (* (- 1) ?x102)) 0)))
(let (($x83 (v_b_Visited_G_0$ ?v1)))
(let (($x84 (not $x83)))
(or $x84 $x1303 $x1316))))))))
))
(let (($x3234 (not (or (not $x2710) (not $x3225)))))
(let (($x3239 (or $x2688 $x3234)))
(let (($x2665 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(let (($x1288 (>= (+ (v_b_SP_G_0$ ?v1) (* (- 1) (v_b_SP_G_0$ ?v0))) 0)))
(let (($x83 (v_b_Visited_G_0$ ?v1)))
(or $x83 (not (v_b_Visited_G_0$ ?v0)) $x1288))))
))
(let (($x3248 (not (or (not $x2665) (not $x3239)))))
(let (($x3253 (or $x2642 $x3248)))
(let (($x1280 (forall ((?v0 B_Vertex$) )(let ((?x75 (v_b_SP_G_0$ ?v0)))
(>= ?x75 0)))
))
(let (($x1283 (not $x1280)))
(let (($x3261 (not (or $x1283 (not $x3253)))))
(let (($x1786 (not $x1785)))
(let (($x3266 (or $x1009 $x1786 $x3261)))
(let (($x2528 (= (+ ?x220 (* (- 1) (v_b_SP_G_2$ ?v0!20)) (b_G$ (pair$ ?0 ?v0!20))) 0)))
(let (($x3111 (or (>= (+ ?x220 (* (- 1) (v_b_SP_G_2$ ?v0!20))) 0) $x247 (not $x2528))))
(let ((@x3984 (monotonicity (quant-intro (refl (= $x3111 $x3111)) (= $x3122 $x3977)) (= (not $x3122) $x3982))))
(let (($x1621 (>= (+ ?x102 ?x220 (* (- 1) ?x250)) 0)))
(let (($x1303 (<= (+ b_Infinity$ (* (- 1) ?x102)) 0)))
(let (($x3102 (or $x247 $x1303 $x1621)))
(let ((@x3975 (monotonicity (quant-intro (refl (= $x3102 $x3102)) (= $x3107 $x3968)) (= (not $x3107) $x3973))))
(let ((@x3987 (monotonicity @x3975 @x3984 (= (or (not $x3107) $x2215 $x2220 (not $x3122)) $x3985))))
(let ((@x3996 (monotonicity (monotonicity (monotonicity @x3987 (= $x3131 $x3988)) (= $x3136 $x3991)) (= (not $x3136) $x3994))))
(let (($x1601 (>= (+ ?x220 (* (- 1) ?x250)) 0)))
(let (($x3057 (or $x238 (not (fun_app$ v_b_Visited_G_2$ ?1)) $x1601)))
(let ((@x3967 (monotonicity (quant-intro (refl (= $x3057 $x3057)) (= $x3062 $x3960)) (= (not $x3062) (not $x3960)))))
(let ((@x4002 (monotonicity (monotonicity @x3967 @x3996 (= (or (not $x3062) (not $x3136)) $x3997)) (= $x3145 $x4000))))
(let ((@x4008 (monotonicity (monotonicity @x4002 (= $x3150 $x4003)) (= (not $x3150) $x4006))))
(let ((@x3955 (quant-intro (refl (= (>= ?x220 0) (>= ?x220 0))) (= $x1595 $x3951))))
(let ((@x4011 (monotonicity (monotonicity @x3955 (= $x1598 (not $x3951))) @x4008 (= (or $x1598 (not $x3150)) $x4009))))
(let ((@x4020 (monotonicity (monotonicity (monotonicity @x4011 (= $x3158 $x4012)) (= $x3163 $x4015)) (= (not $x3163) $x4018))))
(let ((@x3950 (monotonicity (quant-intro (refl (= $x783 $x783)) (= $x786 $x3943)) (= $x925 $x3948))))
(let ((@x4026 (monotonicity (monotonicity @x3950 @x4020 (= (or $x925 (not $x3163)) $x4021)) (= $x3171 $x4024))))
(let ((@x4032 (monotonicity (monotonicity @x4026 (= $x3176 $x4027)) (= (not $x3176) $x4030))))
(let (($x1582 (>= (+ ?x121 (* (- 1) ?x220)) 0)))
(let ((@x3941 (monotonicity (quant-intro (refl (= $x1582 $x1582)) (= $x1586 $x3934)) (= $x1589 $x3939))))
(let ((@x4038 (monotonicity (monotonicity @x3941 @x4032 (= (or $x1589 (not $x3176)) $x4033)) (= $x3184 $x4036))))
(let ((@x4044 (monotonicity (monotonicity @x4038 (= $x3189 $x4039)) (= (not $x3189) $x4042))))
(let (($x1547 (<= (+ ?x121 (* (- 1) ?x204) (* (- 1) ?x215)) 0)))
(let (($x1540 (<= (+ b_Infinity$ (* (- 1) ?x215)) 0)))
(let (($x2991 (or $x1540 $x1547)))
(let (($x2992 (not $x2991)))
(let (($x3013 (or $x2992 $x225)))
(let ((@x3933 (monotonicity (quant-intro (refl (= $x3013 $x3013)) (= $x3016 $x3926)) (= (not $x3016) $x3931))))
(let (($x1559 (= (+ ?x204 ?x215 (* (- 1) ?x220)) 0)))
(let (($x3005 (or $x1540 $x1547 $x1559)))
(let ((@x3925 (monotonicity (quant-intro (refl (= $x3005 $x3005)) (= $x3010 $x3918)) (= (not $x3010) $x3923))))
(let (($x1532 (or $x125 (>= (+ ?x121 (* (- 1) ?x204)) 0))))
(let ((@x3915 (monotonicity (quant-intro (refl (= $x1532 $x1532)) (= $x1535 $x3908)) (= (not $x1535) $x3913))))
(let ((@x4050 (monotonicity (monotonicity @x3915 @x3925 @x3933 @x4044 (= $x3200 $x4045)) (= $x3201 $x4048))))
(let (($x3903 (= (or (not $x2850) (not $x159) (not $x162) $x2982 (not $x167) (not $x2973)) $x3902)))
(let (($x1493 (>= (+ ?x102 ?x177 (* (- 1) ?x180)) 0)))
(let (($x1448 (<= (+ b_Infinity$ (* (- 1) ?x177)) 0)))
(let (($x2941 (or $x1448 $x1303 $x1493)))
(let ((@x3877 (monotonicity (quant-intro (refl (= $x2941 $x2941)) (= $x2946 $x3870)) (= (not $x2946) (not $x3870)))))
(let ((@x3883 (monotonicity (monotonicity @x3877 (= (or (not $x2946) $x193) $x3878)) (= $x2954 $x3881))))
(let ((@x3889 (monotonicity (monotonicity @x3883 (= $x2959 $x3884)) (= (not $x2959) $x3887))))
(let ((?x2479 (+ ?x177 (* (- 1) (fun_app$c v_b_SP_G_3$ (?v1!9 ?0))) (* (- 1) (b_G$ (pair$ (?v1!9 ?0) ?0))))))
(let (($x2480 (= ?x2479 0)))
(let (($x2464 (<= (+ ?x177 (* (- 1) (fun_app$c v_b_SP_G_3$ (?v1!9 ?0)))) 0)))
(let (($x2891 (not (or $x2464 (not $x2480)))))
(let (($x2897 (or $x74 $x1448 $x2891)))
(let ((@x3869 (monotonicity (quant-intro (refl (= $x2897 $x2897)) (= $x2902 $x3862)) (= (not $x2902) (not $x3862)))))
(let ((@x3895 (monotonicity (monotonicity @x3869 @x3889 (= (or (not $x2902) (not $x2959)) $x3890)) (= $x2968 $x3893))))
(let ((?x1970 (fun_app$c v_b_SP_G_3$ ?v0!8)))
(let ((?x1971 (* (- 1) ?x1970)))
(let (($x2436 (= (+ ?x177 ?x1971 (b_G$ (pair$ ?0 ?v0!8))) 0)))
(let (($x2854 (or (>= (+ ?x177 ?x1971) 0) (not $x2436))))
(let ((@x3855 (monotonicity (quant-intro (refl (= $x2854 $x2854)) (= $x2865 $x3848)) (= (not $x2865) $x3853))))
(let ((@x3861 (monotonicity (monotonicity @x3855 (= (or $x1968 $x1973 (not $x2865)) $x3856)) (= $x2873 $x3859))))
(let ((@x3901 (monotonicity (monotonicity @x3861 @x3895 (= $x2973 $x3896)) (= (not $x2973) $x3899))))
(let (($x1395 (<= (+ b_Infinity$ (* (- 1) ?x121)) 0)))
(let (($x2839 (or $x125 $x1395)))
(let ((@x3845 (monotonicity (quant-intro (refl (= $x2839 $x2839)) (= $x2850 $x3838)) (= (not $x2850) $x3843))))
(let ((@x4053 (monotonicity (monotonicity (monotonicity @x3845 @x3901 $x3903) (= $x2986 $x3905)) @x4050 (= $x3206 $x4051))))
(let ((?x2416 (+ ?x121 (* (- 1) (fun_app$c v_b_SP_G_1$ (?v1!7 ?0))) (* (- 1) (b_G$ (pair$ (?v1!7 ?0) ?0))))))
(let (($x2417 (= ?x2416 0)))
(let (($x2401 (<= (+ ?x121 (* (- 1) (fun_app$c v_b_SP_G_1$ (?v1!7 ?0)))) 0)))
(let (($x2825 (not (or $x2401 (not (fun_app$ v_b_Visited_G_1$ (?v1!7 ?0))) (not $x2417)))))
(let (($x2831 (or $x74 $x1395 $x2825)))
(let ((@x3836 (monotonicity (quant-intro (refl (= $x2831 $x2831)) (= $x2836 $x3829)) (= (not $x2836) $x3834))))
(let (($x1384 (>= (+ ?x102 ?x121 (* (- 1) ?x129)) 0)))
(let (($x2803 (or $x126 $x1303 $x1384)))
(let ((@x3828 (monotonicity (quant-intro (refl (= $x2803 $x2803)) (= $x2808 $x3821)) (= (not $x2808) $x3826))))
(let (($x1367 (>= (+ ?x121 (* (- 1) ?x129)) 0)))
(let (($x2781 (or $x125 (not $x127) $x1367)))
(let ((@x3820 (monotonicity (quant-intro (refl (= $x2781 $x2781)) (= $x2786 $x3813)) (= (not $x2786) $x3818))))
(let ((@x3808 (quant-intro (refl (= (>= ?x121 0) (>= ?x121 0))) (= $x1363 $x3804))))
(let ((?x2378 (+ ?x75 (* (- 1) (v_b_SP_G_0$ (?v1!6 ?0))) (* (- 1) (b_G$ (pair$ (?v1!6 ?0) ?0))))))
(let (($x2379 (= ?x2378 0)))
(let (($x2363 (<= (+ ?x75 (* (- 1) (v_b_SP_G_0$ (?v1!6 ?0)))) 0)))
(let (($x2752 (not (or $x2363 (not (v_b_Visited_G_0$ (?v1!6 ?0))) (not $x2379)))))
(let (($x1330 (<= (+ b_Infinity$ (* (- 1) ?x75)) 0)))
(let (($x2758 (or $x74 $x1330 $x2752)))
(let ((@x3802 (monotonicity (quant-intro (refl (= $x2758 $x2758)) (= $x2763 $x3795)) (= (not $x2763) (not $x3795)))))
(let ((@x4059 (monotonicity @x3802 (monotonicity @x3808 (= (not $x1363) $x3809)) @x3820 @x3828 @x3836 (monotonicity @x4053 (= (not $x3206) $x4054)) (= $x3219 $x4057))))
(let (($x1862 (= (+ ?x75 (* (- 1) (v_b_SP_G_0$ ?v0!5)) (b_G$ (pair$ ?0 ?v0!5))) 0)))
(let (($x2714 (or (>= (+ ?x75 (* (- 1) (v_b_SP_G_0$ ?v0!5))) 0) $x84 (not $x1862))))
(let ((@x3788 (monotonicity (quant-intro (refl (= $x2714 $x2714)) (= $x2725 $x3781)) (= (not $x2725) (not $x3781)))))
(let ((@x3794 (monotonicity (monotonicity @x3788 (= (or $x1847 $x1852 (not $x2725)) $x3789)) (= $x2733 $x3792))))
(let ((@x4065 (monotonicity @x3794 (monotonicity @x4059 (= $x3220 $x4060)) (= $x3225 $x4063))))
(let (($x1316 (>= (+ ?x75 (* (- 1) ?x97) ?x102) 0)))
(let (($x2705 (or $x84 $x1303 $x1316)))
(let ((@x3779 (monotonicity (quant-intro (refl (= $x2705 $x2705)) (= $x2710 $x3772)) (= (not $x2710) (not $x3772)))))
(let ((@x4071 (monotonicity @x3779 (monotonicity @x4065 (= (not $x3225) $x4066)) (= (or (not $x2710) (not $x3225)) $x4069))))
(let ((@x4080 (monotonicity (monotonicity (monotonicity @x4071 (= $x3234 $x4072)) (= $x3239 $x4075)) (= (not $x3239) $x4078))))
(let (($x1288 (>= (+ ?x75 (* (- 1) ?x97)) 0)))
(let (($x2660 (or $x83 (not $x95) $x1288)))
(let ((@x3770 (monotonicity (quant-intro (refl (= $x2660 $x2660)) (= $x2665 $x3763)) (= (not $x2665) (not $x3763)))))
(let ((@x4086 (monotonicity (monotonicity @x3770 @x4080 (= (or (not $x2665) (not $x3239)) $x4081)) (= $x3248 $x4084))))
(let ((@x4092 (monotonicity (monotonicity @x4086 (= $x3253 $x4087)) (= (not $x3253) $x4090))))
(let ((@x3758 (quant-intro (refl (= (>= ?x75 0) (>= ?x75 0))) (= $x1280 $x3754))))
(let ((@x4095 (monotonicity (monotonicity @x3758 (= $x1283 (not $x3754))) @x4092 (= (or $x1283 (not $x3253)) $x4093))))
(let ((@x4101 (monotonicity (monotonicity @x4095 (= $x3261 $x4096)) (= $x3266 (or $x1009 $x1786 $x4096)))))
(let (($x2537 (forall ((?v1 B_Vertex$) )(let ((?x2217 (v_b_SP_G_2$ ?v0!20)))
(let ((?x2218 (* (- 1) ?x2217)))
(let ((?x220 (v_b_SP_G_2$ ?v1)))
(let (($x2528 (= (+ ?x220 ?x2218 (b_G$ (pair$ ?v1 ?v0!20))) 0)))
(let (($x238 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x2531 (and (not (>= (+ ?x220 ?x2218) 0)) $x238 $x2528)))
(not $x2531))))))))
))
(let (($x2221 (not $x2220)))
(let (($x2216 (not $x2215)))
(let (($x1628 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(let ((?x220 (v_b_SP_G_2$ ?v1)))
(let ((?x102 (b_G$ (pair$ ?v1 ?v0))))
(let (($x1621 (>= (+ ?x102 ?x220 (* (- 1) (v_b_SP_G_2$ ?v0))) 0)))
(let (($x1303 (<= (+ b_Infinity$ (* (- 1) ?x102)) 0)))
(let (($x1306 (not $x1303)))
(let (($x238 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x1615 (and $x238 $x1306)))
(let (($x1618 (not $x1615)))
(or $x1618 $x1621))))))))))
))
(let (($x2546 (and $x1628 $x2216 $x2221 $x2537)))
(let (($x2197 (not (and $x2189 (not $x2194)))))
(let (($x2203 (or $x2197 $x2202)))
(let (($x2204 (not $x2203)))
(let (($x2551 (or $x2204 $x2546)))
(let (($x1609 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(let (($x1601 (>= (+ (v_b_SP_G_2$ ?v1) (* (- 1) (v_b_SP_G_2$ ?v0))) 0)))
(let (($x238 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x247 (not $x238)))
(let (($x249 (and $x247 (fun_app$ v_b_Visited_G_2$ ?v0))))
(let (($x798 (not $x249)))
(or $x798 $x1601)))))))
))
(let (($x2554 (and $x1609 $x2551)))
(let (($x2170 (not (and (not $x2166) $x2168))))
(let (($x2176 (or $x2170 $x2175)))
(let (($x2177 (not $x2176)))
(let (($x2557 (or $x2177 $x2554)))
(let (($x2560 (and $x1595 $x2557)))
(let (($x2563 (or $x913 $x2154 $x2560)))
(let (($x2566 (and $x786 $x2563)))
(let (($x2569 (or $x2139 $x2566)))
(let (($x2572 (and $x1586 $x2569)))
(let (($x2575 (or $x2122 $x2572)))
(let (($x1573 (forall ((?v0 B_Vertex$) )(let ((?x121 (fun_app$c v_b_SP_G_1$ ?v0)))
(let ((?x220 (v_b_SP_G_2$ ?v0)))
(let (($x225 (= ?x220 ?x121)))
(let ((?x204 (fun_app$c v_b_SP_G_1$ v_b_v_G_1$)))
(let ((?x1520 (* (- 1) ?x204)))
(let (($x1547 (<= (+ ?x121 ?x1520 (* (- 1) (b_G$ (pair$ v_b_v_G_1$ ?v0)))) 0)))
(let (($x1540 (<= (+ b_Infinity$ (* (- 1) (b_G$ (pair$ v_b_v_G_1$ ?v0)))) 0)))
(let (($x1553 (and (not $x1540) (not $x1547))))
(or $x1553 $x225))))))))))
))
(let (($x1567 (forall ((?v0 B_Vertex$) )(let ((?x220 (v_b_SP_G_2$ ?v0)))
(let ((?x1560 (* (- 1) ?x220)))
(let ((?x215 (b_G$ (pair$ v_b_v_G_1$ ?v0))))
(let ((?x204 (fun_app$c v_b_SP_G_1$ v_b_v_G_1$)))
(let (($x1559 (= (+ ?x204 ?x215 ?x1560) 0)))
(let (($x1547 (<= (+ (fun_app$c v_b_SP_G_1$ ?v0) (* (- 1) ?x204) (* (- 1) ?x215)) 0)))
(let (($x1553 (and (not (<= (+ b_Infinity$ (* (- 1) ?x215)) 0)) (not $x1547))))
(let (($x1556 (not $x1553)))
(or $x1556 $x1559))))))))))
))
(let (($x1525 (not $x1522)))
(let (($x2088 (not $x2087)))
(let (($x2083 (not $x2082)))
(let (($x2581 (and $x2083 $x2088 $x203 $x1525 $x1535 $x213 $x1567 $x1573 $x2575)))
(let (($x2058 (not $x193)))
(let (($x1499 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(let ((?x177 (fun_app$c v_b_SP_G_3$ ?v1)))
(let ((?x102 (b_G$ (pair$ ?v1 ?v0))))
(let (($x1493 (>= (+ ?x102 ?x177 (* (- 1) (fun_app$c v_b_SP_G_3$ ?v0))) 0)))
(let (($x1303 (<= (+ b_Infinity$ (* (- 1) ?x102)) 0)))
(let (($x1306 (not $x1303)))
(let (($x1448 (<= (+ b_Infinity$ (* (- 1) ?x177)) 0)))
(let (($x1451 (not $x1448)))
(let (($x1487 (and $x1451 $x1306)))
(let (($x1490 (not $x1487)))
(or $x1490 $x1493)))))))))))
))
(let (($x2061 (and $x1499 $x2058)))
(let (($x2042 (not (and $x2034 (not $x2039)))))
(let (($x2500 (or $x2042 $x2497)))
(let (($x2503 (not $x2500)))
(let (($x2506 (or $x2503 $x2061)))
(let (($x2491 (forall ((?v0 B_Vertex$) )(let ((?x177 (fun_app$c v_b_SP_G_3$ ?v0)))
(let ((?x2479 (+ ?x177 (* (- 1) (fun_app$c v_b_SP_G_3$ (?v1!9 ?v0))) (* (- 1) (b_G$ (pair$ (?v1!9 ?v0) ?v0))))))
(let (($x2480 (= ?x2479 0)))
(let (($x2464 (<= (+ ?x177 (* (- 1) (fun_app$c v_b_SP_G_3$ (?v1!9 ?v0)))) 0)))
(let (($x2485 (and (not $x2464) $x2480)))
(let (($x1448 (<= (+ b_Infinity$ (* (- 1) ?x177)) 0)))
(let (($x1451 (not $x1448)))
(let (($x74 (= ?v0 b_Source$)))
(let (($x79 (not $x74)))
(let (($x1454 (and $x79 $x1451)))
(let (($x1457 (not $x1454)))
(or $x1457 $x2485)))))))))))))
))
(let (($x2509 (and $x2491 $x2506)))
(let (($x2445 (forall ((?v1 B_Vertex$) )(let ((?x1970 (fun_app$c v_b_SP_G_3$ ?v0!8)))
(let ((?x1971 (* (- 1) ?x1970)))
(let ((?x177 (fun_app$c v_b_SP_G_3$ ?v1)))
(let (($x2436 (= (+ ?x177 ?x1971 (b_G$ (pair$ ?v1 ?v0!8))) 0)))
(let (($x2439 (and (not (>= (+ ?x177 ?x1971) 0)) $x2436)))
(not $x2439)))))))
))
(let (($x1974 (not $x1973)))
(let (($x1969 (not $x1968)))
(let (($x2451 (and $x1969 $x1974 $x2445)))
(let (($x2512 (or $x2451 $x2509)))
(let (($x1950 (forall ((?v0 B_Vertex$) )(let (($x1395 (<= (+ b_Infinity$ (* (- 1) (fun_app$c v_b_SP_G_1$ ?v0))) 0)))
(let (($x1398 (not $x1395)))
(let (($x125 (fun_app$ v_b_Visited_G_1$ ?v0)))
(let (($x126 (not $x125)))
(let (($x1431 (and $x126 $x1398)))
(not $x1431)))))))
))
(let (($x2518 (and $x1950 $x159 $x162 $x164 $x167 $x2512)))
(let (($x2586 (or $x2518 $x2581)))
(let (($x2428 (forall ((?v0 B_Vertex$) )(let ((?x121 (fun_app$c v_b_SP_G_1$ ?v0)))
(let ((?x2416 (+ ?x121 (* (- 1) (fun_app$c v_b_SP_G_1$ (?v1!7 ?v0))) (* (- 1) (b_G$ (pair$ (?v1!7 ?v0) ?v0))))))
(let (($x2417 (= ?x2416 0)))
(let ((?x1922 (?v1!7 ?v0)))
(let (($x1927 (fun_app$ v_b_Visited_G_1$ ?x1922)))
(let (($x2422 (and (not (<= (+ ?x121 (* (- 1) (fun_app$c v_b_SP_G_1$ ?x1922))) 0)) $x1927 $x2417)))
(let (($x1395 (<= (+ b_Infinity$ (* (- 1) ?x121)) 0)))
(let (($x1398 (not $x1395)))
(let (($x74 (= ?v0 b_Source$)))
(let (($x79 (not $x74)))
(let (($x1401 (and $x79 $x1398)))
(let (($x1404 (not $x1401)))
(or $x1404 $x2422))))))))))))))
))
(let (($x1390 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(let ((?x121 (fun_app$c v_b_SP_G_1$ ?v1)))
(let ((?x102 (b_G$ (pair$ ?v1 ?v0))))
(let (($x1384 (>= (+ ?x102 ?x121 (* (- 1) (fun_app$c v_b_SP_G_1$ ?v0))) 0)))
(let (($x1303 (<= (+ b_Infinity$ (* (- 1) ?x102)) 0)))
(let (($x1306 (not $x1303)))
(let (($x125 (fun_app$ v_b_Visited_G_1$ ?v1)))
(let (($x1377 (and $x125 $x1306)))
(let (($x1380 (not $x1377)))
(or $x1380 $x1384))))))))))
))
(let (($x1374 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(let ((?x121 (fun_app$c v_b_SP_G_1$ ?v1)))
(let (($x1367 (>= (+ ?x121 (* (- 1) (fun_app$c v_b_SP_G_1$ ?v0))) 0)))
(let (($x127 (fun_app$ v_b_Visited_G_1$ ?v0)))
(let (($x125 (fun_app$ v_b_Visited_G_1$ ?v1)))
(let (($x126 (not $x125)))
(let (($x128 (and $x126 $x127)))
(let (($x429 (not $x128)))
(or $x429 $x1367)))))))))
))
(let (($x2390 (forall ((?v0 B_Vertex$) )(let ((?x75 (v_b_SP_G_0$ ?v0)))
(let ((?x2378 (+ ?x75 (* (- 1) (v_b_SP_G_0$ (?v1!6 ?v0))) (* (- 1) (b_G$ (pair$ (?v1!6 ?v0) ?v0))))))
(let (($x2379 (= ?x2378 0)))
(let ((?x1887 (?v1!6 ?v0)))
(let (($x1892 (v_b_Visited_G_0$ ?x1887)))
(let (($x2384 (and (not (<= (+ ?x75 (* (- 1) (v_b_SP_G_0$ ?x1887))) 0)) $x1892 $x2379)))
(let (($x74 (= ?v0 b_Source$)))
(let (($x79 (not $x74)))
(let (($x1336 (and $x79 (not (<= (+ b_Infinity$ (* (- 1) ?x75)) 0)))))
(let (($x1339 (not $x1336)))
(or $x1339 $x2384))))))))))))
))
(let (($x2595 (and $x2390 $x120 $x1363 $x1374 $x1390 $x2428 $x2586)))
(let (($x1876 (forall ((?v1 B_Vertex$) )(let ((?x1849 (v_b_SP_G_0$ ?v0!5)))
(let ((?x1850 (* (- 1) ?x1849)))
(let ((?x75 (v_b_SP_G_0$ ?v1)))
(let (($x83 (v_b_Visited_G_0$ ?v1)))
(let (($x1863 (and (not (>= (+ ?x75 ?x1850) 0)) $x83 (= (+ ?x75 ?x1850 (b_G$ (pair$ ?v1 ?v0!5))) 0))))
(not $x1863)))))))
))
(let (($x1853 (not $x1852)))
(let (($x1848 (not $x1847)))
(let (($x2350 (and $x1848 $x1853 $x1876)))
(let (($x2600 (or $x2350 $x2595)))
(let (($x1322 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(let ((?x102 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x75 (v_b_SP_G_0$ ?v1)))
(let (($x1316 (>= (+ ?x75 (* (- 1) (v_b_SP_G_0$ ?v0)) ?x102) 0)))
(let (($x1303 (<= (+ b_Infinity$ (* (- 1) ?x102)) 0)))
(let (($x1306 (not $x1303)))
(let (($x83 (v_b_Visited_G_0$ ?v1)))
(let (($x1309 (and $x83 $x1306)))
(let (($x1312 (not $x1309)))
(or $x1312 $x1316))))))))))
))
(let (($x2603 (and $x1322 $x2600)))
(let (($x1829 (not (and $x1821 (not $x1826)))))
(let (($x2339 (or $x1829 $x2336)))
(let (($x2342 (not $x2339)))
(let (($x2606 (or $x2342 $x2603)))
(let (($x1295 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(let (($x1288 (>= (+ (v_b_SP_G_0$ ?v1) (* (- 1) (v_b_SP_G_0$ ?v0))) 0)))
(let (($x95 (v_b_Visited_G_0$ ?v0)))
(let (($x83 (v_b_Visited_G_0$ ?v1)))
(let (($x84 (not $x83)))
(let (($x96 (and $x84 $x95)))
(let (($x370 (not $x96)))
(or $x370 $x1288))))))))
))
(let (($x2609 (and $x1295 $x2606)))
(let (($x1802 (not (and (not $x1798) $x1800))))
(let (($x1808 (or $x1802 $x1807)))
(let (($x1809 (not $x1808)))
(let (($x2612 (or $x1809 $x2609)))
(let (($x2615 (and $x1280 $x2612)))
(let (($x2618 (or $x1009 $x1786 $x2615)))
(let ((@x3203 (rewrite (= (and $x2083 $x2088 $x203 $x1525 $x1535 $x213 $x3010 $x3016 $x3189) $x3201))))
(let (($x2531 (and (not (>= (+ ?x220 (* (- 1) (v_b_SP_G_2$ ?v0!20))) 0)) $x238 $x2528)))
(let (($x2534 (not $x2531)))
(let ((@x3117 (monotonicity (rewrite (= $x2531 (not $x3111))) (= $x2534 (not (not $x3111))))))
(let ((@x3124 (quant-intro (trans @x3117 (rewrite (= (not (not $x3111)) $x3111)) (= $x2534 $x3111)) (= $x2537 $x3122))))
(let (($x1306 (not $x1303)))
(let (($x1615 (and $x238 $x1306)))
(let (($x1618 (not $x1615)))
(let (($x1625 (or $x1618 $x1621)))
(let ((@x3094 (monotonicity (rewrite (= $x1615 (not (or $x247 $x1303)))) (= $x1618 (not (not (or $x247 $x1303)))))))
(let ((@x3098 (trans @x3094 (rewrite (= (not (not (or $x247 $x1303))) (or $x247 $x1303))) (= $x1618 (or $x247 $x1303)))))
(let ((@x3106 (trans (monotonicity @x3098 (= $x1625 (or (or $x247 $x1303) $x1621))) (rewrite (= (or (or $x247 $x1303) $x1621) $x3102)) (= $x1625 $x3102))))
(let ((@x3127 (monotonicity (quant-intro @x3106 (= $x1628 $x3107)) @x3124 (= $x2546 (and $x3107 $x2216 $x2221 $x3122)))))
(let ((@x3135 (trans @x3127 (rewrite (= (and $x3107 $x2216 $x2221 $x3122) $x3131)) (= $x2546 $x3131))))
(let ((@x3072 (monotonicity (rewrite (= (and $x2189 (not $x2194)) (not (or $x3065 $x2194)))) (= $x2197 (not (not (or $x3065 $x2194)))))))
(let ((@x3076 (trans @x3072 (rewrite (= (not (not (or $x3065 $x2194))) (or $x3065 $x2194))) (= $x2197 (or $x3065 $x2194)))))
(let ((@x3084 (trans (monotonicity @x3076 (= $x2203 (or (or $x3065 $x2194) $x2202))) (rewrite (= (or (or $x3065 $x2194) $x2202) $x3080)) (= $x2203 $x3080))))
(let ((@x3138 (monotonicity (monotonicity @x3084 (= $x2204 $x3085)) @x3135 (= $x2551 $x3136))))
(let (($x3058 (= (or (or $x238 (not (fun_app$ v_b_Visited_G_2$ ?1))) $x1601) $x3057)))
(let (($x1606 (or $x798 $x1601)))
(let (($x3055 (= $x1606 (or (or $x238 (not (fun_app$ v_b_Visited_G_2$ ?1))) $x1601))))
(let (($x3043 (or $x238 (not (fun_app$ v_b_Visited_G_2$ ?1)))))
(let ((@x3049 (monotonicity (rewrite (= $x249 (not $x3043))) (= $x798 (not (not $x3043))))))
(let ((@x3056 (monotonicity (trans @x3049 (rewrite (= (not (not $x3043)) $x3043)) (= $x798 $x3043)) $x3055)))
(let ((@x3064 (quant-intro (trans @x3056 (rewrite $x3058) (= $x1606 $x3057)) (= $x1609 $x3062))))
(let ((@x3149 (trans (monotonicity @x3064 @x3138 (= $x2554 (and $x3062 $x3136))) (rewrite (= (and $x3062 $x3136) $x3145)) (= $x2554 $x3145))))
(let ((@x3026 (monotonicity (rewrite (= (and (not $x2166) $x2168) (not (or $x2166 $x3019)))) (= $x2170 (not (not (or $x2166 $x3019)))))))
(let ((@x3030 (trans @x3026 (rewrite (= (not (not (or $x2166 $x3019))) (or $x2166 $x3019))) (= $x2170 (or $x2166 $x3019)))))
(let ((@x3038 (trans (monotonicity @x3030 (= $x2176 (or (or $x2166 $x3019) $x2175))) (rewrite (= (or (or $x2166 $x3019) $x2175) $x3034)) (= $x2176 $x3034))))
(let ((@x3152 (monotonicity (monotonicity @x3038 (= $x2177 $x3039)) @x3149 (= $x2557 $x3150))))
(let ((@x3162 (trans (monotonicity @x3152 (= $x2560 (and $x1595 $x3150))) (rewrite (= (and $x1595 $x3150) $x3158)) (= $x2560 $x3158))))
(let ((@x3168 (monotonicity (monotonicity @x3162 (= $x2563 $x3163)) (= $x2566 (and $x786 $x3163)))))
(let ((@x3178 (monotonicity (trans @x3168 (rewrite (= (and $x786 $x3163) $x3171)) (= $x2566 $x3171)) (= $x2569 $x3176))))
(let ((@x3188 (trans (monotonicity @x3178 (= $x2572 (and $x1586 $x3176))) (rewrite (= (and $x1586 $x3176) $x3184)) (= $x2572 $x3184))))
(let ((@x3015 (monotonicity (rewrite (= (and (not $x1540) (not $x1547)) $x2992)) (= (or (and (not $x1540) (not $x1547)) $x225) $x3013))))
(let ((@x2997 (monotonicity (rewrite (= (and (not $x1540) (not $x1547)) $x2992)) (= (not (and (not $x1540) (not $x1547))) (not $x2992)))))
(let ((@x3001 (trans @x2997 (rewrite (= (not $x2992) $x2991)) (= (not (and (not $x1540) (not $x1547))) $x2991))))
(let ((@x3004 (monotonicity @x3001 (= (or (not (and (not $x1540) (not $x1547))) $x1559) (or $x2991 $x1559)))))
(let ((@x3009 (trans @x3004 (rewrite (= (or $x2991 $x1559) $x3005)) (= (or (not (and (not $x1540) (not $x1547))) $x1559) $x3005))))
(let ((@x3194 (monotonicity (quant-intro @x3009 (= $x1567 $x3010)) (quant-intro @x3015 (= $x1573 $x3016)) (monotonicity @x3188 (= $x2575 $x3189)) (= $x2581 (and $x2083 $x2088 $x203 $x1525 $x1535 $x213 $x3010 $x3016 $x3189)))))
(let (($x1451 (not $x1448)))
(let (($x1487 (and $x1451 $x1306)))
(let (($x1490 (not $x1487)))
(let (($x1496 (or $x1490 $x1493)))
(let ((@x2933 (monotonicity (rewrite (= $x1487 (not (or $x1448 $x1303)))) (= $x1490 (not (not (or $x1448 $x1303)))))))
(let ((@x2937 (trans @x2933 (rewrite (= (not (not (or $x1448 $x1303))) (or $x1448 $x1303))) (= $x1490 (or $x1448 $x1303)))))
(let ((@x2945 (trans (monotonicity @x2937 (= $x1496 (or (or $x1448 $x1303) $x1493))) (rewrite (= (or (or $x1448 $x1303) $x1493) $x2941)) (= $x1496 $x2941))))
(let ((@x2951 (monotonicity (quant-intro @x2945 (= $x1499 $x2946)) (= $x2061 (and $x2946 $x2058)))))
(let ((@x2911 (monotonicity (rewrite (= (and $x2034 (not $x2039)) (not (or $x2033 $x2039)))) (= $x2042 (not (not (or $x2033 $x2039)))))))
(let ((@x2915 (trans @x2911 (rewrite (= (not (not (or $x2033 $x2039))) (or $x2033 $x2039))) (= $x2042 (or $x2033 $x2039)))))
(let ((@x2923 (trans (monotonicity @x2915 (= $x2500 (or (or $x2033 $x2039) $x2497))) (rewrite (= (or (or $x2033 $x2039) $x2497) $x2919)) (= $x2500 $x2919))))
(let ((@x2961 (monotonicity (monotonicity @x2923 (= $x2503 $x2924)) (trans @x2951 (rewrite (= (and $x2946 $x2058) $x2954)) (= $x2061 $x2954)) (= $x2506 $x2959))))
(let (($x2485 (and (not $x2464) $x2480)))
(let (($x1454 (and $x79 $x1451)))
(let (($x1457 (not $x1454)))
(let (($x2488 (or $x1457 $x2485)))
(let ((@x2884 (monotonicity (rewrite (= $x1454 (not (or $x74 $x1448)))) (= $x1457 (not (not (or $x74 $x1448)))))))
(let ((@x2888 (trans @x2884 (rewrite (= (not (not (or $x74 $x1448))) (or $x74 $x1448))) (= $x1457 (or $x74 $x1448)))))
(let ((@x2896 (monotonicity @x2888 (rewrite (= $x2485 $x2891)) (= $x2488 (or (or $x74 $x1448) $x2891)))))
(let ((@x2901 (trans @x2896 (rewrite (= (or (or $x74 $x1448) $x2891) $x2897)) (= $x2488 $x2897))))
(let ((@x2964 (monotonicity (quant-intro @x2901 (= $x2491 $x2902)) @x2961 (= $x2509 (and $x2902 $x2959)))))
(let (($x2439 (and (not (>= (+ ?x177 ?x1971) 0)) $x2436)))
(let (($x2442 (not $x2439)))
(let ((@x2860 (monotonicity (rewrite (= $x2439 (not $x2854))) (= $x2442 (not (not $x2854))))))
(let ((@x2867 (quant-intro (trans @x2860 (rewrite (= (not (not $x2854)) $x2854)) (= $x2442 $x2854)) (= $x2445 $x2865))))
(let ((@x2877 (trans (monotonicity @x2867 (= $x2451 (and $x1969 $x1974 $x2865))) (rewrite (= (and $x1969 $x1974 $x2865) $x2873)) (= $x2451 $x2873))))
(let ((@x2975 (monotonicity @x2877 (trans @x2964 (rewrite (= (and $x2902 $x2959) $x2968)) (= $x2509 $x2968)) (= $x2512 $x2973))))
(let ((@x2845 (monotonicity (rewrite (= (and $x126 (not $x1395)) (not $x2839))) (= (not (and $x126 (not $x1395))) (not (not $x2839))))))
(let ((@x2849 (trans @x2845 (rewrite (= (not (not $x2839)) $x2839)) (= (not (and $x126 (not $x1395))) $x2839))))
(let ((@x2978 (monotonicity (quant-intro @x2849 (= $x1950 $x2850)) @x2975 (= $x2518 (and $x2850 $x159 $x162 $x164 $x167 $x2973)))))
(let ((@x2990 (trans @x2978 (rewrite (= (and $x2850 $x159 $x162 $x164 $x167 $x2973) $x2986)) (= $x2518 $x2986))))
(let ((?x1922 (?v1!7 ?0)))
(let (($x1927 (fun_app$ v_b_Visited_G_1$ ?x1922)))
(let (($x2422 (and (not $x2401) $x1927 $x2417)))
(let (($x1398 (not $x1395)))
(let (($x1401 (and $x79 $x1398)))
(let (($x1404 (not $x1401)))
(let (($x2425 (or $x1404 $x2422)))
(let ((@x2817 (monotonicity (rewrite (= $x1401 (not (or $x74 $x1395)))) (= $x1404 (not (not (or $x74 $x1395)))))))
(let ((@x2821 (trans @x2817 (rewrite (= (not (not (or $x74 $x1395))) (or $x74 $x1395))) (= $x1404 (or $x74 $x1395)))))
(let ((@x2830 (monotonicity @x2821 (rewrite (= $x2422 $x2825)) (= $x2425 (or (or $x74 $x1395) $x2825)))))
(let ((@x2835 (trans @x2830 (rewrite (= (or (or $x74 $x1395) $x2825) $x2831)) (= $x2425 $x2831))))
(let ((@x2795 (monotonicity (rewrite (= (and $x125 $x1306) (not (or $x126 $x1303)))) (= (not (and $x125 $x1306)) (not (not (or $x126 $x1303)))))))
(let ((@x2799 (trans @x2795 (rewrite (= (not (not (or $x126 $x1303))) (or $x126 $x1303))) (= (not (and $x125 $x1306)) (or $x126 $x1303)))))
(let ((@x2802 (monotonicity @x2799 (= (or (not (and $x125 $x1306)) $x1384) (or (or $x126 $x1303) $x1384)))))
(let ((@x2807 (trans @x2802 (rewrite (= (or (or $x126 $x1303) $x1384) $x2803)) (= (or (not (and $x125 $x1306)) $x1384) $x2803))))
(let ((@x2775 (rewrite (= (not (not (or $x125 (not $x127)))) (or $x125 (not $x127))))))
(let ((@x2773 (monotonicity (rewrite (= $x128 (not (or $x125 (not $x127))))) (= $x429 (not (not (or $x125 (not $x127))))))))
(let ((@x2780 (monotonicity (trans @x2773 @x2775 (= $x429 (or $x125 (not $x127)))) (= (or $x429 $x1367) (or (or $x125 (not $x127)) $x1367)))))
(let ((@x2785 (trans @x2780 (rewrite (= (or (or $x125 (not $x127)) $x1367) $x2781)) (= (or $x429 $x1367) $x2781))))
(let ((?x1887 (?v1!6 ?0)))
(let (($x1892 (v_b_Visited_G_0$ ?x1887)))
(let (($x2384 (and (not $x2363) $x1892 $x2379)))
(let (($x1336 (and $x79 (not $x1330))))
(let (($x1339 (not $x1336)))
(let (($x2387 (or $x1339 $x2384)))
(let ((@x2744 (monotonicity (rewrite (= $x1336 (not (or $x74 $x1330)))) (= $x1339 (not (not (or $x74 $x1330)))))))
(let ((@x2748 (trans @x2744 (rewrite (= (not (not (or $x74 $x1330))) (or $x74 $x1330))) (= $x1339 (or $x74 $x1330)))))
(let ((@x2757 (monotonicity @x2748 (rewrite (= $x2384 $x2752)) (= $x2387 (or (or $x74 $x1330) $x2752)))))
(let ((@x2762 (trans @x2757 (rewrite (= (or (or $x74 $x1330) $x2752) $x2758)) (= $x2387 $x2758))))
(let ((@x3211 (monotonicity (quant-intro @x2762 (= $x2390 $x2763)) (quant-intro @x2785 (= $x1374 $x2786)) (quant-intro @x2807 (= $x1390 $x2808)) (quant-intro @x2835 (= $x2428 $x2836)) (monotonicity @x2990 (trans @x3194 @x3203 (= $x2581 $x3201)) (= $x2586 $x3206)) (= $x2595 (and $x2763 $x120 $x1363 $x2786 $x2808 $x2836 $x3206)))))
(let ((@x3224 (trans @x3211 (rewrite (= (and $x2763 $x120 $x1363 $x2786 $x2808 $x2836 $x3206) $x3220)) (= $x2595 $x3220))))
(let (($x1863 (and (not (>= (+ ?x75 (* (- 1) (v_b_SP_G_0$ ?v0!5))) 0)) $x83 $x1862)))
(let (($x1873 (not $x1863)))
(let ((@x2720 (monotonicity (rewrite (= $x1863 (not $x2714))) (= $x1873 (not (not $x2714))))))
(let ((@x2727 (quant-intro (trans @x2720 (rewrite (= (not (not $x2714)) $x2714)) (= $x1873 $x2714)) (= $x1876 $x2725))))
(let ((@x2737 (trans (monotonicity @x2727 (= $x2350 (and $x1848 $x1853 $x2725))) (rewrite (= (and $x1848 $x1853 $x2725) $x2733)) (= $x2350 $x2733))))
(let ((@x2697 (monotonicity (rewrite (= (and $x83 $x1306) (not (or $x84 $x1303)))) (= (not (and $x83 $x1306)) (not (not (or $x84 $x1303)))))))
(let ((@x2701 (trans @x2697 (rewrite (= (not (not (or $x84 $x1303))) (or $x84 $x1303))) (= (not (and $x83 $x1306)) (or $x84 $x1303)))))
(let ((@x2704 (monotonicity @x2701 (= (or (not (and $x83 $x1306)) $x1316) (or (or $x84 $x1303) $x1316)))))
(let ((@x2709 (trans @x2704 (rewrite (= (or (or $x84 $x1303) $x1316) $x2705)) (= (or (not (and $x83 $x1306)) $x1316) $x2705))))
(let ((@x3230 (monotonicity (quant-intro @x2709 (= $x1322 $x2710)) (monotonicity @x2737 @x3224 (= $x2600 $x3225)) (= $x2603 (and $x2710 $x3225)))))
(let ((@x2675 (monotonicity (rewrite (= (and $x1821 (not $x1826)) (not (or $x2668 $x1826)))) (= $x1829 (not (not (or $x2668 $x1826)))))))
(let ((@x2679 (trans @x2675 (rewrite (= (not (not (or $x2668 $x1826))) (or $x2668 $x1826))) (= $x1829 (or $x2668 $x1826)))))
(let ((@x2687 (trans (monotonicity @x2679 (= $x2339 (or (or $x2668 $x1826) $x2336))) (rewrite (= (or (or $x2668 $x1826) $x2336) $x2683)) (= $x2339 $x2683))))
(let ((@x3241 (monotonicity (monotonicity @x2687 (= $x2342 $x2688)) (trans @x3230 (rewrite (= (and $x2710 $x3225) $x3234)) (= $x2603 $x3234)) (= $x2606 $x3239))))
(let ((@x2654 (rewrite (= (not (not (or $x83 (not $x95)))) (or $x83 (not $x95))))))
(let ((@x2652 (monotonicity (rewrite (= $x96 (not (or $x83 (not $x95))))) (= $x370 (not (not (or $x83 (not $x95))))))))
(let ((@x2659 (monotonicity (trans @x2652 @x2654 (= $x370 (or $x83 (not $x95)))) (= (or $x370 $x1288) (or (or $x83 (not $x95)) $x1288)))))
(let ((@x2664 (trans @x2659 (rewrite (= (or (or $x83 (not $x95)) $x1288) $x2660)) (= (or $x370 $x1288) $x2660))))
(let ((@x3244 (monotonicity (quant-intro @x2664 (= $x1295 $x2665)) @x3241 (= $x2609 (and $x2665 $x3239)))))
(let ((@x2629 (monotonicity (rewrite (= (and (not $x1798) $x1800) (not (or $x1798 $x2622)))) (= $x1802 (not (not (or $x1798 $x2622)))))))
(let ((@x2633 (trans @x2629 (rewrite (= (not (not (or $x1798 $x2622))) (or $x1798 $x2622))) (= $x1802 (or $x1798 $x2622)))))
(let ((@x2641 (trans (monotonicity @x2633 (= $x1808 (or (or $x1798 $x2622) $x1807))) (rewrite (= (or (or $x1798 $x2622) $x1807) $x2637)) (= $x1808 $x2637))))
(let ((@x3255 (monotonicity (monotonicity @x2641 (= $x1809 $x2642)) (trans @x3244 (rewrite (= (and $x2665 $x3239) $x3248)) (= $x2609 $x3248)) (= $x2612 $x3253))))
(let ((@x3265 (trans (monotonicity @x3255 (= $x2615 (and $x1280 $x3253))) (rewrite (= (and $x1280 $x3253) $x3261)) (= $x2615 $x3261))))
(let (($x2244 (forall ((?v1 B_Vertex$) )(let ((?x2217 (v_b_SP_G_2$ ?v0!20)))
(let ((?x2218 (* (- 1) ?x2217)))
(let ((?x220 (v_b_SP_G_2$ ?v1)))
(let (($x238 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x2231 (and (not (>= (+ ?x220 ?x2218) 0)) $x238 (= (+ (b_G$ (pair$ ?v1 ?v0!20)) ?x220 ?x2218) 0))))
(not $x2231)))))))
))
(let (($x2238 (not (not (and $x2216 $x2221)))))
(let (($x2248 (and $x2238 $x2244)))
(let (($x2253 (and $x1628 $x2248)))
(let (($x2257 (or $x2204 $x2253)))
(let (($x2261 (and $x1609 $x2257)))
(let (($x2265 (or $x2177 $x2261)))
(let (($x2269 (and $x1595 $x2265)))
(let (($x2273 (or $x913 $x2154 $x2269)))
(let (($x2277 (and $x786 $x2273)))
(let (($x2281 (or $x2139 $x2277)))
(let (($x2285 (and $x1586 $x2281)))
(let (($x2289 (or $x2122 $x2285)))
(let (($x2110 (and (and $x2083 $x2088) $x203 $x1525 $x1535 $x213 $x1567 $x1573)))
(let (($x2293 (and $x2110 $x2289)))
(let (($x2047 (or $x2042 (>= (+ ?x2036 ?x2030 (* (- 1) (fun_app$c v_b_SP_G_3$ ?v0!11))) 0))))
(let (($x2048 (not $x2047)))
(let (($x2065 (or $x2048 $x2061)))
(let (($x2022 (forall ((?v0 B_Vertex$) )(let ((?x177 (fun_app$c v_b_SP_G_3$ ?v0)))
(let ((?x1446 (* (- 1) ?x177)))
(let ((?x2008 (fun_app$c v_b_SP_G_3$ (?v1!9 ?v0))))
(let ((?x2013 (b_G$ (pair$ (?v1!9 ?v0) ?v0))))
(let (($x2015 (= (+ ?x2013 ?x2008 ?x1446) 0)))
(let (($x2016 (and (not (>= (+ ?x2008 ?x1446) 0)) $x2015)))
(let (($x1448 (<= (+ b_Infinity$ ?x1446) 0)))
(let (($x1451 (not $x1448)))
(let (($x74 (= ?v0 b_Source$)))
(let (($x79 (not $x74)))
(let (($x1454 (and $x79 $x1451)))
(let (($x1457 (not $x1454)))
(or $x1457 $x2016))))))))))))))
))
(let (($x2069 (and $x2022 $x2065)))
(let (($x1996 (forall ((?v1 B_Vertex$) )(let ((?x1970 (fun_app$c v_b_SP_G_3$ ?v0!8)))
(let ((?x1971 (* (- 1) ?x1970)))
(let ((?x177 (fun_app$c v_b_SP_G_3$ ?v1)))
(let (($x1984 (and (not (>= (+ ?x177 ?x1971) 0)) (= (+ (b_G$ (pair$ ?v1 ?v0!8)) ?x177 ?x1971) 0))))
(not $x1984))))))
))
(let (($x1990 (not (not (and $x1969 $x1974)))))
(let (($x2000 (and $x1990 $x1996)))
(let (($x2073 (or $x2000 $x2069)))
(let (($x1961 (and $x1950 $x159 $x162 $x164 $x167)))
(let (($x2077 (and $x1961 $x2073)))
(let (($x2297 (or $x2077 $x2293)))
(let (($x1938 (forall ((?v0 B_Vertex$) )(let ((?x121 (fun_app$c v_b_SP_G_1$ ?v0)))
(let ((?x1393 (* (- 1) ?x121)))
(let ((?x1922 (?v1!7 ?v0)))
(let ((?x1923 (fun_app$c v_b_SP_G_1$ ?x1922)))
(let ((?x1929 (b_G$ (pair$ ?x1922 ?v0))))
(let (($x1931 (= (+ ?x1929 ?x1923 ?x1393) 0)))
(let (($x1927 (fun_app$ v_b_Visited_G_1$ ?x1922)))
(let (($x1932 (and (not (>= (+ ?x1923 ?x1393) 0)) $x1927 $x1931)))
(let (($x1395 (<= (+ b_Infinity$ ?x1393) 0)))
(let (($x1398 (not $x1395)))
(let (($x74 (= ?v0 b_Source$)))
(let (($x79 (not $x74)))
(let (($x1401 (and $x79 $x1398)))
(let (($x1404 (not $x1401)))
(or $x1404 $x1932))))))))))))))))
))
(let (($x1903 (forall ((?v0 B_Vertex$) )(let ((?x1894 (b_G$ (pair$ (?v1!6 ?v0) ?v0))))
(let ((?x75 (v_b_SP_G_0$ ?v0)))
(let ((?x1328 (* (- 1) ?x75)))
(let ((?x1887 (?v1!6 ?v0)))
(let ((?x1888 (v_b_SP_G_0$ ?x1887)))
(let (($x1896 (= (+ ?x1888 ?x1328 ?x1894) 0)))
(let (($x1892 (v_b_Visited_G_0$ ?x1887)))
(let (($x1897 (and (not (>= (+ ?x1888 ?x1328) 0)) $x1892 $x1896)))
(let (($x74 (= ?v0 b_Source$)))
(let (($x79 (not $x74)))
(let (($x1336 (and $x79 (not (<= (+ b_Infinity$ ?x1328) 0)))))
(let (($x1339 (not $x1336)))
(or $x1339 $x1897))))))))))))))
))
(let (($x1941 (and $x1903 $x120 $x1363 $x1374 $x1390 $x1938)))
(let (($x2301 (and $x1941 $x2297)))
(let (($x1870 (not (not (and $x1848 $x1853)))))
(let (($x1880 (and $x1870 $x1876)))
(let (($x2305 (or $x1880 $x2301)))
(let (($x2309 (and $x1322 $x2305)))
(let (($x1834 (>= (+ (v_b_SP_G_0$ ?v1!3) (* (- 1) (v_b_SP_G_0$ ?v0!4)) ?x1823) 0)))
(let (($x1836 (not (or $x1829 $x1834))))
(let (($x2313 (or $x1836 $x2309)))
(let (($x2317 (and $x1295 $x2313)))
(let (($x2321 (or $x1809 $x2317)))
(let (($x2325 (and $x1280 $x2321)))
(let (($x2329 (or $x1009 $x1786 $x2325)))
(let (($x2230 (= (+ (b_G$ (pair$ ?0 ?v0!20)) ?x220 (* (- 1) (v_b_SP_G_2$ ?v0!20))) 0)))
(let (($x2231 (and (not (>= (+ ?x220 (* (- 1) (v_b_SP_G_2$ ?v0!20))) 0)) $x238 $x2230)))
(let (($x2241 (not $x2231)))
(let (($x2526 (= (+ (b_G$ (pair$ ?0 ?v0!20)) ?x220 (* (- 1) (v_b_SP_G_2$ ?v0!20))) (+ ?x220 (* (- 1) (v_b_SP_G_2$ ?v0!20)) (b_G$ (pair$ ?0 ?v0!20))))))
(let ((@x2533 (monotonicity (monotonicity (rewrite $x2526) (= $x2230 $x2528)) (= $x2231 $x2531))))
(let ((@x2542 (monotonicity (rewrite (= $x2238 (and $x2216 $x2221))) (quant-intro (monotonicity @x2533 (= $x2241 $x2534)) (= $x2244 $x2537)) (= $x2248 (and (and $x2216 $x2221) $x2537)))))
(let ((@x2550 (trans (monotonicity @x2542 (= $x2253 (and $x1628 (and (and $x2216 $x2221) $x2537)))) (rewrite (= (and $x1628 (and (and $x2216 $x2221) $x2537)) $x2546)) (= $x2253 $x2546))))
(let ((@x2559 (monotonicity (monotonicity (monotonicity @x2550 (= $x2257 $x2551)) (= $x2261 $x2554)) (= $x2265 $x2557))))
(let ((@x2568 (monotonicity (monotonicity (monotonicity @x2559 (= $x2269 $x2560)) (= $x2273 $x2563)) (= $x2277 $x2566))))
(let ((@x2577 (monotonicity (monotonicity (monotonicity @x2568 (= $x2281 $x2569)) (= $x2285 $x2572)) (= $x2289 $x2575))))
(let ((@x2585 (trans (monotonicity @x2577 (= $x2293 (and $x2110 $x2575))) (rewrite (= (and $x2110 $x2575) $x2581)) (= $x2293 $x2581))))
(let (($x2498 (= (>= (+ ?x2036 ?x2030 (* (- 1) (fun_app$c v_b_SP_G_3$ ?v0!11))) 0) $x2497)))
(let (($x2495 (= (+ ?x2036 ?x2030 (* (- 1) (fun_app$c v_b_SP_G_3$ ?v0!11))) (+ ?x2030 ?x2036 (* (- 1) (fun_app$c v_b_SP_G_3$ ?v0!11))))))
(let ((@x2505 (monotonicity (monotonicity (monotonicity (rewrite $x2495) $x2498) (= $x2047 $x2500)) (= $x2048 $x2503))))
(let ((?x1446 (* (- 1) ?x177)))
(let ((?x2008 (fun_app$c v_b_SP_G_3$ (?v1!9 ?0))))
(let ((?x2013 (b_G$ (pair$ (?v1!9 ?0) ?0))))
(let (($x2015 (= (+ ?x2013 ?x2008 ?x1446) 0)))
(let (($x2016 (and (not (>= (+ ?x2008 ?x1446) 0)) $x2015)))
(let (($x2019 (or $x1457 $x2016)))
(let ((@x2477 (monotonicity (rewrite (= (+ ?x2013 ?x2008 ?x1446) (+ ?x1446 ?x2008 ?x2013))) (= $x2015 (= (+ ?x1446 ?x2008 ?x2013) 0)))))
(let ((@x2484 (trans @x2477 (rewrite (= (= (+ ?x1446 ?x2008 ?x2013) 0) $x2480)) (= $x2015 $x2480))))
(let ((@x2461 (monotonicity (rewrite (= (+ ?x2008 ?x1446) (+ ?x1446 ?x2008))) (= (>= (+ ?x2008 ?x1446) 0) (>= (+ ?x1446 ?x2008) 0)))))
(let ((@x2468 (trans @x2461 (rewrite (= (>= (+ ?x1446 ?x2008) 0) $x2464)) (= (>= (+ ?x2008 ?x1446) 0) $x2464))))
(let ((@x2487 (monotonicity (monotonicity @x2468 (= (not (>= (+ ?x2008 ?x1446) 0)) (not $x2464))) @x2484 (= $x2016 $x2485))))
(let ((@x2511 (monotonicity (quant-intro (monotonicity @x2487 (= $x2019 $x2488)) (= $x2022 $x2491)) (monotonicity @x2505 (= $x2065 $x2506)) (= $x2069 $x2509))))
(let (($x1984 (and (not (>= (+ ?x177 ?x1971) 0)) (= (+ (b_G$ (pair$ ?0 ?v0!8)) ?x177 ?x1971) 0))))
(let (($x1993 (not $x1984)))
(let (($x2434 (= (+ (b_G$ (pair$ ?0 ?v0!8)) ?x177 ?x1971) (+ ?x177 ?x1971 (b_G$ (pair$ ?0 ?v0!8))))))
(let ((@x2438 (monotonicity (rewrite $x2434) (= (= (+ (b_G$ (pair$ ?0 ?v0!8)) ?x177 ?x1971) 0) $x2436))))
(let ((@x2447 (quant-intro (monotonicity (monotonicity @x2438 (= $x1984 $x2439)) (= $x1993 $x2442)) (= $x1996 $x2445))))
(let ((@x2450 (monotonicity (rewrite (= $x1990 (and $x1969 $x1974))) @x2447 (= $x2000 (and (and $x1969 $x1974) $x2445)))))
(let ((@x2455 (trans @x2450 (rewrite (= (and (and $x1969 $x1974) $x2445) $x2451)) (= $x2000 $x2451))))
(let ((@x2517 (monotonicity (monotonicity @x2455 @x2511 (= $x2073 $x2512)) (= $x2077 (and $x1961 $x2512)))))
(let ((@x2588 (monotonicity (trans @x2517 (rewrite (= (and $x1961 $x2512) $x2518)) (= $x2077 $x2518)) @x2585 (= $x2297 $x2586))))
(let ((?x1393 (* (- 1) ?x121)))
(let ((?x1923 (fun_app$c v_b_SP_G_1$ ?x1922)))
(let ((?x1929 (b_G$ (pair$ ?x1922 ?0))))
(let (($x1931 (= (+ ?x1929 ?x1923 ?x1393) 0)))
(let (($x1932 (and (not (>= (+ ?x1923 ?x1393) 0)) $x1927 $x1931)))
(let (($x1935 (or $x1404 $x1932)))
(let ((@x2414 (monotonicity (rewrite (= (+ ?x1929 ?x1923 ?x1393) (+ ?x1393 ?x1923 ?x1929))) (= $x1931 (= (+ ?x1393 ?x1923 ?x1929) 0)))))
(let ((@x2421 (trans @x2414 (rewrite (= (= (+ ?x1393 ?x1923 ?x1929) 0) $x2417)) (= $x1931 $x2417))))
(let ((@x2398 (monotonicity (rewrite (= (+ ?x1923 ?x1393) (+ ?x1393 ?x1923))) (= (>= (+ ?x1923 ?x1393) 0) (>= (+ ?x1393 ?x1923) 0)))))
(let ((@x2405 (trans @x2398 (rewrite (= (>= (+ ?x1393 ?x1923) 0) $x2401)) (= (>= (+ ?x1923 ?x1393) 0) $x2401))))
(let ((@x2424 (monotonicity (monotonicity @x2405 (= (not (>= (+ ?x1923 ?x1393) 0)) (not $x2401))) @x2421 (= $x1932 $x2422))))
(let (($x1896 (= (+ (v_b_SP_G_0$ ?x1887) (* (- 1) ?x75) (b_G$ (pair$ ?x1887 ?0))) 0)))
(let (($x1897 (and (not (>= (+ (v_b_SP_G_0$ ?x1887) (* (- 1) ?x75)) 0)) $x1892 $x1896)))
(let (($x1900 (or $x1339 $x1897)))
(let (($x2374 (= (+ (* (- 1) ?x75) (v_b_SP_G_0$ ?x1887) (b_G$ (pair$ ?x1887 ?0))) 0)))
(let (($x2372 (= (+ (v_b_SP_G_0$ ?x1887) (* (- 1) ?x75) (b_G$ (pair$ ?x1887 ?0))) (+ (* (- 1) ?x75) (v_b_SP_G_0$ ?x1887) (b_G$ (pair$ ?x1887 ?0))))))
(let ((@x2383 (trans (monotonicity (rewrite $x2372) (= $x1896 $x2374)) (rewrite (= $x2374 $x2379)) (= $x1896 $x2379))))
(let (($x2369 (= (not (>= (+ (v_b_SP_G_0$ ?x1887) (* (- 1) ?x75)) 0)) (not $x2363))))
(let (($x1890 (>= (+ (v_b_SP_G_0$ ?x1887) (* (- 1) ?x75)) 0)))
(let (($x2356 (= (+ (v_b_SP_G_0$ ?x1887) (* (- 1) ?x75)) (+ (* (- 1) ?x75) (v_b_SP_G_0$ ?x1887)))))
(let ((@x2360 (monotonicity (rewrite $x2356) (= $x1890 (>= (+ (* (- 1) ?x75) (v_b_SP_G_0$ ?x1887)) 0)))))
(let ((@x2367 (trans @x2360 (rewrite (= (>= (+ (* (- 1) ?x75) (v_b_SP_G_0$ ?x1887)) 0) $x2363)) (= $x1890 $x2363))))
(let ((@x2389 (monotonicity (monotonicity (monotonicity @x2367 $x2369) @x2383 (= $x1897 $x2384)) (= $x1900 $x2387))))
(let ((@x2591 (monotonicity (quant-intro @x2389 (= $x1903 $x2390)) (quant-intro (monotonicity @x2424 (= $x1935 $x2425)) (= $x1938 $x2428)) (= $x1941 (and $x2390 $x120 $x1363 $x1374 $x1390 $x2428)))))
(let ((@x2594 (monotonicity @x2591 @x2588 (= $x2301 (and (and $x2390 $x120 $x1363 $x1374 $x1390 $x2428) $x2586)))))
(let ((@x2599 (trans @x2594 (rewrite (= (and (and $x2390 $x120 $x1363 $x1374 $x1390 $x2428) $x2586) $x2595)) (= $x2301 $x2595))))
(let ((@x2349 (monotonicity (rewrite (= $x1870 (and $x1848 $x1853))) (= $x1880 (and (and $x1848 $x1853) $x1876)))))
(let ((@x2354 (trans @x2349 (rewrite (= (and (and $x1848 $x1853) $x1876) $x2350)) (= $x1880 $x2350))))
(let ((@x2605 (monotonicity (monotonicity @x2354 @x2599 (= $x2305 $x2600)) (= $x2309 $x2603))))
(let (($x2334 (= (+ (v_b_SP_G_0$ ?v1!3) (* (- 1) (v_b_SP_G_0$ ?v0!4)) ?x1823) (+ ?x1823 (v_b_SP_G_0$ ?v1!3) (* (- 1) (v_b_SP_G_0$ ?v0!4))))))
(let ((@x2341 (monotonicity (monotonicity (rewrite $x2334) (= $x1834 $x2336)) (= (or $x1829 $x1834) $x2339))))
(let ((@x2608 (monotonicity (monotonicity @x2341 (= $x1836 $x2342)) @x2605 (= $x2313 $x2606))))
(let ((@x2617 (monotonicity (monotonicity (monotonicity @x2608 (= $x2317 $x2609)) (= $x2321 $x2612)) (= $x2325 $x2615))))
(let (($x1662 (forall ((?v0 B_Vertex$) )(let (($x1656 (exists ((?v1 B_Vertex$) )(let ((?x220 (v_b_SP_G_2$ ?v1)))
(let ((?x102 (b_G$ (pair$ ?v1 ?v0))))
(let (($x238 (fun_app$ v_b_Visited_G_2$ ?v1)))
(and (not (>= (+ ?x220 (* (- 1) (v_b_SP_G_2$ ?v0))) 0)) $x238 (= (+ ?x102 ?x220 (* (- 1) (v_b_SP_G_2$ ?v0))) 0))))))
))
(let (($x74 (= ?v0 b_Source$)))
(let (($x79 (not $x74)))
(let (($x1641 (and $x79 (not (<= (+ b_Infinity$ (* (- 1) (v_b_SP_G_2$ ?v0))) 0)))))
(or (not $x1641) $x1656))))))
))
(let (($x1631 (not $x1628)))
(let (($x1665 (or $x1631 $x1662)))
(let (($x1668 (and $x1628 $x1665)))
(let (($x1612 (not $x1609)))
(let (($x1671 (or $x1612 $x1668)))
(let (($x1674 (and $x1609 $x1671)))
(let (($x1677 (or $x1598 $x1674)))
(let (($x1680 (and $x244 $x1595 $x1677)))
(let (($x1683 (or $x925 $x1680)))
(let (($x1686 (and $x786 $x1683)))
(let (($x1689 (or $x1589 $x1686)))
(let (($x1692 (and $x1586 $x1689)))
(let (($x1434 (exists ((?v0 B_Vertex$) )(let (($x1395 (<= (+ b_Infinity$ (* (- 1) (fun_app$c v_b_SP_G_1$ ?v0))) 0)))
(let (($x1398 (not $x1395)))
(let (($x125 (fun_app$ v_b_Visited_G_1$ ?v0)))
(let (($x126 (not $x125)))
(and $x126 $x1398))))))
))
(let (($x1576 (and $x1434 $x203 $x1525 $x1535 $x213 $x1567 $x1573)))
(let (($x1579 (not $x1576)))
(let (($x1695 (or $x1579 $x1692)))
(let (($x1502 (not $x1499)))
(let (($x1505 (or $x1502 $x193)))
(let (($x1508 (and $x1499 $x1505)))
(let (($x1481 (forall ((?v0 B_Vertex$) )(let (($x1475 (exists ((?v1 B_Vertex$) )(let ((?x177 (fun_app$c v_b_SP_G_3$ ?v1)))
(let ((?x102 (b_G$ (pair$ ?v1 ?v0))))
(and (not (>= (+ ?x177 (* (- 1) (fun_app$c v_b_SP_G_3$ ?v0))) 0)) (= (+ ?x102 ?x177 (* (- 1) (fun_app$c v_b_SP_G_3$ ?v0))) 0)))))
))
(let (($x1448 (<= (+ b_Infinity$ (* (- 1) (fun_app$c v_b_SP_G_3$ ?v0))) 0)))
(let (($x1451 (not $x1448)))
(let (($x74 (= ?v0 b_Source$)))
(let (($x79 (not $x74)))
(let (($x1454 (and $x79 $x1451)))
(let (($x1457 (not $x1454)))
(or $x1457 $x1475)))))))))
))
(let (($x1484 (not $x1481)))
(let (($x1511 (or $x1484 $x1508)))
(let (($x1514 (and $x1481 $x1511)))
(let (($x1437 (not $x1434)))
(let (($x1440 (and $x1437 $x159 $x162 $x164 $x167)))
(let (($x1443 (not $x1440)))
(let (($x1517 (or $x1443 $x1514)))
(let (($x1698 (and $x1517 $x1695)))
(let (($x1422 (forall ((?v0 B_Vertex$) )(let (($x1416 (exists ((?v1 B_Vertex$) )(let ((?x121 (fun_app$c v_b_SP_G_1$ ?v1)))
(let ((?x102 (b_G$ (pair$ ?v1 ?v0))))
(let (($x125 (fun_app$ v_b_Visited_G_1$ ?v1)))
(and (not (>= (+ ?x121 (* (- 1) (fun_app$c v_b_SP_G_1$ ?v0))) 0)) $x125 (= (+ ?x102 ?x121 (* (- 1) (fun_app$c v_b_SP_G_1$ ?v0))) 0))))))
))
(let (($x1395 (<= (+ b_Infinity$ (* (- 1) (fun_app$c v_b_SP_G_1$ ?v0))) 0)))
(let (($x1398 (not $x1395)))
(let (($x74 (= ?v0 b_Source$)))
(let (($x79 (not $x74)))
(let (($x1401 (and $x79 $x1398)))
(let (($x1404 (not $x1401)))
(or $x1404 $x1416)))))))))
))
(let (($x1357 (forall ((?v0 B_Vertex$) )(let (($x1351 (exists ((?v1 B_Vertex$) )(let ((?x102 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x75 (v_b_SP_G_0$ ?v1)))
(let (($x83 (v_b_Visited_G_0$ ?v1)))
(and (not (>= (+ ?x75 (* (- 1) (v_b_SP_G_0$ ?v0))) 0)) $x83 (= (+ ?x75 (* (- 1) (v_b_SP_G_0$ ?v0)) ?x102) 0))))))
))
(let (($x74 (= ?v0 b_Source$)))
(let (($x79 (not $x74)))
(let (($x1336 (and $x79 (not (<= (+ b_Infinity$ (* (- 1) (v_b_SP_G_0$ ?v0))) 0)))))
(let (($x1339 (not $x1336)))
(or $x1339 $x1351)))))))
))
(let (($x1425 (and $x1357 $x120 $x1363 $x1374 $x1390 $x1422)))
(let (($x1428 (not $x1425)))
(let (($x1701 (or $x1428 $x1698)))
(let (($x1704 (and $x1357 $x1701)))
(let (($x1325 (not $x1322)))
(let (($x1707 (or $x1325 $x1704)))
(let (($x1710 (and $x1322 $x1707)))
(let (($x1298 (not $x1295)))
(let (($x1713 (or $x1298 $x1710)))
(let (($x1716 (and $x1295 $x1713)))
(let (($x1719 (or $x1283 $x1716)))
(let (($x1725 (not (and $x92 $x1280 $x1719))))
(let (($x2232 (exists ((?v1 B_Vertex$) )(let ((?x2217 (v_b_SP_G_2$ ?v0!20)))
(let ((?x2218 (* (- 1) ?x2217)))
(let ((?x220 (v_b_SP_G_2$ ?v1)))
(let (($x238 (fun_app$ v_b_Visited_G_2$ ?v1)))
(and (not (>= (+ ?x220 ?x2218) 0)) $x238 (= (+ (b_G$ (pair$ ?v1 ?v0!20)) ?x220 ?x2218) 0)))))))
))
(let ((@x2250 (nnf-neg (refl (~ $x2238 $x2238)) (nnf-neg (refl (~ $x2241 $x2241)) (~ (not $x2232) $x2244)) (~ (not (or (not (and $x2216 $x2221)) $x2232)) $x2248))))
(let ((@x2252 (trans (sk (~ (not $x1662) (not (or (not (and $x2216 $x2221)) $x2232)))) @x2250 (~ (not $x1662) $x2248))))
(let ((@x2213 (nnf-neg (nnf-pos (refl (~ $x1625 $x1625)) (~ $x1628 $x1628)) (~ (not $x1631) $x1628))))
(let ((@x2260 (nnf-neg (sk (~ $x1631 $x2204)) (nnf-neg @x2213 @x2252 (~ (not $x1665) $x2253)) (~ (not $x1668) $x2257))))
(let ((@x2186 (nnf-neg (nnf-pos (refl (~ $x1606 $x1606)) (~ $x1609 $x1609)) (~ (not $x1612) $x1609))))
(let ((@x2268 (nnf-neg (sk (~ $x1612 $x2177)) (nnf-neg @x2186 @x2260 (~ (not $x1671) $x2261)) (~ (not $x1674) $x2265))))
(let ((@x2163 (nnf-neg (nnf-pos (refl (~ (>= ?x220 0) (>= ?x220 0))) (~ $x1595 $x1595)) (~ (not $x1598) $x1595))))
(let ((@x2276 (nnf-neg (refl (~ $x913 $x913)) (sk (~ $x1598 $x2154)) (nnf-neg @x2163 @x2268 (~ (not $x1677) $x2269)) (~ (not $x1680) $x2273))))
(let ((@x2148 (nnf-neg (nnf-pos (refl (~ $x783 $x783)) (~ $x786 $x786)) (~ (not $x925) $x786))))
(let ((@x2284 (nnf-neg (sk (~ $x925 $x2139)) (nnf-neg @x2148 @x2276 (~ (not $x1683) $x2277)) (~ (not $x1686) $x2281))))
(let ((@x2131 (nnf-neg (nnf-pos (refl (~ $x1582 $x1582)) (~ $x1586 $x1586)) (~ (not $x1589) $x1586))))
(let ((@x2292 (nnf-neg (sk (~ $x1589 $x2122)) (nnf-neg @x2131 @x2284 (~ (not $x1689) $x2285)) (~ (not $x1692) $x2289))))
(let (($x1553 (and (not $x1540) (not $x1547))))
(let (($x1570 (or $x1553 $x225)))
(let ((@x2105 (nnf-pos (refl (~ (or (not $x1553) $x1559) (or (not $x1553) $x1559))) (~ $x1567 $x1567))))
(let ((@x2112 (monotonicity (sk (~ $x1434 (and $x2083 $x2088))) (refl (~ $x203 $x203)) (refl (~ $x1525 $x1525)) (nnf-pos (refl (~ $x1532 $x1532)) (~ $x1535 $x1535)) (refl (~ $x213 $x213)) @x2105 (nnf-pos (refl (~ $x1570 $x1570)) (~ $x1573 $x1573)) (~ $x1576 $x2110))))
(let ((@x2296 (nnf-neg (nnf-neg @x2112 (~ (not $x1579) $x2110)) @x2292 (~ (not $x1695) $x2293))))
(let ((@x2057 (nnf-neg (nnf-pos (refl (~ $x1496 $x1496)) (~ $x1499 $x1499)) (~ (not $x1502) $x1499))))
(let ((@x2068 (nnf-neg (sk (~ $x1502 $x2048)) (nnf-neg @x2057 (refl (~ $x2058 $x2058)) (~ (not $x1505) $x2061)) (~ (not $x1508) $x2065))))
(let (($x1475 (exists ((?v1 B_Vertex$) )(let ((?x177 (fun_app$c v_b_SP_G_3$ ?v1)))
(let ((?x102 (b_G$ (pair$ ?v1 ?0))))
(and (not (>= (+ ?x177 (* (- 1) (fun_app$c v_b_SP_G_3$ ?0))) 0)) (= (+ ?x102 ?x177 (* (- 1) (fun_app$c v_b_SP_G_3$ ?0))) 0)))))
))
(let (($x1478 (or $x1457 $x1475)))
(let ((@x2024 (nnf-pos (monotonicity (refl (~ $x1457 $x1457)) (sk (~ $x1475 $x2016)) (~ $x1478 $x2019)) (~ $x1481 $x2022))))
(let ((@x2072 (nnf-neg (nnf-neg @x2024 (~ (not $x1484) $x2022)) @x2068 (~ (not $x1511) $x2069))))
(let (($x1985 (exists ((?v1 B_Vertex$) )(let ((?x1970 (fun_app$c v_b_SP_G_3$ ?v0!8)))
(let ((?x1971 (* (- 1) ?x1970)))
(let ((?x177 (fun_app$c v_b_SP_G_3$ ?v1)))
(and (not (>= (+ ?x177 ?x1971) 0)) (= (+ (b_G$ (pair$ ?v1 ?v0!8)) ?x177 ?x1971) 0))))))
))
(let ((@x2002 (nnf-neg (refl (~ $x1990 $x1990)) (nnf-neg (refl (~ $x1993 $x1993)) (~ (not $x1985) $x1996)) (~ (not (or (not (and $x1969 $x1974)) $x1985)) $x2000))))
(let ((@x2004 (trans (sk (~ $x1484 (not (or (not (and $x1969 $x1974)) $x1985)))) @x2002 (~ $x1484 $x2000))))
(let ((@x1952 (nnf-neg (refl (~ (not (and $x126 $x1398)) (not (and $x126 $x1398)))) (~ $x1437 $x1950))))
(let ((@x1963 (monotonicity @x1952 (refl (~ $x159 $x159)) (refl (~ $x162 $x162)) (refl (~ $x164 $x164)) (refl (~ $x167 $x167)) (~ $x1440 $x1961))))
(let ((@x2080 (nnf-neg (nnf-neg @x1963 (~ (not $x1443) $x1961)) (nnf-neg @x2004 @x2072 (~ (not $x1514) $x2073)) (~ (not $x1517) $x2077))))
(let (($x1416 (exists ((?v1 B_Vertex$) )(let ((?x121 (fun_app$c v_b_SP_G_1$ ?v1)))
(let ((?x102 (b_G$ (pair$ ?v1 ?0))))
(let (($x125 (fun_app$ v_b_Visited_G_1$ ?v1)))
(and (not (>= (+ ?x121 (* (- 1) (fun_app$c v_b_SP_G_1$ ?0))) 0)) $x125 (= (+ ?x102 ?x121 (* (- 1) (fun_app$c v_b_SP_G_1$ ?0))) 0))))))
))
(let (($x1419 (or $x1404 $x1416)))
(let ((@x1940 (nnf-pos (monotonicity (refl (~ $x1404 $x1404)) (sk (~ $x1416 $x1932)) (~ $x1419 $x1935)) (~ $x1422 $x1938))))
(let ((@x1917 (refl (~ (or (not (and $x125 $x1306)) $x1384) (or (not (and $x125 $x1306)) $x1384)))))
(let (($x1351 (exists ((?v1 B_Vertex$) )(let ((?x102 (b_G$ (pair$ ?v1 ?0))))
(let ((?x75 (v_b_SP_G_0$ ?v1)))
(let (($x83 (v_b_Visited_G_0$ ?v1)))
(and (not (>= (+ ?x75 (* (- 1) (v_b_SP_G_0$ ?0))) 0)) $x83 (= (+ ?x75 (* (- 1) (v_b_SP_G_0$ ?0)) ?x102) 0))))))
))
(let (($x1354 (or $x1339 $x1351)))
(let ((@x1905 (nnf-pos (monotonicity (refl (~ $x1339 $x1339)) (sk (~ $x1351 $x1897)) (~ $x1354 $x1900)) (~ $x1357 $x1903))))
(let ((@x1943 (monotonicity @x1905 (refl (~ $x120 $x120)) (nnf-pos (refl (~ (>= ?x121 0) (>= ?x121 0))) (~ $x1363 $x1363)) (nnf-pos (refl (~ (or $x429 $x1367) (or $x429 $x1367))) (~ $x1374 $x1374)) (nnf-pos @x1917 (~ $x1390 $x1390)) @x1940 (~ $x1425 $x1941))))
(let ((@x2304 (nnf-neg (nnf-neg @x1943 (~ (not $x1428) $x1941)) (nnf-neg @x2080 @x2296 (~ (not $x1698) $x2297)) (~ (not $x1701) $x2301))))
(let (($x1864 (exists ((?v1 B_Vertex$) )(let ((?x1849 (v_b_SP_G_0$ ?v0!5)))
(let ((?x1850 (* (- 1) ?x1849)))
(let ((?x75 (v_b_SP_G_0$ ?v1)))
(let (($x83 (v_b_Visited_G_0$ ?v1)))
(and (not (>= (+ ?x75 ?x1850) 0)) $x83 (= (+ ?x75 ?x1850 (b_G$ (pair$ ?v1 ?v0!5))) 0)))))))
))
(let ((@x1882 (nnf-neg (refl (~ $x1870 $x1870)) (nnf-neg (refl (~ $x1873 $x1873)) (~ (not $x1864) $x1876)) (~ (not (or (not (and $x1848 $x1853)) $x1864)) $x1880))))
(let ((@x1884 (trans (sk (~ (not $x1357) (not (or (not (and $x1848 $x1853)) $x1864)))) @x1882 (~ (not $x1357) $x1880))))
(let ((@x1840 (refl (~ (or (not (and $x83 $x1306)) $x1316) (or (not (and $x83 $x1306)) $x1316)))))
(let ((@x2312 (nnf-neg (nnf-neg (nnf-pos @x1840 (~ $x1322 $x1322)) (~ (not $x1325) $x1322)) (nnf-neg @x1884 @x2304 (~ (not $x1704) $x2305)) (~ (not $x1707) $x2309))))
(let ((@x1818 (nnf-neg (nnf-pos (refl (~ (or $x370 $x1288) (or $x370 $x1288))) (~ $x1295 $x1295)) (~ (not $x1298) $x1295))))
(let ((@x2320 (nnf-neg @x1818 (nnf-neg (sk (~ $x1325 $x1836)) @x2312 (~ (not $x1710) $x2313)) (~ (not $x1713) $x2317))))
(let ((@x1795 (nnf-neg (nnf-pos (refl (~ (>= ?x75 0) (>= ?x75 0))) (~ $x1280 $x1280)) (~ (not $x1283) $x1280))))
(let ((@x2328 (nnf-neg @x1795 (nnf-neg (sk (~ $x1298 $x1809)) @x2320 (~ (not $x1716) $x2321)) (~ (not $x1719) $x2325))))
(let ((@x2331 (nnf-neg (refl (~ $x1009 $x1009)) (sk (~ $x1283 $x1786)) @x2328 (~ $x1725 $x2329))))
(let (($x1075 (or $x949 (and $x237 (or $x937 (and $x786 (or $x925 (and $x244 $x246 $x902))))))))
(let (($x1082 (and $x374 (or $x985 (and $x393 (or $x973 (and $x426 (or $x961 (and $x678 $x1075)))))))))
(let (($x1084 (not (and $x92 $x94 (or $x997 $x1082)))))
(let (($x1211 (forall ((?v0 B_Vertex$) )(let (($x1205 (exists ((?v1 B_Vertex$) )(let ((?x220 (v_b_SP_G_2$ ?v1)))
(let ((?x102 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x1184 (+ ?x102 ?x220)))
(let ((?x250 (v_b_SP_G_2$ ?v0)))
(let (($x1199 (= ?x250 ?x1184)))
(let (($x238 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x251 (<= ?x250 ?x220)))
(let (($x827 (not $x251)))
(and $x827 $x238 $x1199))))))))))
))
(let (($x821 (not (<= b_Infinity$ (v_b_SP_G_2$ ?v0)))))
(let (($x74 (= ?v0 b_Source$)))
(let (($x79 (not $x74)))
(let (($x824 (and $x79 $x821)))
(let (($x844 (not $x824)))
(or $x844 $x1205))))))))
))
(let (($x1193 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(let ((?x220 (v_b_SP_G_2$ ?v1)))
(let ((?x102 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x1184 (+ ?x102 ?x220)))
(let ((?x250 (v_b_SP_G_2$ ?v0)))
(let (($x1187 (<= ?x250 ?x1184)))
(let (($x378 (not (<= b_Infinity$ ?x102))))
(let (($x238 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x805 (and $x238 $x378)))
(let (($x811 (not $x805)))
(or $x811 $x1187)))))))))))
))
(let (($x1196 (not $x1193)))
(let (($x1214 (or $x1196 $x1211)))
(let (($x1217 (and $x1193 $x1214)))
(let (($x1220 (or $x889 $x1217)))
(let (($x1223 (and $x802 $x1220)))
(let (($x1226 (or $x901 $x1223)))
(let (($x1229 (and $x244 $x246 $x1226)))
(let (($x1232 (or $x925 $x1229)))
(let (($x1235 (and $x786 $x1232)))
(let (($x1238 (or $x937 $x1235)))
(let (($x1241 (and $x237 $x1238)))
(let (($x1244 (or $x949 $x1241)))
(let (($x1163 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(let ((?x177 (fun_app$c v_b_SP_G_3$ ?v1)))
(let ((?x102 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x1136 (+ ?x102 ?x177)))
(let ((?x180 (fun_app$c v_b_SP_G_3$ ?v0)))
(let (($x1157 (<= ?x180 ?x1136)))
(let (($x378 (not (<= b_Infinity$ ?x102))))
(let (($x598 (not (<= b_Infinity$ ?x177))))
(let (($x626 (and $x598 $x378)))
(let (($x632 (not $x626)))
(or $x632 $x1157)))))))))))
))
(let (($x1166 (not $x1163)))
(let (($x1169 (or $x1166 $x193)))
(let (($x1172 (and $x1163 $x1169)))
(let (($x1151 (forall ((?v0 B_Vertex$) )(let (($x1145 (exists ((?v1 B_Vertex$) )(let ((?x177 (fun_app$c v_b_SP_G_3$ ?v1)))
(let ((?x102 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x1136 (+ ?x102 ?x177)))
(let ((?x180 (fun_app$c v_b_SP_G_3$ ?v0)))
(let (($x1139 (= ?x180 ?x1136)))
(let (($x605 (not (<= ?x180 ?x177))))
(and $x605 $x1139))))))))
))
(let (($x598 (not (<= b_Infinity$ (fun_app$c v_b_SP_G_3$ ?v0)))))
(let (($x74 (= ?v0 b_Source$)))
(let (($x79 (not $x74)))
(let (($x601 (and $x79 $x598)))
(let (($x617 (not $x601)))
(or $x617 $x1145))))))))
))
(let (($x1154 (not $x1151)))
(let (($x1175 (or $x1154 $x1172)))
(let (($x1178 (and $x1151 $x1175)))
(let (($x1181 (or $x677 $x1178)))
(let (($x1247 (and $x1181 $x1244)))
(let (($x1127 (forall ((?v0 B_Vertex$) )(let (($x1121 (exists ((?v1 B_Vertex$) )(let ((?x121 (fun_app$c v_b_SP_G_1$ ?v1)))
(let ((?x102 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x1102 (+ ?x102 ?x121)))
(let ((?x129 (fun_app$c v_b_SP_G_1$ ?v0)))
(let (($x1115 (= ?x129 ?x1102)))
(let (($x125 (fun_app$ v_b_Visited_G_1$ ?v1)))
(let (($x130 (<= ?x129 ?x121)))
(let (($x458 (not $x130)))
(and $x458 $x125 $x1115))))))))))
))
(let (($x452 (not (<= b_Infinity$ (fun_app$c v_b_SP_G_1$ ?v0)))))
(let (($x74 (= ?v0 b_Source$)))
(let (($x79 (not $x74)))
(let (($x455 (and $x79 $x452)))
(let (($x475 (not $x455)))
(or $x475 $x1121))))))))
))
(let (($x1112 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(let ((?x121 (fun_app$c v_b_SP_G_1$ ?v1)))
(let ((?x102 (b_G$ (pair$ ?v1 ?v0))))
(let ((?x1102 (+ ?x102 ?x121)))
(let ((?x129 (fun_app$c v_b_SP_G_1$ ?v0)))
(let (($x1106 (<= ?x129 ?x1102)))
(let (($x378 (not (<= b_Infinity$ ?x102))))
(let (($x125 (fun_app$ v_b_Visited_G_1$ ?v1)))
(let (($x436 (and $x125 $x378)))
(let (($x442 (not $x436)))
(or $x442 $x1106)))))))))))
))
(let (($x1130 (and $x426 $x120 $x123 $x433 $x1112 $x1127)))
(let (($x1133 (not $x1130)))
(let (($x1250 (or $x1133 $x1247)))
(let (($x1253 (and $x426 $x1250)))
(let (($x1256 (or $x973 $x1253)))
(let (($x1259 (and $x393 $x1256)))
(let (($x1262 (or $x985 $x1259)))
(let (($x1265 (and $x374 $x1262)))
(let (($x1268 (or $x997 $x1265)))
(let (($x1271 (and $x92 $x94 $x1268)))
(let (($x1656 (exists ((?v1 B_Vertex$) )(let ((?x220 (v_b_SP_G_2$ ?v1)))
(let ((?x102 (b_G$ (pair$ ?v1 ?0))))
(let (($x238 (fun_app$ v_b_Visited_G_2$ ?v1)))
(and (not (>= (+ ?x220 (* (- 1) (v_b_SP_G_2$ ?0))) 0)) $x238 (= (+ ?x102 ?x220 (* (- 1) (v_b_SP_G_2$ ?0))) 0))))))
))
(let (($x1659 (or (not (and $x79 (not (<= (+ b_Infinity$ (* (- 1) ?x220)) 0)))) $x1656)))
(let (($x1205 (exists ((?v1 B_Vertex$) )(let ((?x220 (v_b_SP_G_2$ ?v1)))
(let ((?x102 (b_G$ (pair$ ?v1 ?0))))
(let ((?x1184 (+ ?x102 ?x220)))
(let ((?x250 (v_b_SP_G_2$ ?0)))
(let (($x1199 (= ?x250 ?x1184)))
(let (($x238 (fun_app$ v_b_Visited_G_2$ ?v1)))
(let (($x251 (<= ?x250 ?x220)))
(let (($x827 (not $x251)))
(and $x827 $x238 $x1199))))))))))
))
(let (($x1208 (or $x844 $x1205)))
(let ((?x1184 (+ ?x102 ?x220)))
(let (($x1199 (= ?x250 ?x1184)))
(let (($x1202 (and $x827 $x238 $x1199)))
(let (($x1654 (= $x1202 (and (not $x1601) $x238 (= (+ ?x102 ?x220 (* (- 1) ?x250)) 0)))))
(let ((@x1655 (monotonicity (monotonicity (rewrite (= $x251 $x1601)) (= $x827 (not $x1601))) (rewrite (= $x1199 (= (+ ?x102 ?x220 (* (- 1) ?x250)) 0))) $x1654)))
(let (($x1645 (= $x844 (not (and $x79 (not (<= (+ b_Infinity$ (* (- 1) ?x220)) 0)))))))
(let (($x1642 (= $x824 (and $x79 (not (<= (+ b_Infinity$ (* (- 1) ?x220)) 0))))))
(let (($x1636 (= (<= b_Infinity$ ?x220) (<= (+ b_Infinity$ (* (- 1) ?x220)) 0))))
(let ((@x1640 (monotonicity (rewrite $x1636) (= $x821 (not (<= (+ b_Infinity$ (* (- 1) ?x220)) 0))))))
(let ((@x1661 (monotonicity (monotonicity (monotonicity @x1640 $x1642) $x1645) (quant-intro @x1655 (= $x1205 $x1656)) (= $x1208 $x1659))))
(let ((@x1308 (monotonicity (rewrite (= (<= b_Infinity$ ?x102) $x1303)) (= $x378 $x1306))))
(let ((@x1627 (monotonicity (monotonicity (monotonicity @x1308 (= $x805 $x1615)) (= $x811 $x1618)) (rewrite (= (<= ?x250 ?x1184) $x1621)) (= (or $x811 (<= ?x250 ?x1184)) $x1625))))
(let ((@x1667 (monotonicity (monotonicity (quant-intro @x1627 (= $x1193 $x1628)) (= $x1196 $x1631)) (quant-intro @x1661 (= $x1211 $x1662)) (= $x1214 $x1665))))
(let ((@x1611 (quant-intro (monotonicity (rewrite (= $x251 $x1601)) (= $x799 $x1606)) (= $x802 $x1609))))
(let ((@x1673 (monotonicity (monotonicity @x1611 (= $x889 $x1612)) (monotonicity (quant-intro @x1627 (= $x1193 $x1628)) @x1667 (= $x1217 $x1668)) (= $x1220 $x1671))))
(let ((@x1597 (quant-intro (rewrite (= (<= 0 ?x220) (>= ?x220 0))) (= $x246 $x1595))))
(let ((@x1679 (monotonicity (monotonicity @x1597 (= $x901 $x1598)) (monotonicity @x1611 @x1673 (= $x1223 $x1674)) (= $x1226 $x1677))))
(let ((@x1685 (monotonicity (monotonicity @x1597 @x1679 (= $x1229 $x1680)) (= $x1232 $x1683))))
(let ((@x1591 (monotonicity (quant-intro (rewrite (= (<= ?x220 ?x121) $x1582)) (= $x237 $x1586)) (= $x937 $x1589))))
(let ((@x1691 (monotonicity @x1591 (monotonicity @x1685 (= $x1235 $x1686)) (= $x1238 $x1689))))
(let ((@x1694 (monotonicity (quant-intro (rewrite (= (<= ?x220 ?x121) $x1582)) (= $x237 $x1586)) @x1691 (= $x1241 $x1692))))
(let ((@x1552 (monotonicity (rewrite (= (<= ?x121 ?x217) $x1547)) (= $x698 (not $x1547)))))
(let ((@x1545 (monotonicity (rewrite (= (<= b_Infinity$ ?x215) $x1540)) (= $x694 (not $x1540)))))
(let ((@x1572 (monotonicity (monotonicity @x1545 @x1552 (= $x701 $x1553)) (= $x721 $x1570))))
(let ((@x1558 (monotonicity (monotonicity @x1545 @x1552 (= $x701 $x1553)) (= $x707 (not $x1553)))))
(let ((@x1566 (monotonicity @x1558 (rewrite (= $x221 $x1559)) (= $x708 (or (not $x1553) $x1559)))))
(let ((@x1534 (monotonicity (rewrite (= $x206 (>= (+ ?x121 (* (- 1) ?x204)) 0))) (= $x687 $x1532))))
(let ((@x1527 (monotonicity (rewrite (= (<= b_Infinity$ ?x204) $x1522)) (= $x684 $x1525))))
(let ((@x1400 (monotonicity (rewrite (= (<= b_Infinity$ ?x121) $x1395)) (= $x452 $x1398))))
(let ((@x1436 (quant-intro (monotonicity @x1400 (= $x537 (and $x126 $x1398))) (= $x540 $x1434))))
(let ((@x1578 (monotonicity @x1436 @x1527 (quant-intro @x1534 (= $x690 $x1535)) (quant-intro @x1566 (= $x713 $x1567)) (quant-intro @x1572 (= $x726 $x1573)) (= $x767 $x1576))))
(let ((@x1697 (monotonicity (monotonicity @x1578 (= $x949 $x1579)) @x1694 (= $x1244 $x1695))))
(let ((@x1453 (monotonicity (rewrite (= (<= b_Infinity$ ?x177) $x1448)) (= $x598 $x1451))))
(let ((@x1492 (monotonicity (monotonicity @x1453 @x1308 (= $x626 $x1487)) (= $x632 $x1490))))
(let ((@x1498 (monotonicity @x1492 (rewrite (= (<= ?x180 (+ ?x102 ?x177)) $x1493)) (= (or $x632 (<= ?x180 (+ ?x102 ?x177))) $x1496))))
(let ((@x1507 (monotonicity (monotonicity (quant-intro @x1498 (= $x1163 $x1499)) (= $x1166 $x1502)) (= $x1169 $x1505))))
(let (($x1145 (exists ((?v1 B_Vertex$) )(let ((?x177 (fun_app$c v_b_SP_G_3$ ?v1)))
(let ((?x102 (b_G$ (pair$ ?v1 ?0))))
(let ((?x1136 (+ ?x102 ?x177)))
(let ((?x180 (fun_app$c v_b_SP_G_3$ ?0)))
(let (($x1139 (= ?x180 ?x1136)))
(let (($x605 (not (<= ?x180 ?x177))))
(and $x605 $x1139))))))))
))
(let (($x1148 (or $x617 $x1145)))
(let (($x1472 (and (not (>= (+ ?x177 (* (- 1) ?x180)) 0)) (= (+ ?x102 ?x177 (* (- 1) ?x180)) 0))))
(let ((?x1136 (+ ?x102 ?x177)))
(let (($x1139 (= ?x180 ?x1136)))
(let (($x1142 (and $x605 $x1139)))
(let ((@x1467 (monotonicity (rewrite (= (<= ?x180 ?x177) (>= (+ ?x177 (* (- 1) ?x180)) 0))) (= $x605 (not (>= (+ ?x177 (* (- 1) ?x180)) 0))))))
(let ((@x1474 (monotonicity @x1467 (rewrite (= $x1139 (= (+ ?x102 ?x177 (* (- 1) ?x180)) 0))) (= $x1142 $x1472))))
(let ((@x1480 (monotonicity (monotonicity (monotonicity @x1453 (= $x601 $x1454)) (= $x617 $x1457)) (quant-intro @x1474 (= $x1145 $x1475)) (= $x1148 $x1478))))
(let ((@x1513 (monotonicity (monotonicity (quant-intro @x1480 (= $x1151 $x1481)) (= $x1154 $x1484)) (monotonicity (quant-intro @x1498 (= $x1163 $x1499)) @x1507 (= $x1172 $x1508)) (= $x1175 $x1511))))
(let ((@x1445 (monotonicity (monotonicity (monotonicity @x1436 (= $x543 $x1437)) (= $x581 $x1440)) (= $x677 $x1443))))
(let ((@x1519 (monotonicity @x1445 (monotonicity (quant-intro @x1480 (= $x1151 $x1481)) @x1513 (= $x1178 $x1514)) (= $x1181 $x1517))))
(let (($x1121 (exists ((?v1 B_Vertex$) )(let ((?x121 (fun_app$c v_b_SP_G_1$ ?v1)))
(let ((?x102 (b_G$ (pair$ ?v1 ?0))))
(let ((?x1102 (+ ?x102 ?x121)))
(let ((?x129 (fun_app$c v_b_SP_G_1$ ?0)))
(let (($x1115 (= ?x129 ?x1102)))
(let (($x125 (fun_app$ v_b_Visited_G_1$ ?v1)))
(let (($x130 (<= ?x129 ?x121)))
(let (($x458 (not $x130)))
(and $x458 $x125 $x1115))))))))))
))
(let (($x1124 (or $x475 $x1121)))
(let ((?x1102 (+ ?x102 ?x121)))
(let (($x1115 (= ?x129 ?x1102)))
(let (($x1118 (and $x458 $x125 $x1115)))
(let (($x1414 (= $x1118 (and (not $x1367) $x125 (= (+ ?x102 ?x121 (* (- 1) ?x129)) 0)))))
(let ((@x1415 (monotonicity (monotonicity (rewrite (= $x130 $x1367)) (= $x458 (not $x1367))) (rewrite (= $x1115 (= (+ ?x102 ?x121 (* (- 1) ?x129)) 0))) $x1414)))
(let ((@x1421 (monotonicity (monotonicity (monotonicity @x1400 (= $x455 $x1401)) (= $x475 $x1404)) (quant-intro @x1415 (= $x1121 $x1416)) (= $x1124 $x1419))))
(let ((@x1382 (monotonicity (monotonicity @x1308 (= $x436 (and $x125 $x1306))) (= $x442 (not (and $x125 $x1306))))))
(let ((@x1389 (monotonicity @x1382 (rewrite (= (<= ?x129 ?x1102) $x1384)) (= (or $x442 (<= ?x129 ?x1102)) (or (not (and $x125 $x1306)) $x1384)))))
(let ((@x1376 (quant-intro (monotonicity (rewrite (= $x130 $x1367)) (= $x430 (or $x429 $x1367))) (= $x433 $x1374))))
(let ((@x1365 (quant-intro (rewrite (= (<= 0 ?x121) (>= ?x121 0))) (= $x123 $x1363))))
(let (($x1349 (= $x409 (and (not $x1288) $x83 (= (+ ?x75 (* (- 1) ?x97) ?x102) 0)))))
(let ((@x1350 (monotonicity (monotonicity (rewrite (= $x98 $x1288)) (= $x403 (not $x1288))) (rewrite (= $x112 (= (+ ?x75 (* (- 1) ?x97) ?x102) 0))) $x1349)))
(let ((@x1335 (monotonicity (rewrite (= (<= b_Infinity$ ?x75) $x1330)) (= $x397 (not $x1330)))))
(let ((@x1341 (monotonicity (monotonicity @x1335 (= $x400 $x1336)) (= (not $x400) $x1339))))
(let ((@x1359 (quant-intro (monotonicity @x1341 (quant-intro @x1350 (= $x414 $x1351)) (= $x421 $x1354)) (= $x426 $x1357))))
(let ((@x1427 (monotonicity @x1359 @x1365 @x1376 (quant-intro @x1389 (= $x1112 $x1390)) (quant-intro @x1421 (= $x1127 $x1422)) (= $x1130 $x1425))))
(let ((@x1703 (monotonicity (monotonicity @x1427 (= $x1133 $x1428)) (monotonicity @x1519 @x1697 (= $x1247 $x1698)) (= $x1250 $x1701))))
(let ((@x1314 (monotonicity (monotonicity @x1308 (= (and $x83 $x378) (and $x83 $x1306))) (= (not (and $x83 $x378)) (not (and $x83 $x1306))))))
(let ((@x1321 (monotonicity @x1314 (rewrite (= $x106 $x1316)) (= $x388 (or (not (and $x83 $x1306)) $x1316)))))
(let ((@x1709 (monotonicity (monotonicity (quant-intro @x1321 (= $x393 $x1322)) (= $x973 $x1325)) (monotonicity @x1359 @x1703 (= $x1253 $x1704)) (= $x1256 $x1707))))
(let ((@x1297 (quant-intro (monotonicity (rewrite (= $x98 $x1288)) (= $x371 (or $x370 $x1288))) (= $x374 $x1295))))
(let ((@x1715 (monotonicity (monotonicity @x1297 (= $x985 $x1298)) (monotonicity (quant-intro @x1321 (= $x393 $x1322)) @x1709 (= $x1259 $x1710)) (= $x1262 $x1713))))
(let ((@x1282 (quant-intro (rewrite (= (<= 0 ?x75) (>= ?x75 0))) (= $x94 $x1280))))
(let ((@x1721 (monotonicity (monotonicity @x1282 (= $x997 $x1283)) (monotonicity @x1297 @x1715 (= $x1265 $x1716)) (= $x1268 $x1719))))
(let ((@x1727 (monotonicity (monotonicity @x1282 @x1721 (= $x1271 (and $x92 $x1280 $x1719))) (= (not $x1271) $x1725))))
(let (($x1263 (= (or $x985 (and $x393 (or $x973 (and $x426 (or $x961 (and $x678 $x1075)))))) $x1262)))
(let (($x1260 (= (and $x393 (or $x973 (and $x426 (or $x961 (and $x678 $x1075))))) $x1259)))
(let (($x1242 (= (and $x237 (or $x937 (and $x786 (or $x925 (and $x244 $x246 $x902))))) $x1241)))
(let ((@x1204 (monotonicity (monotonicity (rewrite (= ?x255 ?x1184)) (= $x262 $x1199)) (= $x833 $x1202))))
(let ((@x1213 (quant-intro (monotonicity (quant-intro @x1204 (= $x838 $x1205)) (= $x845 $x1208)) (= $x850 $x1211))))
(let ((@x1192 (monotonicity (monotonicity (rewrite (= ?x255 ?x1184)) (= $x256 (<= ?x250 ?x1184))) (= $x812 (or $x811 (<= ?x250 ?x1184))))))
(let ((@x1198 (monotonicity (quant-intro @x1192 (= $x817 $x1193)) (= (not $x817) $x1196))))
(let ((@x1219 (monotonicity (quant-intro @x1192 (= $x817 $x1193)) (monotonicity @x1198 @x1213 (= $x878 $x1214)) (= $x883 $x1217))))
(let ((@x1228 (monotonicity (monotonicity (monotonicity @x1219 (= $x890 $x1220)) (= $x895 $x1223)) (= $x902 $x1226))))
(let ((@x1234 (monotonicity (monotonicity @x1228 (= (and $x244 $x246 $x902) $x1229)) (= (or $x925 (and $x244 $x246 $x902)) $x1232))))
(let ((@x1237 (monotonicity @x1234 (= (and $x786 (or $x925 (and $x244 $x246 $x902))) $x1235))))
(let ((@x1240 (monotonicity @x1237 (= (or $x937 (and $x786 (or $x925 (and $x244 $x246 $x902)))) $x1238))))
(let ((@x1162 (monotonicity (monotonicity (rewrite (= ?x182 ?x1136)) (= $x189 (<= ?x180 ?x1136))) (= $x633 (or $x632 (<= ?x180 ?x1136))))))
(let ((@x1168 (monotonicity (quant-intro @x1162 (= $x638 $x1163)) (= (not $x638) $x1166))))
(let ((@x1174 (monotonicity (quant-intro @x1162 (= $x638 $x1163)) (monotonicity @x1168 (= $x654 $x1169)) (= $x659 $x1172))))
(let ((@x1144 (monotonicity (monotonicity (rewrite (= ?x182 ?x1136)) (= $x183 $x1139)) (= $x608 $x1142))))
(let ((@x1153 (quant-intro (monotonicity (quant-intro @x1144 (= $x611 $x1145)) (= $x618 $x1148)) (= $x623 $x1151))))
(let ((@x1177 (monotonicity (monotonicity @x1153 (= (not $x623) $x1154)) @x1174 (= $x666 $x1175))))
(let ((@x1183 (monotonicity (monotonicity @x1153 @x1177 (= $x671 $x1178)) (= $x678 $x1181))))
(let ((@x1249 (monotonicity @x1183 (monotonicity (monotonicity @x1240 $x1242) (= $x1075 $x1244)) (= (and $x678 $x1075) $x1247))))
(let ((@x1120 (monotonicity (monotonicity (rewrite (= ?x134 ?x1102)) (= $x141 $x1115)) (= $x464 $x1118))))
(let ((@x1129 (quant-intro (monotonicity (quant-intro @x1120 (= $x469 $x1121)) (= $x476 $x1124)) (= $x481 $x1127))))
(let ((@x1111 (monotonicity (monotonicity (rewrite (= ?x134 ?x1102)) (= $x135 (<= ?x129 ?x1102))) (= $x443 (or $x442 (<= ?x129 ?x1102))))))
(let ((@x1135 (monotonicity (monotonicity (quant-intro @x1111 (= $x448 $x1112)) @x1129 (= $x532 $x1130)) (= $x961 $x1133))))
(let ((@x1255 (monotonicity (monotonicity @x1135 @x1249 (= (or $x961 (and $x678 $x1075)) $x1250)) (= (and $x426 (or $x961 (and $x678 $x1075))) $x1253))))
(let ((@x1258 (monotonicity @x1255 (= (or $x973 (and $x426 (or $x961 (and $x678 $x1075)))) $x1256))))
(let ((@x1267 (monotonicity (monotonicity (monotonicity @x1258 $x1260) $x1263) (= $x1082 $x1265))))
(let ((@x1273 (monotonicity (monotonicity @x1267 (= (or $x997 $x1082) $x1268)) (= (and $x92 $x94 (or $x997 $x1082)) $x1271))))
(let ((@x1729 (trans (monotonicity @x1273 (= $x1084 (not $x1271))) @x1727 (= $x1084 $x1725))))
(let ((@x1088 (mp (not-or-elim @x1030 (not $x1015)) (rewrite* (= (not $x1015) $x1084)) $x1084)))
(let ((@x2621 (mp (mp~ (mp @x1088 @x1729 $x1725) @x2331 $x2329) (monotonicity @x2617 (= $x2329 $x2618)) $x2618)))
(let ((@x4102 (mp (mp @x2621 (monotonicity @x3265 (= $x2618 $x3266)) $x3266) @x4101 (or $x1009 $x1786 $x4096))))
(let ((@x5459 (unit-resolution (def-axiom (or $x4093 $x4087)) (unit-resolution @x4102 @x4116 (lemma @x3301 $x1785) $x4096) $x4087)))
(let ((@x4213 (unit-resolution ((_ quant-inst ?v0!2) (or (not $x3748) $x2622)) (mp @x1780 @x3752 $x3748) (hypothesis $x1800) false)))
(let ((@x5512 (unit-resolution (def-axiom (or $x4090 $x2642 $x4084)) (unit-resolution (def-axiom (or $x2637 $x1800)) (lemma @x4213 $x2622) $x2637) @x5459 $x4084)))
(let ((@x5451 (unit-resolution (def-axiom (or $x4078 $x2688 $x4072)) (unit-resolution (def-axiom (or $x4081 $x4075)) @x5512 $x4075) (unit-resolution (def-axiom (or $x2683 $x1821)) (lemma @x4210 $x2668) $x2683) $x4072)))
(let ((?x1849 (v_b_SP_G_0$ ?v0!5)))
(let (($x4261 (= b_Infinity$ ?x1849)))
(let ((@x4269 (symm (commutativity (= $x4261 (= ?x1849 b_Infinity$))) (= (= ?x1849 b_Infinity$) $x4261))))
(let (($x4170 (= ?x1849 b_Infinity$)))
(let ((@x4259 (rewrite (= (or (not $x3741) (or $x1847 $x4170)) (or (not $x3741) $x1847 $x4170)))))
(let ((@x4260 (mp ((_ quant-inst ?v0!5) (or (not $x3741) (or $x1847 $x4170))) @x4259 (or (not $x3741) $x1847 $x4170))))
(let ((@x4263 (unit-resolution @x4260 (mp @x1775 (quant-intro (refl (= $x340 $x340)) (= $x343 $x3741)) $x3741) (unit-resolution (def-axiom (or $x3789 $x1848)) (hypothesis $x3792) $x1848) $x4170)))
(let ((@x4249 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4261) $x1852)) (unit-resolution (def-axiom (or $x3789 $x1853)) (hypothesis $x3792) $x1853) (not $x4261))))
(let ((@x5453 (unit-resolution (def-axiom (or $x4066 $x3792 $x4060)) (lemma (unit-resolution @x4249 (mp @x4263 @x4269 $x4261) false) $x3789) (unit-resolution (def-axiom (or $x4069 $x4063)) @x5451 $x4063) $x4060)))
(let ((@x5456 (unit-resolution (def-axiom (or $x4057 $x120)) @x5453 $x120)))
(let ((@x5702 (trans (monotonicity @x5699 (= (fun_app$c v_b_SP_G_3$ b_Source$) ?x119)) @x5456 $x193)))
(let (($x4338 (<= (+ b_Infinity$ (* (- 1) (fun_app$c v_b_SP_G_1$ ?v0!8))) 0)))
(let (($x4960 (not $x4338)))
(let (($x4484 (>= (+ ?x1970 (* (- 1) (fun_app$c v_b_SP_G_1$ ?v0!8))) 0)))
(let ((@x6411 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not (= ?x1970 (fun_app$c v_b_SP_G_1$ ?v0!8))) $x4484)) (monotonicity @x5699 (= ?x1970 (fun_app$c v_b_SP_G_1$ ?v0!8))) $x4484)))
(let ((@x4754 (lemma ((_ th-lemma arith farkas 1 -1 1) (hypothesis $x4484) (hypothesis $x4338) (hypothesis $x1974) false) (or $x4960 (not $x4484) $x1973))))
(let (($x5013 (<= (+ ?x1970 (* (- 1) (fun_app$c v_b_SP_G_3$ (?v1!7 ?v0!8)))) 0)))
(let ((?x4355 (* (- 1) (fun_app$c v_b_SP_G_1$ (?v1!7 ?v0!8)))))
(let ((?x4335 (fun_app$c v_b_SP_G_1$ ?v0!8)))
(let (($x4361 (<= (+ ?x4335 ?x4355) 0)))
(let (($x4332 (not $x4361)))
(let ((?x4366 (+ ?x4335 ?x4355 (* (- 1) (b_G$ (pair$ (?v1!7 ?v0!8) ?v0!8))))))
(let (($x4371 (= ?x4366 0)))
(let (($x4372 (not $x4371)))
(let (($x4370 (or $x4361 (not (fun_app$ v_b_Visited_G_1$ (?v1!7 ?v0!8))) $x4372)))
(let (($x4373 (not $x4370)))
(let ((@x4406 (unit-resolution (def-axiom (or $x4057 $x3829)) @x5453 $x3829)))
(let ((@x4343 (rewrite (= (or $x3834 (or $x1968 $x4338 $x4373)) (or $x3834 $x1968 $x4338 $x4373)))))
(let ((@x4329 (mp ((_ quant-inst ?v0!8) (or $x3834 (or $x1968 $x4338 $x4373))) @x4343 (or $x3834 $x1968 $x4338 $x4373))))
(let ((@x4408 (unit-resolution @x4329 @x4406 (unit-resolution (def-axiom (or $x3856 $x1969)) (hypothesis $x3859) $x1969) (hypothesis $x4960) $x4373)))
(let ((@x4463 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not (= ?x1970 ?x4335)) $x4484)) (monotonicity (hypothesis $x164) (= ?x1970 ?x4335)) $x4484)))
(let (($x4500 (<= (+ (fun_app$c v_b_SP_G_3$ (?v1!7 ?v0!8)) ?x4355) 0)))
(let ((?x4341 (?v1!7 ?v0!8)))
(let ((?x4288 (fun_app$c v_b_SP_G_3$ ?x4341)))
(let ((@x5080 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not (= ?x4288 (fun_app$c v_b_SP_G_1$ ?x4341))) $x4500)) (monotonicity (hypothesis $x164) (= ?x4288 (fun_app$c v_b_SP_G_1$ ?x4341))) $x4500)))
(let ((@x5445 ((_ th-lemma arith farkas 1 -1 -1 1) (hypothesis $x4484) (hypothesis $x5013) (hypothesis $x4500) (hypothesis $x4332) false)))
(let ((@x4647 (unit-resolution (lemma @x5445 (or (not $x5013) (not $x4484) (not $x4500) $x4361)) @x5080 @x4463 (unit-resolution (def-axiom (or $x4370 $x4332)) @x4408 $x4332) (not $x5013))))
(let ((?x4700 (+ ?x1970 (* (- 1) ?x4288) (* (- 1) (b_G$ (pair$ ?x4341 ?v0!8))))))
(let (($x4722 (= ?x4700 0)))
(let (($x4489 (>= ?x4700 0)))
(let (($x4331 (>= ?x4366 0)))
(let ((@x4769 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x4372 $x4331)) (unit-resolution (def-axiom (or $x4370 $x4371)) @x4408 $x4371) $x4331)))
(let ((@x5050 (unit-resolution ((_ th-lemma arith assign-bounds -1 -1 1) (or $x4489 (not $x4331) (not $x4484) (not $x4500))) @x4769 @x4463 @x5080 $x4489)))
(let (($x5088 (<= ?x4700 0)))
(let (($x4912 (>= (+ ?x4288 ?x4355) 0)))
(let ((@x6226 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not (= ?x4288 (fun_app$c v_b_SP_G_1$ ?x4341))) $x4912)) (monotonicity (hypothesis $x164) (= ?x4288 (fun_app$c v_b_SP_G_1$ ?x4341))) $x4912)))
(let (($x4483 (<= (+ ?x1970 (* (- 1) ?x4335)) 0)))
(let ((@x4788 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not (= ?x1970 ?x4335)) $x4483)) (monotonicity (hypothesis $x164) (= ?x1970 ?x4335)) $x4483)))
(let (($x4330 (<= ?x4366 0)))
(let ((@x4407 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x4372 $x4330)) (unit-resolution (def-axiom (or $x4370 $x4371)) @x4408 $x4371) $x4330)))
(let ((@x5001 (unit-resolution ((_ th-lemma arith assign-bounds -1 -1 1) (or $x5088 (not $x4330) (not $x4483) (not $x4912))) @x4407 @x4788 @x6226 $x5088)))
(let ((@x4974 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x4722 (not $x5088) (not $x4489))) @x5001 @x5050 $x4722)))
(let (($x5094 (not $x4722)))
(let (($x4624 (or $x5013 $x5094)))
(let (($x4764 (or $x3853 $x5013 $x5094)))
(let (($x4299 (>= (+ ?x4288 ?x1971) 0)))
(let (($x4989 (or $x3853 (or $x4299 (not (= (+ ?x4288 ?x1971 (b_G$ (pair$ ?x4341 ?v0!8))) 0))))))
(let (($x4626 (= (or $x4299 (not (= (+ ?x4288 ?x1971 (b_G$ (pair$ ?x4341 ?v0!8))) 0))) $x4624)))
(let ((@x4723 (rewrite (= (= (+ ?x1971 ?x4288 (b_G$ (pair$ ?x4341 ?v0!8))) 0) $x4722))))
(let (($x4286 (= (+ ?x4288 ?x1971 (b_G$ (pair$ ?x4341 ?v0!8))) 0)))
(let (($x4839 (= (+ ?x4288 ?x1971 (b_G$ (pair$ ?x4341 ?v0!8))) (+ ?x1971 ?x4288 (b_G$ (pair$ ?x4341 ?v0!8))))))
(let ((@x4695 (monotonicity (rewrite $x4839) (= $x4286 (= (+ ?x1971 ?x4288 (b_G$ (pair$ ?x4341 ?v0!8))) 0)))))
(let ((@x4401 (monotonicity (trans @x4695 @x4723 (= $x4286 $x4722)) (= (not $x4286) $x5094))))
(let ((@x5263 (monotonicity (rewrite (= (+ ?x4288 ?x1971) (+ ?x1971 ?x4288))) (= $x4299 (>= (+ ?x1971 ?x4288) 0)))))
(let ((@x4841 (trans @x5263 (rewrite (= (>= (+ ?x1971 ?x4288) 0) $x5013)) (= $x4299 $x5013))))
(let ((@x5186 (trans (monotonicity (monotonicity @x4841 @x4401 $x4626) (= $x4989 (or $x3853 $x4624))) (rewrite (= (or $x3853 $x4624) $x4764)) (= $x4989 $x4764))))
(let ((@x5499 (unit-resolution (mp ((_ quant-inst (?v1!7 ?v0!8)) $x4989) @x5186 $x4764) (unit-resolution (def-axiom (or $x3856 $x3848)) (hypothesis $x3859) $x3848) $x4624)))
(let ((@x5708 (unit-resolution (lemma (unit-resolution @x5499 @x4974 @x4647 false) (or $x3856 $x2982 $x4338)) @x5699 (unit-resolution @x4754 @x6411 (hypothesis $x1974) $x4960) $x3856)))
(let ((@x5837 (unit-resolution (def-axiom (or $x3899 $x3859 $x3893)) @x5708 (unit-resolution (def-axiom (or $x3902 $x3896)) @x5698 $x3896) $x3893)))
(let ((@x5839 (unit-resolution (def-axiom (or $x3887 $x2924 $x3881)) (unit-resolution (def-axiom (or $x3890 $x3884)) @x5837 $x3884) (unit-resolution (def-axiom (or $x3878 $x2058)) @x5702 $x3878) $x2924)))
(let ((@x5847 (monotonicity (symm @x5699 (= v_b_SP_G_1$ v_b_SP_G_3$)) (= ?x4698 ?x2030))))
(let ((@x6414 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x6220) $x5759)) (symm @x5847 $x6220) $x5759)))
(let ((@x6168 (lemma ((_ th-lemma arith farkas 1 -1 1) (hypothesis $x5759) (hypothesis $x4492) (hypothesis $x2034) false) (or $x5659 (not $x5759) $x2033))))
(let ((@x5991 (unit-resolution @x6168 @x6414 (unit-resolution (def-axiom (or $x2919 $x2034)) @x5839 $x2034) $x5659)))
(let ((@x4386 (mp ((_ quant-inst ?v1!10) (or $x3843 (or $x4697 $x4492))) (rewrite (= (or $x3843 (or $x4697 $x4492)) (or $x3843 $x4697 $x4492))) (or $x3843 $x4697 $x4492))))
(let ((@x5999 (unit-resolution @x4386 (unit-resolution (def-axiom (or $x3902 $x3838)) @x5698 $x3838) (or $x4697 $x4492))))
(let ((@x6172 (unit-resolution (def-axiom (or $x4057 $x3821)) @x5453 $x3821)))
(let (($x4384 (not $x4697)))
(let (($x5846 (or $x3826 $x4384 $x2039 $x4677)))
(let (($x4673 (or $x4384 $x2039 (>= (+ ?x2036 ?x4698 (* (- 1) (fun_app$c v_b_SP_G_1$ ?v0!11))) 0))))
(let (($x5849 (or $x3826 $x4673)))
(let (($x4614 (= (>= (+ ?x2036 ?x4698 (* (- 1) (fun_app$c v_b_SP_G_1$ ?v0!11))) 0) $x4677)))
(let (($x4674 (= (+ ?x2036 ?x4698 (* (- 1) (fun_app$c v_b_SP_G_1$ ?v0!11))) (+ ?x2036 (* (- 1) (fun_app$c v_b_SP_G_1$ ?v0!11)) ?x4698))))
(let ((@x5516 (monotonicity (monotonicity (rewrite $x4674) $x4614) (= $x4673 (or $x4384 $x2039 $x4677)))))
(let ((@x5314 (trans (monotonicity @x5516 (= $x5849 (or $x3826 (or $x4384 $x2039 $x4677)))) (rewrite (= (or $x3826 (or $x4384 $x2039 $x4677)) $x5846)) (= $x5849 $x5846))))
(let ((@x6307 (unit-resolution (mp ((_ quant-inst ?v0!11 ?v1!10) $x5849) @x5314 $x5846) @x6172 (unit-resolution (def-axiom (or $x2919 (not $x2039))) @x5839 (not $x2039)) (or $x4384 $x4677))))
(let ((?x4518 (fun_app$c v_b_SP_G_1$ ?v0!11)))
(let ((?x4546 (* (- 1) ?x4518)))
(let ((?x2043 (fun_app$c v_b_SP_G_3$ ?v0!11)))
(let ((@x6142 (monotonicity (symm @x5699 (= v_b_SP_G_1$ v_b_SP_G_3$)) (= ?x4518 ?x2043))))
(let ((@x5800 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not (= ?x2043 ?x4518)) (<= (+ ?x2043 ?x4546) 0))) (symm @x6142 (= ?x2043 ?x4518)) (<= (+ ?x2043 ?x4546) 0))))
(let ((@x5815 ((_ th-lemma arith farkas -1 -1 1 1) @x5800 (unit-resolution (def-axiom (or $x2919 $x3668)) @x5839 $x3668) @x6414 (unit-resolution @x6307 (unit-resolution @x5999 @x5991 $x4697) $x4677) false)))
(let ((@x7385 (unit-resolution (def-axiom (or $x3856 $x1974)) (unit-resolution (lemma @x5815 (or $x3902 $x1973)) @x5698 $x1973) $x3856)))
(let ((@x7411 (unit-resolution (def-axiom (or $x3899 $x3859 $x3893)) @x7385 (unit-resolution (def-axiom (or $x3902 $x3896)) @x5698 $x3896) $x3893)))
(let ((@x7356 (unit-resolution (def-axiom (or $x3887 $x2924 $x3881)) (unit-resolution (def-axiom (or $x3878 $x2058)) @x5702 $x3878) (unit-resolution (def-axiom (or $x3890 $x3884)) @x7411 $x3884) $x2924)))
(let ((@x7398 (unit-resolution @x6168 (unit-resolution (def-axiom (or $x2919 $x2034)) @x7356 $x2034) @x7384 $x5659)))
(let ((@x7318 (unit-resolution @x4386 (unit-resolution (def-axiom (or $x3902 $x3838)) @x5698 $x3838) @x7398 $x4697)))
(let ((@x5937 (unit-resolution (mp ((_ quant-inst ?v0!11 ?v1!10) $x5849) @x5314 $x5846) @x6172 (unit-resolution (def-axiom (or $x2919 (not $x2039))) @x7356 (not $x2039)) @x7318 $x4677)))
(let ((@x6020 ((_ th-lemma arith farkas 1 -1 -1 1) @x5937 @x5800 (unit-resolution (def-axiom (or $x2919 $x3668)) @x7356 $x3668) @x7384 false)))
(let ((@x8163 (unit-resolution (def-axiom (or $x4054 $x3905 $x4048)) (unit-resolution (def-axiom (or $x4057 $x4051)) @x5453 $x4051) $x4051)))
(let ((@x8164 (unit-resolution @x8163 (lemma @x6020 $x3902) $x4048)))
(let ((@x8214 (unit-resolution (def-axiom (or $x4045 $x213)) @x8164 $x213)))
(let ((@x8302 (unit-resolution (def-axiom (or $x4045 $x3926)) @x8164 $x3926)))
(let (($x5115 (fun_app$ ?x212 ?v0!14)))
(let ((@x7409 (monotonicity (symm (hypothesis $x213) (= ?x212 v_b_Visited_G_2$)) (= $x5115 $x2133))))
(let (($x6262 (fun_app$ v_b_Visited_G_1$ ?v0!14)))
(let (($x5230 (= ?v0!14 v_b_v_G_1$)))
(let (($x7438 (or $x5230 $x6262)))
(let (($x7443 (= $x5115 $x7438)))
(let (($x3716 (forall ((?v0 B_Vertex_bool_fun$) (?v1 B_Vertex$) (?v2 Bool) (?v3 B_Vertex$) )(!(let (($x56 (fun_app$ (fun_app$a (fun_app$b (fun_upd$ ?v0) ?v1) ?v2) ?v3)))
(= $x56 (ite (= ?v3 ?v1) ?v2 (fun_app$ ?v0 ?v3)))) :pattern ( (fun_app$ (fun_app$a (fun_app$b (fun_upd$ ?v0) ?v1) ?v2) ?v3) )))
))
(let (($x1099 (forall ((?v0 B_Vertex_bool_fun$) (?v1 B_Vertex$) (?v2 Bool) (?v3 B_Vertex$) )(let (($x56 (fun_app$ (fun_app$a (fun_app$b (fun_upd$ ?v0) ?v1) ?v2) ?v3)))
(= $x56 (ite (= ?v3 ?v1) ?v2 (fun_app$ ?v0 ?v3)))))
))
(let (($x56 (fun_app$ (fun_app$a (fun_app$b (fun_upd$ ?3) ?2) ?1) ?0)))
(let (($x1095 (= $x56 (ite (= ?0 ?2) ?1 (fun_app$ ?3 ?0)))))
(let (($x61 (forall ((?v0 B_Vertex_bool_fun$) (?v1 B_Vertex$) (?v2 Bool) (?v3 B_Vertex$) )(let (($x56 (fun_app$ (fun_app$a (fun_app$b (fun_upd$ ?v0) ?v1) ?v2) ?v3)))
(= $x56 (ite (= ?v3 ?v1) ?v2 (fun_app$ ?v0 ?v3)))))
))
(let ((@x1098 (rewrite (= (= $x56 (ite (= ?0 ?2) ?1 (fun_app$ ?3 ?0))) $x1095))))
(let ((@x1104 (mp (mp (asserted $x61) (rewrite* (= $x61 $x61)) $x61) (quant-intro @x1098 (= $x61 $x1099)) $x1099)))
(let ((@x3721 (mp (mp~ @x1104 (nnf-pos (refl (~ $x1095 $x1095)) (~ $x1099 $x1099)) $x1099) (quant-intro (refl (= $x1095 $x1095)) (= $x1099 $x3716)) $x3716)))
(let (($x5105 (not $x3716)))
(let (($x7445 (or $x5105 $x7443)))
(let ((@x7444 (monotonicity (rewrite (= (ite $x5230 true $x6262) $x7438)) (= (= $x5115 (ite $x5230 true $x6262)) $x7443))))
(let ((@x7449 (monotonicity @x7444 (= (or $x5105 (= $x5115 (ite $x5230 true $x6262))) $x7445))))
(let ((@x7452 (trans @x7449 (rewrite (= $x7445 $x7445)) (= (or $x5105 (= $x5115 (ite $x5230 true $x6262))) $x7445))))
(let ((@x7453 (mp ((_ quant-inst v_b_Visited_G_1$ v_b_v_G_1$ true ?v0!14) (or $x5105 (= $x5115 (ite $x5230 true $x6262)))) @x7452 $x7445)))
(let (($x7425 (not $x7438)))
(let (($x6006 (not $x6262)))
(let (($x7455 (>= (+ ?x204 (* (- 1) ?x2136)) 0)))
(let (($x7487 (not $x7455)))
(let (($x5623 (>= (+ ?x204 (* (- 1) ?x2136) (b_G$ (pair$ v_b_v_G_1$ ?v0!14))) 0)))
(let (($x5890 (not $x5623)))
(let (($x6101 (<= (+ b_Infinity$ (* (- 1) (b_G$ (pair$ v_b_v_G_1$ ?v0!14)))) 0)))
(let (($x5590 (or $x6101 $x5623)))
(let (($x5624 (not $x5590)))
(let ((@x5806 (hypothesis $x3646)))
(let ((@x6086 (hypothesis $x3926)))
(let (($x5930 (or $x3931 $x5624 $x2137)))
(let ((?x6353 (b_G$ (pair$ v_b_v_G_1$ ?v0!14))))
(let ((?x6397 (* (- 1) ?x6353)))
(let ((?x1520 (* (- 1) ?x204)))
(let (($x6154 (<= (+ ?x2136 ?x1520 ?x6397) 0)))
(let (($x5925 (or $x3931 (or (not (or $x6101 $x6154)) $x2137))))
(let ((@x5231 (monotonicity (rewrite (= (+ ?x2136 ?x1520 ?x6397) (+ ?x1520 ?x2136 ?x6397))) (= $x6154 (<= (+ ?x1520 ?x2136 ?x6397) 0)))))
(let ((@x5207 (trans @x5231 (rewrite (= (<= (+ ?x1520 ?x2136 ?x6397) 0) $x5623)) (= $x6154 $x5623))))
(let ((@x5636 (monotonicity (monotonicity @x5207 (= (or $x6101 $x6154) $x5590)) (= (not (or $x6101 $x6154)) $x5624))))
(let ((@x5641 (monotonicity @x5636 (= (or (not (or $x6101 $x6154)) $x2137) (or $x5624 $x2137)))))
(let ((@x5869 (trans (monotonicity @x5641 (= $x5925 (or $x3931 (or $x5624 $x2137)))) (rewrite (= (or $x3931 (or $x5624 $x2137)) $x5930)) (= $x5925 $x5930))))
(let ((@x6877 (unit-resolution (def-axiom (or $x5590 $x5890)) (unit-resolution (mp ((_ quant-inst ?v0!14) $x5925) @x5869 $x5930) @x6086 @x5806 $x5624) $x5890)))
(let (($x5403 (= v_b_v_G_1$ ?v0!14)))
(let (($x5399 (<= ?x6353 0)))
(let ((@x6842 (hypothesis $x5890)))
(let ((@x7496 (unit-resolution ((_ th-lemma arith assign-bounds 1 1) (or $x5399 $x5623 $x7487)) (hypothesis $x7455) @x6842 $x5399)))
(let (($x3728 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(!(let (($x319 (not (<= (b_G$ (pair$ ?v0 ?v1)) 0))))
(let (($x64 (= ?v0 ?v1)))
(or $x64 $x319))) :pattern ( (pair$ ?v0 ?v1) )))
))
(let (($x330 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(let (($x319 (not (<= (b_G$ (pair$ ?v0 ?v1)) 0))))
(let (($x64 (= ?v0 ?v1)))
(or $x64 $x319))))
))
(let (($x319 (not (<= (b_G$ (pair$ ?1 ?0)) 0))))
(let (($x64 (= ?1 ?0)))
(let (($x325 (or $x64 $x319)))
(let (($x72 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(let (($x64 (= ?v0 ?v1)))
(let (($x69 (not $x64)))
(=> $x69 (< 0 (b_G$ (pair$ ?v0 ?v1)))))))
))
(let (($x69 (not $x64)))
(let (($x71 (=> $x69 (< 0 (b_G$ (pair$ ?1 ?0))))))
(let ((@x324 (monotonicity (rewrite (= (< 0 (b_G$ (pair$ ?1 ?0))) $x319)) (= $x71 (=> $x69 $x319)))))
(let ((@x332 (quant-intro (trans @x324 (rewrite (= (=> $x69 $x319) $x325)) (= $x71 $x325)) (= $x72 $x330))))
(let ((@x1765 (mp~ (mp (mp (asserted $x72) @x332 $x330) (rewrite* (= $x330 $x330)) $x330) (nnf-pos (refl (~ $x325 $x325)) (~ $x330 $x330)) $x330)))
(let ((@x3733 (mp @x1765 (quant-intro (refl (= $x325 $x325)) (= $x330 $x3728)) $x3728)))
(let (($x7466 (= (or (not $x3728) (or $x5403 (not $x5399))) (or (not $x3728) $x5403 (not $x5399)))))
(let ((@x7468 (mp ((_ quant-inst v_b_v_G_1$ ?v0!14) (or (not $x3728) (or $x5403 (not $x5399)))) (rewrite $x7466) (or (not $x3728) $x5403 (not $x5399)))))
(let ((@x7498 (unit-resolution (unit-resolution @x7468 @x3733 (or $x5403 (not $x5399))) @x7496 $x5403)))
(let ((@x7502 (unit-resolution ((_ th-lemma arith assign-bounds -1 1) (or (not (>= ?x6353 0)) $x5623 $x7487)) (hypothesis $x7455) @x6842 (not (>= ?x6353 0)))))
(let ((@x7506 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not (= ?x6353 0)) (>= ?x6353 0))) @x7502 (not (= ?x6353 0)))))
(let (($x3722 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(!(let (($x64 (= ?v0 ?v1)))
(let (($x69 (not $x64)))
(or $x69 (= (b_G$ (pair$ ?v0 ?v1)) 0)))) :pattern ( (pair$ ?v0 ?v1) )))
))
(let (($x314 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(let (($x64 (= ?v0 ?v1)))
(let (($x69 (not $x64)))
(or $x69 (= (b_G$ (pair$ ?v0 ?v1)) 0)))))
))
(let (($x311 (or $x69 (= (b_G$ (pair$ ?1 ?0)) 0))))
(let (($x68 (forall ((?v0 B_Vertex$) (?v1 B_Vertex$) )(let (($x64 (= ?v0 ?v1)))
(=> $x64 (= (b_G$ (pair$ ?v0 ?v1)) 0))))
))
(let ((@x316 (quant-intro (rewrite (= (=> $x64 (= (b_G$ (pair$ ?1 ?0)) 0)) $x311)) (= $x68 $x314))))
(let ((@x1760 (mp~ (mp (mp (asserted $x68) @x316 $x314) (rewrite* (= $x314 $x314)) $x314) (nnf-pos (refl (~ $x311 $x311)) (~ $x314 $x314)) $x314)))
(let ((@x3727 (mp @x1760 (quant-intro (refl (= $x311 $x311)) (= $x314 $x3722)) $x3722)))
(let (($x7472 (= (or (not $x3722) (or (not $x5403) (= ?x6353 0))) (or (not $x3722) (not $x5403) (= ?x6353 0)))))
(let ((@x7474 (mp ((_ quant-inst v_b_v_G_1$ ?v0!14) (or (not $x3722) (or (not $x5403) (= ?x6353 0)))) (rewrite $x7472) (or (not $x3722) (not $x5403) (= ?x6353 0)))))
(let ((@x7508 (unit-resolution (unit-resolution @x7474 @x3727 (or (not $x5403) (= ?x6353 0))) @x7506 @x7498 false)))
(let ((@x6970 (unit-resolution (def-axiom (or $x4057 $x3813)) @x5453 $x3813)))
(let ((@x7100 (rewrite (= (or $x3818 (or $x202 $x6006 $x7455)) (or $x3818 $x202 $x6006 $x7455)))))
(let ((@x7101 (mp ((_ quant-inst ?v0!14 v_b_v_G_1$) (or $x3818 (or $x202 $x6006 $x7455))) @x7100 (or $x3818 $x202 $x6006 $x7455))))
(let ((@x5643 (unit-resolution @x7101 @x6970 (hypothesis $x203) (hypothesis $x6262) (hypothesis $x7487) false)))
(let ((@x7476 (unit-resolution (lemma @x5643 (or $x6006 $x202 $x7455)) (unit-resolution (lemma @x7508 (or $x7487 $x5623)) @x6877 $x7487) (hypothesis $x203) $x6006)))
(let ((?x3394 (v_b_SP_G_2$ v_b_v_G_1$)))
(let (($x3329 (= ?x3394 ?x204)))
(let ((?x3404 (b_G$ (pair$ v_b_v_G_1$ v_b_v_G_1$))))
(let (($x3390 (>= ?x3404 0)))
(let (($x4586 (or (<= (+ b_Infinity$ (* (- 1) ?x3404)) 0) $x3390)))
(let (($x4394 (= ?x3404 0)))
(let (($x4439 (not $x3722)))
(let (($x4440 (or $x4439 $x4394)))
(let ((@x4427 (monotonicity (rewrite (= (= v_b_v_G_1$ v_b_v_G_1$) true)) (= (not (= v_b_v_G_1$ v_b_v_G_1$)) (not true)))))
(let ((@x4447 (trans @x4427 (rewrite (= (not true) false)) (= (not (= v_b_v_G_1$ v_b_v_G_1$)) false))))
(let ((@x4434 (monotonicity @x4447 (= (or (not (= v_b_v_G_1$ v_b_v_G_1$)) $x4394) (or false $x4394)))))
(let ((@x4438 (trans @x4434 (rewrite (= (or false $x4394) $x4394)) (= (or (not (= v_b_v_G_1$ v_b_v_G_1$)) $x4394) $x4394))))
(let ((@x4450 (monotonicity @x4438 (= (or $x4439 (or (not (= v_b_v_G_1$ v_b_v_G_1$)) $x4394)) $x4440))))
(let ((@x4451 (trans @x4450 (rewrite (= $x4440 $x4440)) (= (or $x4439 (or (not (= v_b_v_G_1$ v_b_v_G_1$)) $x4394)) $x4440))))
(let ((@x4452 (mp ((_ quant-inst v_b_v_G_1$ v_b_v_G_1$) (or $x4439 (or (not (= v_b_v_G_1$ v_b_v_G_1$)) $x4394))) @x4451 $x4440)))
(let ((@x4473 (lemma (unit-resolution @x4452 @x3727 (hypothesis (not $x4394)) false) $x4394)))
(let ((@x6229 (unit-resolution (def-axiom (or $x4586 (not $x3390))) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4394) $x3390)) @x4473 $x3390) $x4586)))
(let (($x4589 (not $x4586)))
(let (($x5387 (or $x3931 $x4589 $x3329)))
(let (($x3393 (<= (+ ?x204 ?x1520 (* (- 1) ?x3404)) 0)))
(let (($x3330 (or (not (or (<= (+ b_Infinity$ (* (- 1) ?x3404)) 0) $x3393)) $x3329)))
(let (($x4517 (or $x3931 $x3330)))
(let (($x4592 (= (not (or (<= (+ b_Infinity$ (* (- 1) ?x3404)) 0) $x3393)) $x4589)))
(let ((@x3389 (monotonicity (rewrite (= (+ ?x204 ?x1520 (* (- 1) ?x3404)) (* (- 1) ?x3404))) (= $x3393 (<= (* (- 1) ?x3404) 0)))))
(let ((@x3371 (trans @x3389 (rewrite (= (<= (* (- 1) ?x3404) 0) $x3390)) (= $x3393 $x3390))))
(let ((@x5175 (monotonicity @x3371 (= (or (<= (+ b_Infinity$ (* (- 1) ?x3404)) 0) $x3393) $x4586))))
(let ((@x4575 (monotonicity (monotonicity (monotonicity @x5175 $x4592) (= $x3330 (or $x4589 $x3329))) (= $x4517 (or $x3931 (or $x4589 $x3329))))))
(let ((@x5481 (trans @x4575 (rewrite (= (or $x3931 (or $x4589 $x3329)) $x5387)) (= $x4517 $x5387))))
(let ((@x6230 (unit-resolution (mp ((_ quant-inst v_b_v_G_1$) $x4517) @x5481 $x5387) @x6086 @x6229 $x3329)))
(let ((@x7480 (trans (monotonicity (hypothesis $x5230) (= ?x2135 ?x3394)) (hypothesis $x3329) (= ?x2135 ?x204))))
(let ((@x7483 (trans @x7480 (symm (monotonicity (hypothesis $x5230) (= ?x2136 ?x204)) (= ?x204 ?x2136)) $x2137)))
(let ((@x7489 (lemma (unit-resolution @x5806 @x7483 false) (or (not $x5230) $x2137 (not $x3329)))))
(let ((@x7479 (unit-resolution (def-axiom (or $x7425 $x5230 $x6262)) (unit-resolution @x7489 @x5806 @x6230 (not $x5230)) (or $x7425 $x6262))))
(let ((@x7373 (unit-resolution (def-axiom (or (not $x7443) (not $x5115) $x7438)) (unit-resolution @x7479 @x7476 $x7425) (unit-resolution @x7453 @x3721 $x7443) (not $x5115))))
(let ((@x7491 (unit-resolution @x7373 (mp (hypothesis $x2133) (symm @x7409 (= $x2133 $x5115)) $x5115) false)))
(let ((@x5912 (unit-resolution (lemma @x7491 (or $x2134 $x3196 $x202 $x3931 $x2137)) (unit-resolution (def-axiom (or $x4045 $x203)) @x8164 $x203) @x8302 @x8214 $x2138)))
(let ((@x8165 (unit-resolution (def-axiom (or $x4045 $x3918)) @x8164 $x3918)))
(let ((?x6546 (b_G$ (pair$ v_b_v_G_1$ ?v0!13))))
(let ((?x2118 (v_b_SP_G_2$ ?v0!13)))
(let ((?x2119 (* (- 1) ?x2118)))
(let ((?x6581 (+ ?x204 ?x2119 ?x6546)))
(let (($x6584 (= ?x6581 0)))
(let (($x6576 (>= (+ ?x204 (* (- 1) (fun_app$c v_b_SP_G_1$ ?v0!13)) ?x6546) 0)))
(let (($x6555 (<= (+ b_Infinity$ (* (- 1) ?x6546)) 0)))
(let (($x6633 (or $x6555 $x6576)))
(let (($x6635 (not $x6633)))
(let (($x6716 (not (= (fun_app$c v_b_SP_G_1$ ?v0!13) ?x2118))))
(let ((?x2117 (fun_app$c v_b_SP_G_1$ ?v0!13)))
(let (($x6631 (= ?x2118 ?x2117)))
(let ((@x6726 (monotonicity (commutativity (= (= ?x2117 ?x2118) $x6631)) (= $x6716 (not $x6631)))))
(let ((@x6727 (mp (unit-resolution ((_ th-lemma arith triangle-eq) (or $x6716 $x2121)) (hypothesis $x2122) $x6716) @x6726 (not $x6631))))
(let (($x6620 (or $x6635 $x6631)))
(let (($x6613 (or $x3931 $x6635 $x6631)))
(let (($x6614 (or $x3931 (or (not (or $x6555 (<= (+ ?x2117 ?x1520 (* (- 1) ?x6546)) 0))) $x6631))))
(let (($x6610 (= (or (not (or $x6555 (<= (+ ?x2117 ?x1520 (* (- 1) ?x6546)) 0))) $x6631) $x6620)))
(let (($x6556 (<= (+ ?x2117 ?x1520 (* (- 1) ?x6546)) 0)))
(let ((@x6595 (rewrite (= (+ ?x2117 ?x1520 (* (- 1) ?x6546)) (+ ?x1520 ?x2117 (* (- 1) ?x6546))))))
(let ((@x6574 (monotonicity @x6595 (= $x6556 (<= (+ ?x1520 ?x2117 (* (- 1) ?x6546)) 0)))))
(let ((@x6580 (trans @x6574 (rewrite (= (<= (+ ?x1520 ?x2117 (* (- 1) ?x6546)) 0) $x6576)) (= $x6556 $x6576))))
(let ((@x6619 (monotonicity (monotonicity @x6580 (= (or $x6555 $x6556) $x6633)) (= (not (or $x6555 $x6556)) $x6635))))
(let ((@x6624 (trans (monotonicity (monotonicity @x6619 $x6610) (= $x6614 (or $x3931 $x6620))) (rewrite (= (or $x3931 $x6620) $x6613)) (= $x6614 $x6613))))
(let ((@x6732 (unit-resolution (unit-resolution (mp ((_ quant-inst ?v0!13) $x6614) @x6624 $x6613) @x6086 $x6620) @x6727 $x6635)))
(let (($x6587 (or $x6555 $x6576 $x6584)))
(let ((@x4512 (hypothesis $x3918)))
(let (($x6590 (or $x3923 $x6555 $x6576 $x6584)))
(let (($x6591 (or $x3923 (or $x6555 $x6556 (= (+ ?x204 ?x6546 ?x2119) 0)))))
(let ((@x6586 (monotonicity (rewrite (= (+ ?x204 ?x6546 ?x2119) ?x6581)) (= (= (+ ?x204 ?x6546 ?x2119) 0) $x6584))))
(let ((@x6589 (monotonicity @x6580 @x6586 (= (or $x6555 $x6556 (= (+ ?x204 ?x6546 ?x2119) 0)) $x6587))))
(let ((@x6601 (trans (monotonicity @x6589 (= $x6591 (or $x3923 $x6587))) (rewrite (= (or $x3923 $x6587) $x6590)) (= $x6591 $x6590))))
(let ((@x6735 (unit-resolution (unit-resolution (mp ((_ quant-inst ?v0!13) $x6591) @x6601 $x6590) @x4512 $x6587) (unit-resolution (def-axiom (or $x6633 (not $x6576))) @x6732 (not $x6576)) (unit-resolution (def-axiom (or $x6633 (not $x6555))) @x6732 (not $x6555)) $x6584)))
(let ((@x6746 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x6584) (>= ?x6581 0))) @x6735 (>= ?x6581 0))))
(let ((@x6748 (unit-resolution ((_ th-lemma arith farkas 1 1) (or (<= (+ ?x2117 ?x2119) 0) $x2121)) (hypothesis $x2122) (<= (+ ?x2117 ?x2119) 0))))
(let ((@x6749 ((_ th-lemma arith farkas 1 -1 1) @x6748 (unit-resolution (def-axiom (or $x6633 (not $x6576))) @x6732 (not $x6576)) @x6746 false)))
(let ((@x8304 (unit-resolution (def-axiom (or $x4042 $x2122 $x4036)) (unit-resolution (lemma @x6749 (or $x2121 $x3923 $x3931)) @x8165 @x8302 $x2121) (unit-resolution (def-axiom (or $x4045 $x4039)) @x8164 $x4039) $x4036)))
(let ((@x8619 (unit-resolution (def-axiom (or $x4030 $x2139 $x4024)) (unit-resolution (def-axiom (or $x4033 $x4027)) @x8304 $x4027) $x4027)))
(let ((@x10488 (unit-resolution @x8619 (lemma (unit-resolution @x5912 @x8820 @x8891 false) $x2138) $x4024)))
(let ((@x10489 (unit-resolution (def-axiom (or $x4021 $x3943)) @x10488 $x3943)))
(let (($x4687 (= ?v0!17 v_b_v_G_1$)))
(let (($x4718 (fun_app$ v_b_Visited_G_1$ ?v0!17)))
(let (($x7386 (or $x4687 $x4718)))
(let (($x4686 (fun_app$ ?x212 ?v0!17)))
(let (($x7429 (= $x4686 $x7386)))
(let (($x7431 (or $x5105 $x7429)))
(let ((@x7423 (monotonicity (rewrite (= (ite $x4687 true $x4718) $x7386)) (= (= $x4686 (ite $x4687 true $x4718)) $x7429))))
(let ((@x7457 (monotonicity @x7423 (= (or $x5105 (= $x4686 (ite $x4687 true $x4718))) $x7431))))
(let ((@x7375 (trans @x7457 (rewrite (= $x7431 $x7431)) (= (or $x5105 (= $x4686 (ite $x4687 true $x4718))) $x7431))))
(let ((@x7402 (mp ((_ quant-inst v_b_Visited_G_1$ v_b_v_G_1$ true ?v0!17) (or $x5105 (= $x4686 (ite $x4687 true $x4718)))) @x7375 $x7431)))
(let ((@x8181 (symm (monotonicity (symm @x8214 (= ?x212 v_b_Visited_G_2$)) (= $x4686 $x2168)) (= $x2168 $x4686))))
(let ((@x8115 (mp (unit-resolution (def-axiom (or $x3034 $x2168)) (hypothesis $x3039) $x2168) @x8181 $x4686)))
(let ((@x8116 (unit-resolution (def-axiom (or (not $x7429) (not $x4686) $x7386)) @x8115 (unit-resolution @x7402 @x3721 $x7429) $x7386)))
(let (($x7513 (not $x4718)))
(let (($x8244 (>= (+ ?x204 (* (- 1) (fun_app$c v_b_SP_G_1$ ?v0!17))) 0)))
(let (($x8196 (not $x8244)))
(let (($x7753 (<= (+ ?x204 (* (- 1) (fun_app$c v_b_SP_G_1$ ?v1!16))) 0)))
(let (($x4600 (fun_app$ v_b_Visited_G_1$ ?v1!16)))
(let (($x4599 (= ?v1!16 v_b_v_G_1$)))
(let (($x7324 (or $x4599 $x4600)))
(let (($x4598 (fun_app$ ?x212 ?v1!16)))
(let (($x7351 (= $x4598 $x7324)))
(let (($x5310 (or $x5105 $x7351)))
(let ((@x4543 (monotonicity (rewrite (= (ite $x4599 true $x4600) $x7324)) (= (= $x4598 (ite $x4599 true $x4600)) $x7351))))
(let ((@x7173 (monotonicity @x4543 (= (or $x5105 (= $x4598 (ite $x4599 true $x4600))) $x5310))))
(let ((@x7233 (trans @x7173 (rewrite (= $x5310 $x5310)) (= (or $x5105 (= $x4598 (ite $x4599 true $x4600))) $x5310))))
(let ((@x7234 (mp ((_ quant-inst v_b_Visited_G_1$ v_b_v_G_1$ true ?v1!16) (or $x5105 (= $x4598 (ite $x4599 true $x4600)))) @x7233 $x5310)))
(let ((@x8188 (symm (monotonicity (symm @x8214 (= ?x212 v_b_Visited_G_2$)) (= $x4598 $x2166)) (= $x2166 $x4598))))
(let (($x2167 (not $x2166)))
(let ((@x8189 (hypothesis $x3039)))
(let ((@x7882 (mp (unit-resolution (def-axiom (or $x3034 $x2167)) @x8189 $x2167) (monotonicity @x8188 (= $x2167 (not $x4598))) (not $x4598))))
(let ((@x7883 (unit-resolution (def-axiom (or (not $x7351) $x4598 (not $x7324))) @x7882 (unit-resolution @x7234 @x3721 $x7351) (not $x7324))))
(let (($x7758 (or $x4600 $x7753)))
(let (($x7761 (or $x3913 $x4600 $x7753)))
(let (($x7762 (or $x3913 (or $x4600 (>= (+ (fun_app$c v_b_SP_G_1$ ?v1!16) ?x1520) 0)))))
(let (($x7759 (= (or $x4600 (>= (+ (fun_app$c v_b_SP_G_1$ ?v1!16) ?x1520) 0)) $x7758)))
(let ((@x7755 (rewrite (= (>= (+ ?x1520 (fun_app$c v_b_SP_G_1$ ?v1!16)) 0) $x7753))))
(let (($x5376 (>= (+ (fun_app$c v_b_SP_G_1$ ?v1!16) ?x1520) 0)))
(let (($x7728 (= (+ (fun_app$c v_b_SP_G_1$ ?v1!16) ?x1520) (+ ?x1520 (fun_app$c v_b_SP_G_1$ ?v1!16)))))
(let ((@x7751 (monotonicity (rewrite $x7728) (= $x5376 (>= (+ ?x1520 (fun_app$c v_b_SP_G_1$ ?v1!16)) 0)))))
(let ((@x7766 (monotonicity (monotonicity (trans @x7751 @x7755 (= $x5376 $x7753)) $x7759) (= $x7762 (or $x3913 $x7758)))))
(let ((@x7771 (mp ((_ quant-inst ?v1!16) $x7762) (trans @x7766 (rewrite (= (or $x3913 $x7758) $x7761)) (= $x7762 $x7761)) $x7761)))
(let ((@x7873 (unit-resolution @x7771 (unit-resolution (def-axiom (or $x4045 $x3908)) @x8164 $x3908) $x7758)))
(let ((@x7874 (unit-resolution @x7873 (unit-resolution (def-axiom (or $x7324 (not $x4600))) @x7883 (not $x4600)) $x7753)))
(let ((?x4523 (b_G$ (pair$ v_b_v_G_1$ ?v1!16))))
(let (($x8224 (<= ?x4523 0)))
(let (($x8225 (not $x8224)))
(let (($x8223 (= v_b_v_G_1$ ?v1!16)))
(let (($x8293 (not $x8223)))
(let ((@x8351 (unit-resolution (hypothesis (not $x4599)) (symm (hypothesis $x8223) $x4599) false)))
(let ((@x7877 (unit-resolution (lemma @x8351 (or $x8293 $x4599)) (unit-resolution (def-axiom (or $x7324 (not $x4599))) @x7883 (not $x4599)) $x8293)))
(let ((@x8233 (rewrite (= (or (not $x3728) (or $x8223 $x8225)) (or (not $x3728) $x8223 $x8225)))))
(let ((@x8234 (mp ((_ quant-inst v_b_v_G_1$ ?v1!16) (or (not $x3728) (or $x8223 $x8225))) @x8233 (or (not $x3728) $x8223 $x8225))))
(let ((@x6202 (lemma (unit-resolution @x8234 @x3733 (hypothesis $x8224) (hypothesis $x8293) false) (or $x8225 $x8223))))
(let (($x3634 (not $x2175)))
(let ((@x8299 (hypothesis $x3634)))
(let (($x7624 (<= (+ (v_b_SP_G_2$ ?v0!17) (* (- 1) (fun_app$c v_b_SP_G_1$ ?v0!17))) 0)))
(let ((@x8305 (unit-resolution (def-axiom (or $x4033 $x3934)) @x8304 $x3934)))
(let (($x7629 (or $x3939 $x7624)))
(let (($x5070 (>= (+ (fun_app$c v_b_SP_G_1$ ?v0!17) (* (- 1) (v_b_SP_G_2$ ?v0!17))) 0)))
(let (($x7620 (>= (+ (* (- 1) (v_b_SP_G_2$ ?v0!17)) (fun_app$c v_b_SP_G_1$ ?v0!17)) 0)))
(let (($x7616 (= (+ (fun_app$c v_b_SP_G_1$ ?v0!17) (* (- 1) (v_b_SP_G_2$ ?v0!17))) (+ (* (- 1) (v_b_SP_G_2$ ?v0!17)) (fun_app$c v_b_SP_G_1$ ?v0!17)))))
(let ((@x7628 (trans (monotonicity (rewrite $x7616) (= $x5070 $x7620)) (rewrite (= $x7620 $x7624)) (= $x5070 $x7624))))
(let ((@x7636 (trans (monotonicity @x7628 (= (or $x3939 $x5070) $x7629)) (rewrite (= $x7629 $x7629)) (= (or $x3939 $x5070) $x7629))))
(let ((@x8222 (hypothesis $x8244)))
(let (($x7884 (or $x8196 $x2175 (not (<= (+ ?x204 (* (- 1) (v_b_SP_G_2$ ?v1!16)) ?x4523) 0)) $x8224 (not $x7624))))
(let ((@x8211 (unit-resolution ((_ th-lemma arith assign-bounds 1 1 1 1) $x7884) @x8222 (unit-resolution (mp ((_ quant-inst ?v0!17) (or $x3939 $x5070)) @x7636 $x7629) @x8305 $x7624) (hypothesis $x8225) @x8299 (not (<= (+ ?x204 (* (- 1) (v_b_SP_G_2$ ?v1!16)) ?x4523) 0)))))
(let (($x8251 (or (not (= (+ ?x204 (* (- 1) (v_b_SP_G_2$ ?v1!16)) ?x4523) 0)) (<= (+ ?x204 (* (- 1) (v_b_SP_G_2$ ?v1!16)) ?x4523) 0))))
(let ((@x8191 (unit-resolution ((_ th-lemma arith triangle-eq) $x8251) @x8211 (not (= (+ ?x204 (* (- 1) (v_b_SP_G_2$ ?v1!16)) ?x4523) 0)))))
(let (($x7559 (>= (+ ?x204 ?x4523 (* (- 1) (fun_app$c v_b_SP_G_1$ ?v1!16))) 0)))
(let (($x4525 (<= (+ b_Infinity$ (* (- 1) ?x4523)) 0)))
(let (($x7564 (or $x4525 $x7559)))
(let (($x7567 (not $x7564)))
(let (($x7592 (>= (+ (v_b_SP_G_2$ ?v1!16) (* (- 1) (fun_app$c v_b_SP_G_1$ ?v1!16))) 0)))
(let ((@x8198 ((_ th-lemma arith farkas -1 -1 1 1 1) (hypothesis $x7592) @x8222 (unit-resolution (mp ((_ quant-inst ?v0!17) (or $x3939 $x5070)) @x7636 $x7629) @x8305 $x7624) @x8299 (hypothesis $x7753) false)))
(let ((@x8177 (unit-resolution (lemma @x8198 (or $x8196 (not $x7592) $x2175 (not $x7753))) @x8222 @x8299 (hypothesis $x7753) (not $x7592))))
(let (($x8284 (or (not (= (v_b_SP_G_2$ ?v1!16) (fun_app$c v_b_SP_G_1$ ?v1!16))) $x7592)))
(let ((@x8185 (unit-resolution ((_ th-lemma arith triangle-eq) $x8284) @x8177 (not (= (v_b_SP_G_2$ ?v1!16) (fun_app$c v_b_SP_G_1$ ?v1!16))))))
(let ((?x4855 (fun_app$c v_b_SP_G_1$ ?v1!16)))
(let ((?x2171 (v_b_SP_G_2$ ?v1!16)))
(let (($x4497 (= ?x2171 ?x4855)))
(let (($x7570 (or $x7567 $x4497)))
(let (($x7573 (or $x3931 $x7567 $x4497)))
(let (($x7574 (or $x3931 (or (not (or $x4525 (<= (+ ?x4855 ?x1520 (* (- 1) ?x4523)) 0))) $x4497))))
(let (($x7571 (= (or (not (or $x4525 (<= (+ ?x4855 ?x1520 (* (- 1) ?x4523)) 0))) $x4497) $x7570)))
(let (($x4527 (<= (+ ?x4855 ?x1520 (* (- 1) ?x4523)) 0)))
(let ((@x7554 (rewrite (= (+ ?x4855 ?x1520 (* (- 1) ?x4523)) (+ ?x1520 (* (- 1) ?x4523) ?x4855)))))
(let ((@x7557 (monotonicity @x7554 (= $x4527 (<= (+ ?x1520 (* (- 1) ?x4523) ?x4855) 0)))))
(let ((@x7563 (trans @x7557 (rewrite (= (<= (+ ?x1520 (* (- 1) ?x4523) ?x4855) 0) $x7559)) (= $x4527 $x7559))))
(let ((@x7569 (monotonicity (monotonicity @x7563 (= (or $x4525 $x4527) $x7564)) (= (not (or $x4525 $x4527)) $x7567))))
(let ((@x7582 (trans (monotonicity (monotonicity @x7569 $x7571) (= $x7574 (or $x3931 $x7570))) (rewrite (= (or $x3931 $x7570) $x7573)) (= $x7574 $x7573))))
(let ((@x7879 (unit-resolution (unit-resolution (mp ((_ quant-inst ?v1!16) $x7574) @x7582 $x7573) @x8302 $x7570) @x8185 $x7567)))
(let ((?x7593 (+ ?x204 (* (- 1) ?x2171) ?x4523)))
(let (($x7596 (= ?x7593 0)))
(let (($x7599 (or $x4525 $x7559 $x7596)))
(let (($x7602 (or $x3923 $x4525 $x7559 $x7596)))
(let (($x7603 (or $x3923 (or $x4525 $x4527 (= (+ ?x204 ?x4523 (* (- 1) ?x2171)) 0)))))
(let ((@x7598 (monotonicity (rewrite (= (+ ?x204 ?x4523 (* (- 1) ?x2171)) ?x7593)) (= (= (+ ?x204 ?x4523 (* (- 1) ?x2171)) 0) $x7596))))
(let ((@x7601 (monotonicity @x7563 @x7598 (= (or $x4525 $x4527 (= (+ ?x204 ?x4523 (* (- 1) ?x2171)) 0)) $x7599))))
(let ((@x7611 (trans (monotonicity @x7601 (= $x7603 (or $x3923 $x7599))) (rewrite (= (or $x3923 $x7599) $x7602)) (= $x7603 $x7602))))
(let ((@x7886 (unit-resolution (unit-resolution (mp ((_ quant-inst ?v1!16) $x7603) @x7611 $x7602) @x8165 $x7599) (unit-resolution (def-axiom (or $x7564 (not $x7559))) @x7879 (not $x7559)) (unit-resolution (def-axiom (or $x7564 (not $x4525))) @x7879 (not $x4525)) @x8191 false)))
(let ((@x7891 (unit-resolution (lemma @x7886 (or $x8196 $x8224 $x2175 (not $x7753))) (unit-resolution @x6202 @x7877 $x8225) (unit-resolution (def-axiom (or $x3034 $x3634)) @x8189 $x3634) @x7874 $x8196)))
(let ((@x8258 (rewrite (= (or $x3818 (or $x202 $x7513 $x8244)) (or $x3818 $x202 $x7513 $x8244)))))
(let ((@x8259 (mp ((_ quant-inst ?v0!17 v_b_v_G_1$) (or $x3818 (or $x202 $x7513 $x8244))) @x8258 (or $x3818 $x202 $x7513 $x8244))))
(let ((@x8237 (unit-resolution @x8259 @x6970 (unit-resolution (def-axiom (or $x4045 $x203)) @x8164 $x203) (hypothesis $x4718) (hypothesis $x8196) false)))
(let ((@x7896 (unit-resolution (def-axiom (or (not $x7386) $x4687 $x4718)) (unit-resolution (lemma @x8237 (or $x7513 $x8244)) @x7891 $x7513) @x8116 $x4687)))
(let ((?x2172 (v_b_SP_G_2$ ?v0!17)))
(let (($x8143 (= ?x2172 ?x3394)))
(let (($x8113 (not $x8143)))
(let (($x3298 (>= (+ ?x204 (* (- 1) ?x3394)) 0)))
(let ((@x8142 (unit-resolution ((_ quant-inst v_b_v_G_1$) (or $x3939 $x3298)) @x8305 $x3298)))
(let (($x7700 (>= (+ ?x2172 (* (- 1) (fun_app$c v_b_SP_G_1$ ?v0!17))) 0)))
(let ((?x4678 (fun_app$c v_b_SP_G_1$ ?v0!17)))
(let (($x4679 (= ?x2172 ?x4678)))
(let ((@x7441 (mp ((_ quant-inst ?v0!17) (or $x3948 (or $x3019 $x4679))) (rewrite (= (or $x3948 (or $x3019 $x4679)) (or $x3948 $x3019 $x4679))) (or $x3948 $x3019 $x4679))))
(let ((@x7894 (unit-resolution @x7441 (hypothesis $x3943) (unit-resolution (def-axiom (or $x3034 $x2168)) @x8189 $x2168) $x4679)))
(let (($x7901 (or $x8244 (not (<= (+ ?x2172 (* (- 1) ?x3394)) 0)) (not $x7700) (not $x3298))))
(let ((@x5877 (unit-resolution ((_ th-lemma arith assign-bounds 1 -1 -1) $x7901) @x7891 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4679) $x7700)) @x7894 $x7700) @x8142 (not (<= (+ ?x2172 (* (- 1) ?x3394)) 0)))))
(let ((@x5587 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x8113 (<= (+ ?x2172 (* (- 1) ?x3394)) 0))) @x5877 $x8113)))
(let ((@x8137 (unit-resolution (hypothesis $x8113) (monotonicity (hypothesis $x4687) $x8143) false)))
(let ((@x5143 (lemma (unit-resolution (lemma @x8137 (or (not $x4687) $x8143)) @x5587 @x7896 false) (or $x3034 $x3948))))
(let ((@x7027 (hypothesis $x2154)))
(let ((@x5873 (hypothesis $x4048)))
(let ((@x5974 (unit-resolution (def-axiom (or $x4045 $x3926)) @x5873 $x3926)))
(let ((@x5247 (unit-resolution (def-axiom (or $x4045 $x3918)) @x5873 $x3918)))
(let ((?x6040 (b_G$ (pair$ v_b_v_G_1$ ?v0!15))))
(let ((?x6162 (+ ?x204 (* (- 1) ?x2152) ?x6040)))
(let (($x5552 (= ?x6162 0)))
(let (($x7159 (not $x5552)))
(let (($x6237 (<= ?x6162 0)))
(let (($x7034 (not $x6237)))
(let ((?x3280 (?v1!7 v_b_v_G_1$)))
(let ((?x3281 (fun_app$c v_b_SP_G_1$ ?x3280)))
(let ((?x3282 (* (- 1) ?x3281)))
(let (($x4633 (<= (+ b_Infinity$ ?x3282) 0)))
(let (($x6507 (not $x4633)))
(let (($x4951 (>= (+ ?x204 ?x3282) 0)))
(let (($x3284 (<= (+ ?x204 ?x3282) 0)))
(let (($x4138 (not $x3284)))
(let (($x4244 (fun_app$ v_b_Visited_G_1$ b_Source$)))
(let (($x5095 (not $x4244)))
(let (($x3279 (= v_b_v_G_1$ b_Source$)))
(let (($x6104 (not (= (+ ?x204 (* (- 1) (b_G$ (pair$ ?x3280 v_b_v_G_1$))) ?x3282) 0))))
(let (($x5949 (or $x3284 (not (fun_app$ v_b_Visited_G_1$ ?x3280)) $x6104)))
(let (($x4583 (not $x5949)))
(let (($x4896 (or $x3834 $x3279 $x1522 $x4583)))
(let (($x4103 (not (= (+ ?x204 ?x3282 (* (- 1) (b_G$ (pair$ ?x3280 v_b_v_G_1$)))) 0))))
(let (($x4106 (or $x3279 $x1522 (not (or $x3284 (not (fun_app$ v_b_Visited_G_1$ ?x3280)) $x4103)))))
(let (($x4926 (or $x3834 $x4106)))
(let (($x4565 (= (not (or $x3284 (not (fun_app$ v_b_Visited_G_1$ ?x3280)) $x4103)) $x4583)))
(let (($x5863 (= (= (+ ?x204 ?x3282 (* (- 1) (b_G$ (pair$ ?x3280 v_b_v_G_1$)))) 0) (= (+ ?x204 (* (- 1) (b_G$ (pair$ ?x3280 v_b_v_G_1$))) ?x3282) 0))))
(let (($x5947 (= (+ ?x204 ?x3282 (* (- 1) (b_G$ (pair$ ?x3280 v_b_v_G_1$)))) (+ ?x204 (* (- 1) (b_G$ (pair$ ?x3280 v_b_v_G_1$))) ?x3282))))
(let ((@x5489 (monotonicity (monotonicity (monotonicity (rewrite $x5947) $x5863) (= $x4103 $x6104)) (= (or $x3284 (not (fun_app$ v_b_Visited_G_1$ ?x3280)) $x4103) $x5949))))
(let ((@x4548 (monotonicity (monotonicity (monotonicity @x5489 $x4565) (= $x4106 (or $x3279 $x1522 $x4583))) (= $x4926 (or $x3834 (or $x3279 $x1522 $x4583))))))
(let ((@x4802 (trans @x4548 (rewrite (= (or $x3834 (or $x3279 $x1522 $x4583)) $x4896)) (= $x4926 $x4896))))
(let ((@x6065 (unit-resolution (mp ((_ quant-inst v_b_v_G_1$) $x4926) @x4802 $x4896) @x4406 (unit-resolution (def-axiom (or $x4045 $x1525)) @x5873 $x1525) (unit-resolution (def-axiom (or $x5949 $x4138)) (hypothesis $x3284) $x5949) $x3279)))
(let ((@x5493 (mp (unit-resolution (def-axiom (or $x4045 $x203)) @x5873 $x203) (monotonicity (monotonicity @x6065 (= $x202 $x4244)) (= $x203 $x5095)) $x5095)))
(let ((@x5435 (unit-resolution (def-axiom (or $x4042 $x2122 $x4036)) (unit-resolution (lemma @x6749 (or $x2121 $x3923 $x3931)) @x5247 @x5974 $x2121) (unit-resolution (def-axiom (or $x4045 $x4039)) @x5873 $x4039) $x4036)))
(let ((@x7140 (symm (commutativity (= (= b_Source$ ?v0!15) (= ?v0!15 b_Source$))) (= (= ?v0!15 b_Source$) (= b_Source$ ?v0!15)))))
(let ((@x7142 (monotonicity @x7140 (= (not (= ?v0!15 b_Source$)) (not (= b_Source$ ?v0!15))))))
(let (($x6380 (= ?v0!15 b_Source$)))
(let (($x6990 (not $x6380)))
(let (($x6954 (or $x6380 (fun_app$ v_b_Visited_G_1$ ?v0!15))))
(let ((?x6005 (fun_app$a (fun_app$b (fun_upd$ v_b_Visited_G_1$) b_Source$) true)))
(let (($x6887 (fun_app$ ?x6005 ?v0!15)))
(let (($x6951 (= $x6887 $x6954)))
(let (($x6959 (or $x5105 $x6951)))
(let (($x6960 (or $x5105 (= $x6887 (ite $x6380 true (fun_app$ v_b_Visited_G_1$ ?v0!15))))))
(let (($x6957 (= (= $x6887 (ite $x6380 true (fun_app$ v_b_Visited_G_1$ ?v0!15))) $x6951)))
(let ((@x6956 (rewrite (= (ite $x6380 true (fun_app$ v_b_Visited_G_1$ ?v0!15)) $x6954))))
(let ((@x6989 (trans (monotonicity (monotonicity @x6956 $x6957) (= $x6960 $x6959)) (rewrite (= $x6959 $x6959)) (= $x6960 $x6959))))
(let (($x6793 (= (fun_app$b (fun_upd$ v_b_Visited_G_1$) b_Source$) (fun_app$b (fun_upd$ v_b_Visited_G_1$) v_b_v_G_1$))))
(let ((@x5780 (hypothesis $x3279)))
(let ((@x5781 (symm @x5780 (= b_Source$ v_b_v_G_1$))))
(let ((@x6803 (trans (monotonicity (monotonicity @x5781 $x6793) (= ?x6005 ?x212)) (symm (hypothesis $x213) (= ?x212 v_b_Visited_G_2$)) (= ?x6005 v_b_Visited_G_2$))))
(let ((@x7131 (symm (monotonicity @x6803 (= $x6887 (fun_app$ v_b_Visited_G_2$ ?v0!15))) (= (fun_app$ v_b_Visited_G_2$ ?v0!15) $x6887))))
(let ((@x7133 (monotonicity @x7131 (= (not (fun_app$ v_b_Visited_G_2$ ?v0!15)) (not $x6887)))))
(let (($x5938 (fun_app$ v_b_Visited_G_2$ ?v0!15)))
(let (($x5943 (not $x5938)))
(let ((?x5971 (fun_app$c v_b_SP_G_1$ ?v0!15)))
(let (($x6392 (>= ?x5971 0)))
(let ((@x5502 (unit-resolution (def-axiom (or $x4057 $x3804)) @x5453 $x3804)))
(let ((@x7119 ((_ th-lemma arith assign-bounds -1 1) (or (not (>= (+ ?x2152 (* (- 1) ?x5971)) 0)) $x2153 (not $x6392)))))
(let ((@x7120 (unit-resolution @x7119 (unit-resolution ((_ quant-inst ?v0!15) (or $x3809 $x6392)) @x5502 $x6392) @x7027 (not (>= (+ ?x2152 (* (- 1) ?x5971)) 0)))))
(let ((@x7123 ((_ th-lemma arith triangle-eq) (or (not (= ?x2152 ?x5971)) (>= (+ ?x2152 (* (- 1) ?x5971)) 0)))))
(let (($x5994 (= (or $x3948 (or $x5943 (= ?x2152 ?x5971))) (or $x3948 $x5943 (= ?x2152 ?x5971)))))
(let ((@x6100 (mp ((_ quant-inst ?v0!15) (or $x3948 (or $x5943 (= ?x2152 ?x5971)))) (rewrite $x5994) (or $x3948 $x5943 (= ?x2152 ?x5971)))))
(let ((@x7127 (unit-resolution (unit-resolution @x6100 (hypothesis $x3943) (or $x5943 (= ?x2152 ?x5971))) (unit-resolution @x7123 @x7120 (not (= ?x2152 ?x5971))) $x5943)))
(let ((@x7135 (unit-resolution (def-axiom (or (not $x6951) $x6887 (not $x6954))) (mp @x7127 @x7133 (not $x6887)) (unit-resolution (mp ((_ quant-inst v_b_Visited_G_1$ b_Source$ true ?v0!15) $x6960) @x6989 $x6959) @x3721 $x6951) (not $x6954))))
(let ((@x7143 (mp (unit-resolution (def-axiom (or $x6954 $x6990)) @x7135 $x6990) @x7142 (not (= b_Source$ ?v0!15)))))
(let ((?x7024 (b_G$ (pair$ b_Source$ ?v0!15))))
(let (($x7048 (<= ?x7024 0)))
(let (($x7084 (>= (+ ?x6040 (* (- 1) ?x7024)) 0)))
(let ((@x7145 (monotonicity @x5781 (= (pair$ b_Source$ ?v0!15) (pair$ v_b_v_G_1$ ?v0!15)))))
(let ((@x7152 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not (= ?x6040 ?x7024)) $x7084)) (symm (monotonicity @x7145 (= ?x7024 ?x6040)) (= ?x6040 ?x7024)) $x7084)))
(let (($x6014 (<= (+ ?x119 ?x1520) 0)))
(let ((@x5742 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not (= ?x119 ?x204)) $x6014)) (symm (monotonicity @x5780 (= ?x204 ?x119)) (= ?x119 ?x204)) $x6014)))
(let (($x3478 (>= ?x119 0)))
(let ((@x6523 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x3213 $x3478)) @x5456 $x3478)))
(let (($x5984 (>= (+ ?x204 (* (- 1) ?x5971) ?x6040) 0)))
(let (($x6042 (<= (+ b_Infinity$ (* (- 1) ?x6040)) 0)))
(let (($x5545 (or $x6042 $x5984)))
(let (($x5577 (not $x5545)))
(let (($x5972 (= ?x2152 ?x5971)))
(let (($x6132 (or $x5577 $x5972)))
(let (($x6394 (or $x3931 $x5577 $x5972)))
(let (($x6213 (or $x3931 (or (not (or $x6042 (<= (+ ?x5971 ?x1520 (* (- 1) ?x6040)) 0))) $x5972))))
(let (($x6240 (= (or (not (or $x6042 (<= (+ ?x5971 ?x1520 (* (- 1) ?x6040)) 0))) $x5972) $x6132)))
(let (($x6044 (<= (+ ?x5971 ?x1520 (* (- 1) ?x6040)) 0)))
(let ((@x6156 (rewrite (= (+ ?x5971 ?x1520 (* (- 1) ?x6040)) (+ ?x1520 ?x5971 (* (- 1) ?x6040))))))
(let ((@x5992 (monotonicity @x6156 (= $x6044 (<= (+ ?x1520 ?x5971 (* (- 1) ?x6040)) 0)))))
(let ((@x5651 (trans @x5992 (rewrite (= (<= (+ ?x1520 ?x5971 (* (- 1) ?x6040)) 0) $x5984)) (= $x6044 $x5984))))
(let ((@x5893 (monotonicity (monotonicity @x5651 (= (or $x6042 $x6044) $x5545)) (= (not (or $x6042 $x6044)) $x5577))))
(let ((@x5887 (trans (monotonicity (monotonicity @x5893 $x6240) (= $x6213 (or $x3931 $x6132))) (rewrite (= (or $x3931 $x6132) $x6394)) (= $x6213 $x6394))))
(let ((@x7154 (unit-resolution (unit-resolution (mp ((_ quant-inst ?v0!15) $x6213) @x5887 $x6394) @x6086 $x6132) (unit-resolution @x7123 @x7120 (not $x5972)) $x5577)))
(let (($x5495 (or $x6042 $x5984 $x5552)))
(let (($x5652 (or $x3923 $x6042 $x5984 $x5552)))
(let (($x5496 (or $x3923 (or $x6042 $x6044 (= (+ ?x204 ?x6040 (* (- 1) ?x2152)) 0)))))
(let ((@x5529 (monotonicity (rewrite (= (+ ?x204 ?x6040 (* (- 1) ?x2152)) ?x6162)) (= (= (+ ?x204 ?x6040 (* (- 1) ?x2152)) 0) $x5552))))
(let ((@x5649 (monotonicity @x5651 @x5529 (= (or $x6042 $x6044 (= (+ ?x204 ?x6040 (* (- 1) ?x2152)) 0)) $x5495))))
(let ((@x5906 (trans (monotonicity @x5649 (= $x5496 (or $x3923 $x5495))) (rewrite (= (or $x3923 $x5495) $x5652)) (= $x5496 $x5652))))
(let ((@x7158 (unit-resolution (unit-resolution (mp ((_ quant-inst ?v0!15) $x5496) @x5906 $x5652) @x4512 $x5495) (unit-resolution (def-axiom (or $x5545 (not $x5984))) @x7154 (not $x5984)) (unit-resolution (def-axiom (or $x5545 (not $x6042))) @x7154 (not $x6042)) $x5552)))
(let ((@x7166 (unit-resolution ((_ th-lemma arith assign-bounds 1 1 1 1 1) (or $x7048 (not $x7084) $x2153 $x7034 (not $x6014) (not $x3478))) (unit-resolution ((_ th-lemma arith triangle-eq) (or $x7159 $x6237)) @x7158 $x6237) @x6523 @x5742 @x7027 @x7152 $x7048)))
(let (($x7062 (= (or (not $x3728) (or (= b_Source$ ?v0!15) (not $x7048))) (or (not $x3728) (= b_Source$ ?v0!15) (not $x7048)))))
(let ((@x7064 (mp ((_ quant-inst b_Source$ ?v0!15) (or (not $x3728) (or (= b_Source$ ?v0!15) (not $x7048)))) (rewrite $x7062) (or (not $x3728) (= b_Source$ ?v0!15) (not $x7048)))))
(let ((@x7168 (unit-resolution (unit-resolution @x7064 @x3733 (or (= b_Source$ ?v0!15) (not $x7048))) @x7166 @x7143 false)))
(let ((@x6972 (unit-resolution (lemma @x7168 (or $x3948 $x2153 (not $x3279) $x3196 $x3923 $x3931)) @x6065 @x7027 (unit-resolution (def-axiom (or $x4045 $x213)) @x5873 $x213) @x5247 @x5974 $x3948)))
(let ((@x6196 (unit-resolution (def-axiom (or $x4030 $x2139 $x4024)) (unit-resolution (def-axiom (or $x4021 $x3943)) @x6972 $x4021) (unit-resolution (def-axiom (or $x4033 $x4027)) @x5435 $x4027) $x2139)))
(let (($x6189 (>= (+ ?x6353 (* (- 1) (b_G$ (pair$ b_Source$ ?v0!14)))) 0)))
(let ((@x5870 (monotonicity @x5780 (= (pair$ v_b_v_G_1$ ?v0!14) (pair$ b_Source$ ?v0!14)))))
(let ((@x6892 ((_ th-lemma arith triangle-eq) (or (not (= ?x6353 (b_G$ (pair$ b_Source$ ?v0!14)))) $x6189))))
(let ((@x6893 (unit-resolution @x6892 (monotonicity @x5870 (= ?x6353 (b_G$ (pair$ b_Source$ ?v0!14)))) $x6189)))
(let ((?x6449 (b_G$ (pair$ b_Source$ ?v0!14))))
(let (($x6497 (<= ?x6449 0)))
(let (($x6702 (not $x6497)))
(let (($x6238 (= b_Source$ ?v0!14)))
(let (($x6704 (not $x6238)))
(let ((@x5923 (monotonicity (symm (hypothesis $x6238) (= ?v0!14 b_Source$)) (= ?x2136 ?x119))))
(let ((@x5826 (monotonicity (symm (hypothesis $x6238) (= ?v0!14 b_Source$)) (= ?x2135 ?x243))))
(let ((@x5929 (trans (trans @x5826 (monotonicity @x5781 (= ?x243 ?x3394)) (= ?x2135 ?x3394)) (hypothesis $x3329) (= ?x2135 ?x204))))
(let ((@x6701 (trans (trans @x5929 (monotonicity @x5780 (= ?x204 ?x119)) (= ?x2135 ?x119)) (symm @x5923 (= ?x119 ?x2136)) $x2137)))
(let ((@x6754 (lemma (unit-resolution @x5806 @x6701 false) (or $x6704 $x2137 (not $x3329) (not $x3279)))))
(let ((@x6858 (rewrite (= (or (not $x3728) (or $x6238 $x6702)) (or (not $x3728) $x6238 $x6702)))))
(let ((@x6859 (mp ((_ quant-inst b_Source$ ?v0!14) (or (not $x3728) (or $x6238 $x6702))) @x6858 (or (not $x3728) $x6238 $x6702))))
(let ((@x6879 (unit-resolution @x6859 @x3733 (unit-resolution @x6754 @x5806 @x6230 @x5780 $x6704) $x6702)))
(let (($x5364 (= ?v0!14 b_Source$)))
(let (($x6300 (or $x5364 $x6262)))
(let (($x6211 (fun_app$ ?x6005 ?v0!14)))
(let (($x6870 (= $x6211 $x6300)))
(let (($x6873 (or $x5105 $x6870)))
(let ((@x6868 (monotonicity (rewrite (= (ite $x5364 true $x6262) $x6300)) (= (= $x6211 (ite $x5364 true $x6262)) $x6870))))
(let ((@x6944 (monotonicity @x6868 (= (or $x5105 (= $x6211 (ite $x5364 true $x6262))) $x6873))))
(let ((@x6946 (trans @x6944 (rewrite (= $x6873 $x6873)) (= (or $x5105 (= $x6211 (ite $x5364 true $x6262))) $x6873))))
(let ((@x6947 (mp ((_ quant-inst v_b_Visited_G_1$ b_Source$ true ?v0!14) (or $x5105 (= $x6211 (ite $x5364 true $x6262)))) @x6946 $x6873)))
(let ((@x6885 (mp (hypothesis $x2133) (symm (monotonicity @x6803 (= $x6211 $x2133)) (= $x2133 $x6211)) $x6211)))
(let ((@x6923 (unit-resolution (def-axiom (or (not $x6870) (not $x6211) $x6300)) @x6885 (unit-resolution @x6947 @x3721 $x6870) $x6300)))
(let (($x6603 (>= (+ ?x119 (* (- 1) ?x2136)) 0)))
(let ((@x6948 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not (= ?x6449 0)) $x6497)) (hypothesis $x6702) (not (= ?x6449 0)))))
(let (($x6718 (= (or $x4439 (or $x6704 (= ?x6449 0))) (or $x4439 $x6704 (= ?x6449 0)))))
(let ((@x5740 (mp ((_ quant-inst b_Source$ ?v0!14) (or $x4439 (or $x6704 (= ?x6449 0)))) (rewrite $x6718) (or $x4439 $x6704 (= ?x6449 0)))))
(let ((@x6975 (unit-resolution (unit-resolution @x5740 @x3727 (or $x6704 (= ?x6449 0))) @x6948 $x6704)))
(let ((@x6981 (mp @x6975 (monotonicity (commutativity (= $x6238 $x5364)) (= $x6704 (not $x5364))) (not $x5364))))
(let ((@x6938 (unit-resolution (def-axiom (or (not $x6300) $x5364 $x6262)) @x6981 (hypothesis $x6300) $x6262)))
(let ((@x6605 (rewrite (= (or $x3818 (or $x4244 $x6006 $x6603)) (or $x3818 $x4244 $x6006 $x6603)))))
(let ((@x6664 (mp ((_ quant-inst ?v0!14 b_Source$) (or $x3818 (or $x4244 $x6006 $x6603))) @x6605 (or $x3818 $x4244 $x6006 $x6603))))
(let ((@x6832 (unit-resolution ((_ th-lemma arith farkas 1 1) (or (>= ?x6449 0) $x6497)) (hypothesis $x6702) (>= ?x6449 0))))
(let ((@x6833 ((_ th-lemma arith farkas 1 1 -1 -1 1) @x6832 (hypothesis $x6189) @x6842 (hypothesis $x6014) (unit-resolution @x6664 @x6970 (hypothesis $x5095) @x6938 $x6603) false)))
(let ((@x6924 (unit-resolution (lemma @x6833 (or $x6497 (not $x6189) $x5623 (not $x6014) $x4244 (not $x6300))) @x6923 @x6879 @x6877 @x5742 (hypothesis $x5095) @x6893 false)))
(let ((@x6199 (unit-resolution (lemma @x6924 (or $x2134 $x4244 $x3196 (not $x3279) $x3931 $x2137)) (unit-resolution (def-axiom (or $x2138 $x3646)) @x6196 $x3646) (unit-resolution (def-axiom (or $x2138 $x2133)) @x6196 $x2133) (unit-resolution (def-axiom (or $x4045 $x213)) @x5873 $x213) @x6065 @x5974 @x5493 false)))
(let ((@x7353 (unit-resolution ((_ th-lemma arith farkas 1 1) (or $x3284 $x4951)) (unit-resolution (lemma @x6199 (or $x4045 $x2153 $x4138)) @x5873 @x7027 $x4138) $x4951)))
(let ((@x7331 (unit-resolution ((_ th-lemma arith assign-bounds 1 1) (or $x6507 $x1522 (not $x4951))) @x7353 (unit-resolution (def-axiom (or $x4045 $x1525)) @x5873 $x1525) $x6507)))
(let (($x6440 (= v_b_v_G_1$ ?v0!15)))
(let (($x6441 (<= ?x6040 0)))
(let (($x6477 (<= (+ ?x119 ?x3282) 0)))
(let (($x4627 (= ?x3280 b_Source$)))
(let ((?x5260 (+ ?x3281 (* (- 1) (fun_app$c v_b_SP_G_1$ (?v1!7 ?x3280))) (* (- 1) (b_G$ (pair$ (?v1!7 ?x3280) ?x3280))))))
(let (($x5252 (<= (+ ?x3281 (* (- 1) (fun_app$c v_b_SP_G_1$ (?v1!7 ?x3280)))) 0)))
(let (($x4638 (or $x5252 (not (fun_app$ v_b_Visited_G_1$ (?v1!7 ?x3280))) (not (= ?x5260 0)))))
(let ((@x7029 (hypothesis $x4951)))
(let ((@x7028 (hypothesis $x6237)))
(let ((@x7030 (hypothesis (not $x5252))))
(let (($x6656 (>= (fun_app$c v_b_SP_G_1$ (?v1!7 ?x3280)) 0)))
(let ((@x6836 (unit-resolution ((_ th-lemma arith assign-bounds 1 1 1 1 1) (or $x6441 (not $x4951) (not $x6656) $x5252 $x2153 $x7034)) @x7030 @x7029 @x7028 @x7027 (unit-resolution ((_ quant-inst (?v1!7 ?x3280)) (or $x3809 $x6656)) @x5502 $x6656) $x6441)))
(let (($x6469 (= (or (not $x3728) (or $x6440 (not $x6441))) (or (not $x3728) $x6440 (not $x6441)))))
(let ((@x6472 (mp ((_ quant-inst v_b_v_G_1$ ?v0!15) (or (not $x3728) (or $x6440 (not $x6441)))) (rewrite $x6469) (or (not $x3728) $x6440 (not $x6441)))))
(let ((@x7025 (unit-resolution (unit-resolution @x6472 @x3733 (or $x6440 (not $x6441))) (hypothesis $x6441) $x6440)))
(let (($x6466 (= ?x6040 0)))
(let (($x7038 (not $x6466)))
(let (($x7031 (not (>= ?x6040 0))))
(let ((@x7037 (unit-resolution ((_ th-lemma arith assign-bounds 1 1 1 1 1) (or $x7031 (not $x4951) (not $x6656) $x5252 $x2153 $x7034)) @x7030 @x7029 @x7028 @x7027 (unit-resolution ((_ quant-inst (?v1!7 ?x3280)) (or $x3809 $x6656)) @x5502 $x6656) $x7031)))
(let ((@x6480 (rewrite (= (or $x4439 (or (not $x6440) $x6466)) (or $x4439 (not $x6440) $x6466)))))
(let ((@x6481 (mp ((_ quant-inst v_b_v_G_1$ ?v0!15) (or $x4439 (or (not $x6440) $x6466))) @x6480 (or $x4439 (not $x6440) $x6466))))
(let ((@x7043 (unit-resolution (unit-resolution @x6481 @x3727 (or (not $x6440) $x6466)) (unit-resolution ((_ th-lemma arith triangle-eq) (or $x7038 (>= ?x6040 0))) @x7037 $x7038) @x7025 false)))
(let ((@x6866 (unit-resolution (lemma @x7043 (or (not $x6441) $x5252 (not $x4951) $x7034 $x2153)) @x6836 @x7030 @x7029 @x7028 @x7027 false)))
(let ((@x6500 (unit-resolution (lemma @x6866 (or $x5252 (not $x4951) $x7034 $x2153)) @x7028 @x7029 @x7027 $x5252)))
(let (($x5562 (= (or $x3834 (or $x4627 $x4633 (not $x4638))) (or $x3834 $x4627 $x4633 (not $x4638)))))
(let ((@x5564 (mp ((_ quant-inst (?v1!7 v_b_v_G_1$)) (or $x3834 (or $x4627 $x4633 (not $x4638)))) (rewrite $x5562) (or $x3834 $x4627 $x4633 (not $x4638)))))
(let ((@x6514 (unit-resolution (unit-resolution @x5564 @x4406 (hypothesis $x6507) (or $x4627 (not $x4638))) (unit-resolution (def-axiom (or $x4638 (not $x5252))) @x6500 $x4638) $x4627)))
(let ((@x6521 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not (= ?x119 ?x3281)) $x6477)) (symm (monotonicity @x6514 (= ?x3281 ?x119)) (= ?x119 ?x3281)) $x6477)))
(let ((@x6529 (unit-resolution ((_ th-lemma arith assign-bounds 1 1 1 1 1) (or $x6441 (not $x4951) $x2153 $x7034 (not $x3478) (not $x6477))) @x7028 @x6523 @x7029 @x7027 @x6521 $x6441)))
(let ((@x6534 (unit-resolution (unit-resolution @x6472 @x3733 (or $x6440 (not $x6441))) @x6529 $x6440)))
(let ((@x6536 (unit-resolution ((_ th-lemma arith assign-bounds 1 -1 -1 1 -1) (or $x7031 (not $x4951) $x2153 $x7034 (not $x3478) (not $x6477))) @x7028 @x6523 @x7029 @x7027 @x6521 $x7031)))
(let ((@x6538 (unit-resolution (unit-resolution @x6481 @x3727 (or (not $x6440) $x6466)) (unit-resolution ((_ th-lemma arith triangle-eq) (or $x7038 (>= ?x6040 0))) @x6536 $x7038) @x6534 false)))
(let ((@x7332 (unit-resolution (lemma @x6538 (or $x7034 (not $x4951) $x2153 $x4633)) @x7353 @x7027 @x7331 $x7034)))
(let ((@x7339 (unit-resolution (mp ((_ quant-inst ?v0!15) $x5496) @x5906 $x5652) @x4512 (hypothesis $x7159) $x5545)))
(let ((@x7377 (unit-resolution @x7339 (unit-resolution (def-axiom (or $x5545 (not $x5984))) @x7154 (not $x5984)) (unit-resolution (def-axiom (or $x5545 (not $x6042))) @x7154 (not $x6042)) false)))
(let ((@x7334 (unit-resolution (lemma @x7377 (or $x5552 $x3923 $x3931 $x2153)) (unit-resolution ((_ th-lemma arith triangle-eq) (or $x7159 $x6237)) @x7332 $x7159) @x5247 @x5974 @x7027 false)))
(let (($x4282 (= ?x243 ?x119)))
(let (($x4455 (<= (b_G$ (pair$ v_b_v_G_1$ b_Source$)) 0)))
(let (($x4147 (>= ?x204 0)))
(let (($x3479 (<= ?x119 0)))
(let (($x4279 (<= (+ ?x119 ?x1520 (* (- 1) (b_G$ (pair$ v_b_v_G_1$ b_Source$)))) 0)))
(let (($x4277 (<= (+ b_Infinity$ (* (- 1) (b_G$ (pair$ v_b_v_G_1$ b_Source$)))) 0)))
(let (($x4281 (not (or $x4277 $x4279))))
(let (($x4909 (not $x4282)))
(let ((@x4883 (hypothesis $x913)))
(let ((@x4907 (mp (hypothesis $x4282) (monotonicity (hypothesis $x120) (= $x4282 $x244)) $x244)))
(let ((@x6051 (unit-resolution (lemma (unit-resolution @x4883 @x4907 false) (or $x4909 $x244 $x3213)) @x5456 (or $x4909 $x244))))
(let ((@x5597 (mp ((_ quant-inst b_Source$) (or $x3931 (or $x4281 $x4282))) (rewrite (= (or $x3931 (or $x4281 $x4282)) (or $x3931 $x4281 $x4282))) (or $x3931 $x4281 $x4282))))
(let ((@x5875 (unit-resolution (unit-resolution @x5597 @x6086 (or $x4281 $x4282)) (unit-resolution @x6051 @x4883 $x4909) $x4281)))
(let ((@x5520 (unit-resolution (def-axiom (or (or $x4277 $x4279) (not $x4279))) @x5875 (not $x4279))))
(let ((@x6090 (unit-resolution ((_ th-lemma arith assign-bounds 1 1 1) (or $x4455 (not $x3479) (not $x4147) $x4279)) @x5520 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x3213 $x3479)) @x5456 $x3479) (unit-resolution ((_ quant-inst v_b_v_G_1$) (or $x3809 $x4147)) @x5502 $x4147) $x4455)))
(let (($x5519 (= (or (not $x3728) (or $x3279 (not $x4455))) (or (not $x3728) $x3279 (not $x4455)))))
(let ((@x6055 (mp ((_ quant-inst v_b_v_G_1$ b_Source$) (or (not $x3728) (or $x3279 (not $x4455)))) (rewrite $x5519) (or (not $x3728) $x3279 (not $x4455)))))
(let ((@x6223 (symm (unit-resolution @x6055 @x3733 @x6090 $x3279) (= b_Source$ v_b_v_G_1$))))
(let ((@x5727 (trans (trans (monotonicity @x6223 (= ?x243 ?x3394)) @x6230 (= ?x243 ?x204)) (monotonicity (unit-resolution @x6055 @x3733 @x6090 $x3279) (= ?x204 ?x119)) $x4282)))
(let ((@x5312 (lemma (unit-resolution @x4883 (trans @x5727 @x5456 $x244) false) (or $x244 $x3931))))
(let ((@x8382 (unit-resolution (def-axiom (or $x4018 $x913 $x2154 $x4012)) (unit-resolution @x5312 @x8302 $x244) (unit-resolution (lemma @x7334 (or $x4045 $x2153)) @x8164 $x2153) (or $x4018 $x4012))))
(let ((@x9064 (unit-resolution @x8382 (unit-resolution (def-axiom (or $x4021 $x4015)) @x10488 $x4015) $x4012)))
(let ((@x10157 (unit-resolution (def-axiom (or $x4006 $x3039 $x4000)) (unit-resolution (def-axiom (or $x4009 $x4003)) @x9064 $x4003) (unit-resolution @x5143 @x10489 $x3034) $x4000)))
(let ((@x8593 (hypothesis $x3988)))
(let ((?x4618 (fun_app$c v_b_SP_G_1$ ?v0!20)))
(let (($x4870 (<= (+ ?x4618 (* (- 1) (fun_app$c v_b_SP_G_1$ (?v1!7 ?v0!20)))) 0)))
(let ((@x5730 (hypothesis $x2221)))
(let (($x8567 (>= (+ (v_b_SP_G_2$ ?v0!20) (* (- 1) ?x4618)) 0)))
(let ((?x2217 (v_b_SP_G_2$ ?v0!20)))
(let (($x4625 (= ?x2217 ?x4618)))
(let ((?x4660 (b_G$ (pair$ v_b_v_G_1$ ?v0!20))))
(let ((?x4661 (* (- 1) ?x4660)))
(let ((?x3395 (* (- 1) ?x3394)))
(let ((?x8452 (+ ?x2217 ?x3395 ?x4661)))
(let (($x8388 (<= ?x8452 0)))
(let (($x8780 (>= ?x8452 0)))
(let ((@x6097 (unit-resolution ((_ th-lemma arith farkas 1 1) (or $x8780 $x8388)) (hypothesis (not $x8388)) $x8780)))
(let (($x4663 (<= (+ b_Infinity$ ?x4661) 0)))
(let (($x4368 (fun_app$ v_b_Visited_G_2$ v_b_v_G_1$)))
(let ((@x8557 (symm (monotonicity @x8214 (= $x4368 (fun_app$ ?x212 v_b_v_G_1$))) (= (fun_app$ ?x212 v_b_v_G_1$) $x4368))))
(let (($x3413 (fun_app$ ?x212 v_b_v_G_1$)))
(let (($x3709 (forall ((?v0 B_Vertex_bool_fun$) (?v1 B_Vertex$) (?v2 Bool) )(!(= (fun_app$ (fun_app$a (fun_app$b (fun_upd$ ?v0) ?v1) ?v2) ?v1) ?v2) :pattern ( (fun_app$a (fun_app$b (fun_upd$ ?v0) ?v1) ?v2) )))
))
(let (($x1092 (forall ((?v0 B_Vertex_bool_fun$) (?v1 B_Vertex$) (?v2 Bool) )(= (fun_app$ (fun_app$a (fun_app$b (fun_upd$ ?v0) ?v1) ?v2) ?v1) ?v2))
))
(let (($x1089 (= (fun_app$ (fun_app$a (fun_app$b (fun_upd$ ?2) ?1) ?0) ?1) ?0)))
(let (($x49 (forall ((?v0 B_Vertex_bool_fun$) (?v1 B_Vertex$) (?v2 Bool) )(= (fun_app$ (fun_app$a (fun_app$b (fun_upd$ ?v0) ?v1) ?v2) ?v1) ?v2))
))
(let (($x48 (= (fun_app$ (fun_app$a (fun_app$b (fun_upd$ ?2) ?1) ?0) ?1) ?0)))
(let ((@x1097 (mp (mp (asserted $x49) (rewrite* (= $x49 $x49)) $x49) (quant-intro (rewrite (= $x48 $x1089)) (= $x49 $x1092)) $x1092)))
(let ((@x3714 (mp (mp~ @x1097 (nnf-pos (refl (~ $x1089 $x1089)) (~ $x1092 $x1092)) $x1092) (quant-intro (refl (= $x1089 $x1089)) (= $x1092 $x3709)) $x3709)))
(let (($x4545 (or (not $x3709) $x3413)))
(let ((@x6188 (monotonicity (rewrite (= (= $x3413 true) $x3413)) (= (or (not $x3709) (= $x3413 true)) $x4545))))
(let ((@x5812 (trans @x6188 (rewrite (= $x4545 $x4545)) (= (or (not $x3709) (= $x3413 true)) $x4545))))
(let ((@x8745 (unit-resolution (mp ((_ quant-inst v_b_Visited_G_1$ v_b_v_G_1$ true) (or (not $x3709) (= $x3413 true))) @x5812 $x4545) @x3714 $x3413)))
(let ((@x6205 (hypothesis $x3968)))
(let (($x4369 (not $x4368)))
(let (($x9030 (or $x3973 $x4369 $x4663 $x8388)))
(let (($x9031 (or $x3973 (or $x4369 $x4663 (>= (+ ?x4660 ?x3394 (* (- 1) ?x2217)) 0)))))
(let (($x8458 (= (or $x4369 $x4663 (>= (+ ?x4660 ?x3394 (* (- 1) ?x2217)) 0)) (or $x4369 $x4663 $x8388))))
(let (($x8517 (>= (+ ?x4660 ?x3394 (* (- 1) ?x2217)) 0)))
(let ((@x8896 (rewrite (= (+ ?x4660 ?x3394 (* (- 1) ?x2217)) (+ (* (- 1) ?x2217) ?x3394 ?x4660)))))
(let ((@x8448 (monotonicity @x8896 (= $x8517 (>= (+ (* (- 1) ?x2217) ?x3394 ?x4660) 0)))))
(let ((@x8455 (trans @x8448 (rewrite (= (>= (+ (* (- 1) ?x2217) ?x3394 ?x4660) 0) $x8388)) (= $x8517 $x8388))))
(let ((@x9127 (monotonicity (monotonicity @x8455 $x8458) (= $x9031 (or $x3973 (or $x4369 $x4663 $x8388))))))
(let ((@x8184 (trans @x9127 (rewrite (= (or $x3973 (or $x4369 $x4663 $x8388)) $x9030)) (= $x9031 $x9030))))
(let ((@x6333 (unit-resolution (mp ((_ quant-inst ?v0!20 v_b_v_G_1$) $x9031) @x8184 $x9030) @x6205 (mp @x8745 @x8557 $x4368) (hypothesis (not $x8388)) $x4663)))
(let ((@x5997 (unit-resolution ((_ th-lemma arith assign-bounds 1 -1) (or $x6014 (not $x4147) (not $x3479))) (unit-resolution ((_ quant-inst v_b_v_G_1$) (or $x3809 $x4147)) @x5502 $x4147) (unit-resolution ((_ th-lemma arith triangle-eq) (or $x3213 $x3479)) @x5456 $x3479) $x6014)))
(let (($x6242 (= ?x204 ?x3394)))
(let ((@x9345 (mp (unit-resolution (mp ((_ quant-inst v_b_v_G_1$) $x4517) @x5481 $x5387) @x8302 @x6229 $x3329) (symm (commutativity (= $x6242 $x3329)) (= $x3329 $x6242)) $x6242)))
(let ((@x8936 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x6242) (<= (+ ?x204 ?x3395) 0))) @x9345 (<= (+ ?x204 ?x3395) 0))))
(let ((@x5629 (lemma ((_ th-lemma arith farkas 1 1 1 1 1 1) @x8936 @x5997 @x6523 @x6333 @x6097 @x5730 false) (or $x8388 $x2220 $x3973))))
(let ((@x10145 (unit-resolution @x5629 (unit-resolution (def-axiom (or $x3985 $x3968)) @x8593 $x3968) @x5730 $x8388)))
(let (($x8926 (<= (+ ?x2217 ?x3395) 0)))
(let (($x8453 (= ?x8452 0)))
(let ((?x2218 (* (- 1) ?x2217)))
(let ((?x8793 (+ ?x204 ?x2218 ?x4660)))
(let (($x8622 (<= ?x8793 0)))
(let (($x8798 (= ?x8793 0)))
(let (($x8551 (>= (+ ?x204 (* (- 1) ?x4618) ?x4660) 0)))
(let (($x8822 (or $x4663 $x8551)))
(let (($x8685 (not $x8822)))
(let (($x8574 (or $x8685 $x4625)))
(let (($x8550 (or $x3931 $x8685 $x4625)))
(let (($x8571 (or $x3931 (or (not (or $x4663 (<= (+ ?x4618 ?x1520 ?x4661) 0))) $x4625))))
(let ((@x9375 (monotonicity (rewrite (= (+ ?x4618 ?x1520 ?x4661) (+ ?x1520 ?x4618 ?x4661))) (= (<= (+ ?x4618 ?x1520 ?x4661) 0) (<= (+ ?x1520 ?x4618 ?x4661) 0)))))
(let ((@x8823 (trans @x9375 (rewrite (= (<= (+ ?x1520 ?x4618 ?x4661) 0) $x8551)) (= (<= (+ ?x4618 ?x1520 ?x4661) 0) $x8551))))
(let ((@x8684 (monotonicity @x8823 (= (or $x4663 (<= (+ ?x4618 ?x1520 ?x4661) 0)) $x8822))))
(let ((@x8549 (monotonicity @x8684 (= (not (or $x4663 (<= (+ ?x4618 ?x1520 ?x4661) 0))) $x8685))))
(let ((@x8576 (monotonicity @x8549 (= (or (not (or $x4663 (<= (+ ?x4618 ?x1520 ?x4661) 0))) $x4625) $x8574))))
(let ((@x8764 (trans (monotonicity @x8576 (= $x8571 (or $x3931 $x8574))) (rewrite (= (or $x3931 $x8574) $x8550)) (= $x8571 $x8550))))
(let ((@x10339 (unit-resolution (unit-resolution (mp ((_ quant-inst ?v0!20) $x8571) @x8764 $x8550) @x8302 $x8574) (hypothesis (not $x4625)) $x8685)))
(let ((@x10165 (unit-resolution (def-axiom (or $x8822 (not $x4663))) (hypothesis $x8685) (not $x4663))))
(let ((@x10166 (unit-resolution (def-axiom (or $x8822 (not $x8551))) (hypothesis $x8685) (not $x8551))))
(let (($x8800 (or $x4663 $x8551 $x8798)))
(let (($x8659 (or $x3923 $x4663 $x8551 $x8798)))
(let (($x4665 (<= (+ ?x4618 ?x1520 ?x4661) 0)))
(let (($x9296 (or $x3923 (or $x4663 $x4665 (= (+ ?x204 ?x4660 ?x2218) 0)))))
(let ((@x8797 (monotonicity (rewrite (= (+ ?x204 ?x4660 ?x2218) ?x8793)) (= (= (+ ?x204 ?x4660 ?x2218) 0) $x8798))))
(let ((@x8638 (monotonicity @x8823 @x8797 (= (or $x4663 $x4665 (= (+ ?x204 ?x4660 ?x2218) 0)) $x8800))))
(let ((@x9312 (trans (monotonicity @x8638 (= $x9296 (or $x3923 $x8800))) (rewrite (= (or $x3923 $x8800) $x8659)) (= $x9296 $x8659))))
(let ((@x10167 (unit-resolution (unit-resolution (mp ((_ quant-inst ?v0!20) $x9296) @x9312 $x8659) @x8165 $x8800) @x10166 @x10165 (hypothesis (not $x8798)) false)))
(let ((@x10348 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x8798) $x8622)) (unit-resolution (lemma @x10167 (or $x8822 $x8798)) @x10339 $x8798) $x8622)))
(let ((@x10388 (unit-resolution ((_ th-lemma arith assign-bounds 1 -1) (or (not $x8622) $x8780 (not $x3298))) @x8142 (or (not $x8622) $x8780))))
(let ((@x10484 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x8453 (not $x8388) (not $x8780))) (hypothesis $x8388) (or $x8453 (not $x8780)))))
(let ((@x11844 (hypothesis $x3977)))
(let (($x8695 (not $x8453)))
(let (($x8690 (or $x3982 $x8926 $x4369 $x8695)))
(let (($x4741 (>= (+ ?x3394 ?x2218) 0)))
(let (($x8692 (or $x3982 (or $x4741 $x4369 (not (= (+ ?x3394 ?x2218 ?x4660) 0))))))
(let (($x9019 (= (or $x4741 $x4369 (not (= (+ ?x3394 ?x2218 ?x4660) 0))) (or $x8926 $x4369 $x8695))))
(let ((@x8997 (monotonicity (rewrite (= (+ ?x3394 ?x2218 ?x4660) (+ ?x2218 ?x3394 ?x4660))) (= (= (+ ?x3394 ?x2218 ?x4660) 0) (= (+ ?x2218 ?x3394 ?x4660) 0)))))
(let ((@x9034 (trans @x8997 (rewrite (= (= (+ ?x2218 ?x3394 ?x4660) 0) $x8453)) (= (= (+ ?x3394 ?x2218 ?x4660) 0) $x8453))))
(let ((@x8397 (monotonicity (rewrite (= (+ ?x3394 ?x2218) (+ ?x2218 ?x3394))) (= $x4741 (>= (+ ?x2218 ?x3394) 0)))))
(let ((@x9139 (trans @x8397 (rewrite (= (>= (+ ?x2218 ?x3394) 0) $x8926)) (= $x4741 $x8926))))
(let ((@x9020 (monotonicity @x9139 (monotonicity @x9034 (= (not (= (+ ?x3394 ?x2218 ?x4660) 0)) $x8695)) $x9019)))
(let ((@x8404 (trans (monotonicity @x9020 (= $x8692 (or $x3982 (or $x8926 $x4369 $x8695)))) (rewrite (= (or $x3982 (or $x8926 $x4369 $x8695)) $x8690)) (= $x8692 $x8690))))
(let ((@x10486 (unit-resolution (mp ((_ quant-inst v_b_v_G_1$) $x8692) @x8404 $x8690) @x11844 (mp @x8745 @x8557 $x4368) (or $x8926 $x8695))))
(let ((@x10481 (unit-resolution @x10486 (unit-resolution @x10484 (unit-resolution @x10388 @x10348 $x8780) $x8453) $x8926)))
(let (($x6460 (not (<= ?x4660 0))))
(let ((@x10539 (commutativity (= (= v_b_v_G_1$ ?v0!20) (= ?v0!20 v_b_v_G_1$)))))
(let ((@x10627 (monotonicity (symm @x10539 (= (= ?v0!20 v_b_v_G_1$) (= v_b_v_G_1$ ?v0!20))) (= (not (= ?v0!20 v_b_v_G_1$)) (not (= v_b_v_G_1$ ?v0!20))))))
(let (($x7719 (= ?v0!20 v_b_v_G_1$)))
(let (($x10690 (not $x7719)))
(let (($x10582 (or $x7719 (fun_app$ v_b_Visited_G_1$ ?v0!20))))
(let (($x7724 (fun_app$ ?x212 ?v0!20)))
(let (($x10917 (= $x7724 $x10582)))
(let (($x10865 (or $x5105 $x10917)))
(let (($x10888 (or $x5105 (= $x7724 (ite $x7719 true (fun_app$ v_b_Visited_G_1$ ?v0!20))))))
(let (($x10747 (= (= $x7724 (ite $x7719 true (fun_app$ v_b_Visited_G_1$ ?v0!20))) $x10917)))
(let ((@x9484 (rewrite (= (ite $x7719 true (fun_app$ v_b_Visited_G_1$ ?v0!20)) $x10582))))
(let ((@x10687 (trans (monotonicity (monotonicity @x9484 $x10747) (= $x10888 $x10865)) (rewrite (= $x10865 $x10865)) (= $x10888 $x10865))))
(let ((@x8210 (symm @x8214 (= ?x212 v_b_Visited_G_2$))))
(let ((@x10510 (symm (monotonicity @x8210 (= $x7724 (fun_app$ v_b_Visited_G_2$ ?v0!20))) (= (fun_app$ v_b_Visited_G_2$ ?v0!20) $x7724))))
(let ((@x10542 (monotonicity @x10510 (= (not (fun_app$ v_b_Visited_G_2$ ?v0!20)) (not $x7724)))))
(let (($x4503 (fun_app$ v_b_Visited_G_2$ ?v0!20)))
(let (($x4504 (not $x4503)))
(let ((@x10611 (mp ((_ quant-inst ?v0!20) (or $x3948 (or $x4504 $x4625))) (rewrite (= (or $x3948 (or $x4504 $x4625)) (or $x3948 $x4504 $x4625))) (or $x3948 $x4504 $x4625))))
(let ((@x10491 (unit-resolution (unit-resolution @x10611 @x10489 (or $x4504 $x4625)) (hypothesis (not $x4625)) $x4504)))
(let ((@x10518 (unit-resolution (def-axiom (or (not $x10917) $x7724 (not $x10582))) (mp @x10491 @x10542 (not $x7724)) (unit-resolution (mp ((_ quant-inst v_b_Visited_G_1$ v_b_v_G_1$ true ?v0!20) $x10888) @x10687 $x10865) @x3721 $x10917) (not $x10582))))
(let ((@x10563 (mp (unit-resolution (def-axiom (or $x10582 $x10690)) @x10518 $x10690) @x10627 (not (= v_b_v_G_1$ ?v0!20)))))
(let (($x9114 (= (or (not $x3728) (or (= v_b_v_G_1$ ?v0!20) $x6460)) (or (not $x3728) (= v_b_v_G_1$ ?v0!20) $x6460))))
(let ((@x9115 (mp ((_ quant-inst v_b_v_G_1$ ?v0!20) (or (not $x3728) (or (= v_b_v_G_1$ ?v0!20) $x6460))) (rewrite $x9114) (or (not $x3728) (= v_b_v_G_1$ ?v0!20) $x6460))))
(let ((@x10566 (unit-resolution (unit-resolution @x9115 @x3733 (or (= v_b_v_G_1$ ?v0!20) $x6460)) @x10563 $x6460)))
(let ((@x10568 (lemma ((_ th-lemma arith farkas -1 -1 1 1) @x8142 @x10566 @x10348 @x10481 false) (or $x4625 $x3982 (not $x8388)))))
(let ((@x10170 (unit-resolution @x10568 (unit-resolution (def-axiom (or $x3985 $x3977)) @x8593 $x3977) @x10145 $x4625)))
(let ((?x4866 (?v1!7 ?v0!20)))
(let (($x8671 (fun_app$ v_b_Visited_G_2$ ?x4866)))
(let (($x8672 (not $x8671)))
(let ((@x11435 (symm (monotonicity @x8210 (= (fun_app$ ?x212 ?x4866) $x8671)) (= $x8671 (fun_app$ ?x212 ?x4866)))))
(let (($x6693 (<= (+ b_Infinity$ (* (- 1) (b_G$ (pair$ ?x4866 ?v0!20)))) 0)))
(let (($x11835 (not $x6693)))
(let ((?x4874 (b_G$ (pair$ ?x4866 ?v0!20))))
(let ((?x4875 (* (- 1) ?x4874)))
(let ((?x4876 (+ ?x4618 (* (- 1) (fun_app$c v_b_SP_G_1$ ?x4866)) ?x4875)))
(let (($x8645 (>= ?x4876 0)))
(let (($x4877 (= ?x4876 0)))
(let (($x4878 (not $x4877)))
(let (($x4879 (or $x4870 (not (fun_app$ v_b_Visited_G_1$ ?x4866)) $x4878)))
(let (($x4880 (not $x4879)))
(let (($x4865 (<= (+ b_Infinity$ (* (- 1) ?x4618)) 0)))
(let (($x8667 (not $x4865)))
(let ((@x8893 (hypothesis $x8567)))
(let ((@x8402 (lemma ((_ th-lemma arith farkas 1 -1 1) @x8893 (hypothesis $x4865) @x5730 false) (or $x8667 (not $x8567) $x2220))))
(let ((@x9038 (rewrite (= (or $x3834 (or $x2215 $x4865 $x4880)) (or $x3834 $x2215 $x4865 $x4880)))))
(let ((@x9039 (mp ((_ quant-inst ?v0!20) (or $x3834 (or $x2215 $x4865 $x4880))) @x9038 (or $x3834 $x2215 $x4865 $x4880))))
(let ((@x9273 (unit-resolution (unit-resolution @x9039 @x4406 (hypothesis $x2216) (or $x4865 $x4880)) (unit-resolution @x8402 @x8893 @x5730 $x8667) $x4880)))
(let ((@x11282 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x4878 $x8645)) (unit-resolution (def-axiom (or $x4879 $x4877)) @x9273 $x4877) $x8645)))
(let ((?x4867 (fun_app$c v_b_SP_G_1$ ?x4866)))
(let (($x5337 (>= ?x4867 0)))
(let ((@x11717 (unit-resolution ((_ th-lemma arith assign-bounds -1 -1 -1 -1) (or $x11835 (not $x8645) $x2220 (not $x8567) (not $x5337))) (unit-resolution ((_ quant-inst (?v1!7 ?v0!20)) (or $x3809 $x5337)) @x5502 $x5337) @x5730 @x8893 @x11282 $x11835)))
(let (($x9233 (<= ?x4876 0)))
(let ((@x11182 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x4878 $x9233)) (unit-resolution (def-axiom (or $x4879 $x4877)) @x9273 $x4877) $x9233)))
(let ((?x8643 (v_b_SP_G_2$ ?x4866)))
(let ((?x9203 (* (- 1) ?x8643)))
(let ((?x9103 (+ ?x2217 ?x4875 ?x9203)))
(let (($x10503 (>= ?x9103 0)))
(let (($x6233 (>= (+ ?x4867 ?x9203) 0)))
(let ((@x11833 (unit-resolution ((_ th-lemma arith assign-bounds 1 1 1) (or $x10503 (not $x6233) (not $x8645) (not $x8567))) (hypothesis $x8645) @x8893 (unit-resolution ((_ quant-inst (?v1!7 ?v0!20)) (or $x3939 $x6233)) @x8305 $x6233) $x10503)))
(let (($x10448 (<= (+ ?x2217 ?x9203) 0)))
(let (($x11011 (= ?x9103 0)))
(let (($x10912 (<= ?x9103 0)))
(let (($x10744 (or $x8672 $x6693 $x10912)))
(let (($x10746 (or $x3973 $x8672 $x6693 $x10912)))
(let (($x10750 (or $x3973 (or $x8672 $x6693 (>= (+ ?x4874 ?x8643 ?x2218) 0)))))
(let ((@x9876 (monotonicity (rewrite (= (+ ?x4874 ?x8643 ?x2218) (+ ?x2218 ?x4874 ?x8643))) (= (>= (+ ?x4874 ?x8643 ?x2218) 0) (>= (+ ?x2218 ?x4874 ?x8643) 0)))))
(let ((@x10867 (trans @x9876 (rewrite (= (>= (+ ?x2218 ?x4874 ?x8643) 0) $x10912)) (= (>= (+ ?x4874 ?x8643 ?x2218) 0) $x10912))))
(let ((@x10745 (monotonicity @x10867 (= (or $x8672 $x6693 (>= (+ ?x4874 ?x8643 ?x2218) 0)) $x10744))))
(let ((@x10734 (trans (monotonicity @x10745 (= $x10750 (or $x3973 $x10744))) (rewrite (= (or $x3973 $x10744) $x10746)) (= $x10750 $x10746))))
(let ((@x11838 (unit-resolution (unit-resolution (mp ((_ quant-inst ?v0!20 (?v1!7 ?v0!20)) $x10750) @x10734 $x10746) @x6205 $x10744) (hypothesis $x8671) (hypothesis $x11835) $x10912)))
(let ((@x11843 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x11011 (not $x10912) (not $x10503))) @x11833 @x11838 $x11011)))
(let (($x10804 (not $x11011)))
(let (($x11040 (or $x10448 $x8672 $x10804)))
(let (($x10301 (or $x3982 $x10448 $x8672 $x10804)))
(let (($x6994 (>= (+ ?x8643 ?x2218) 0)))
(let (($x10896 (or $x3982 (or $x6994 $x8672 (not (= (+ ?x8643 ?x2218 ?x4874) 0))))))
(let ((@x11010 (monotonicity (rewrite (= (+ ?x8643 ?x2218 ?x4874) (+ ?x2218 ?x4874 ?x8643))) (= (= (+ ?x8643 ?x2218 ?x4874) 0) (= (+ ?x2218 ?x4874 ?x8643) 0)))))
(let ((@x10803 (trans @x11010 (rewrite (= (= (+ ?x2218 ?x4874 ?x8643) 0) $x11011)) (= (= (+ ?x8643 ?x2218 ?x4874) 0) $x11011))))
(let ((@x10440 (monotonicity (rewrite (= (+ ?x8643 ?x2218) (+ ?x2218 ?x8643))) (= $x6994 (>= (+ ?x2218 ?x8643) 0)))))
(let ((@x10354 (trans @x10440 (rewrite (= (>= (+ ?x2218 ?x8643) 0) $x10448)) (= $x6994 $x10448))))
(let ((@x10595 (monotonicity @x10354 (monotonicity @x10803 (= (not (= (+ ?x8643 ?x2218 ?x4874) 0)) $x10804)) (= (or $x6994 $x8672 (not (= (+ ?x8643 ?x2218 ?x4874) 0))) $x11040))))
(let ((@x10685 (trans (monotonicity @x10595 (= $x10896 (or $x3982 $x11040))) (rewrite (= (or $x3982 $x11040) $x10301)) (= $x10896 $x10301))))
(let ((@x11846 (unit-resolution (unit-resolution (mp ((_ quant-inst (?v1!7 ?v0!20)) $x10896) @x10685 $x10301) @x11844 $x11040) @x11843 (hypothesis $x8671) $x10448)))
(let ((@x11850 (lemma ((_ th-lemma arith farkas -1 1 -1 1) @x11846 @x11833 (hypothesis $x9233) (hypothesis (not $x4870)) false) (or $x8672 (not $x9233) $x4870 $x3982 (not $x8645) (not $x8567) $x6693 $x3973))))
(let ((@x11185 (unit-resolution @x11850 @x11182 (hypothesis (not $x4870)) @x11844 @x11282 @x8893 @x11717 @x6205 $x8672)))
(let ((@x11550 (mp @x11185 (monotonicity @x11435 (= $x8672 (not (fun_app$ ?x212 ?x4866)))) (not (fun_app$ ?x212 ?x4866)))))
(let (($x11789 (fun_app$ ?x212 ?x4866)))
(let (($x4871 (fun_app$ v_b_Visited_G_1$ ?x4866)))
(let (($x11792 (or (= ?x4866 v_b_v_G_1$) $x4871)))
(let (($x11795 (= $x11789 $x11792)))
(let (($x11638 (or $x5105 $x11795)))
(let (($x11557 (= (or $x5105 (= $x11789 (ite (= ?x4866 v_b_v_G_1$) true $x4871))) $x11638)))
(let ((@x11797 (monotonicity (rewrite (= (ite (= ?x4866 v_b_v_G_1$) true $x4871) $x11792)) (= (= $x11789 (ite (= ?x4866 v_b_v_G_1$) true $x4871)) $x11795))))
(let ((@x11556 ((_ quant-inst v_b_Visited_G_1$ v_b_v_G_1$ true (?v1!7 ?v0!20)) (or $x5105 (= $x11789 (ite (= ?x4866 v_b_v_G_1$) true $x4871))))))
(let ((@x11621 (mp @x11556 (trans (monotonicity @x11797 $x11557) (rewrite (= $x11638 $x11638)) $x11557) $x11638)))
(let ((@x11379 (unit-resolution (def-axiom (or $x11792 (not $x4871))) (unit-resolution (def-axiom (or $x4879 $x4871)) @x9273 $x4871) $x11792)))
(let ((@x11588 (unit-resolution (def-axiom (or (not $x11795) $x11789 (not $x11792))) @x11379 (or (not $x11795) $x11789))))
(let ((@x11409 (unit-resolution (unit-resolution @x11588 (unit-resolution @x11621 @x3721 $x11795) $x11789) @x11550 false)))
(let ((@x9681 (unit-resolution (lemma @x11409 (or (not $x8567) $x4870 $x3982 $x3973 $x2220 $x2215)) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4625) $x8567)) @x10170 $x8567) (unit-resolution (def-axiom (or $x3985 $x3977)) @x8593 $x3977) (unit-resolution (def-axiom (or $x3985 $x3968)) @x8593 $x3968) @x5730 (unit-resolution (def-axiom (or $x3985 $x2216)) @x8593 $x2216) $x4870)))
(let ((@x9302 (unit-resolution @x8402 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4625) $x8567)) @x10170 $x8567) @x5730 $x8667)))
(let ((@x10155 (unit-resolution @x9039 @x4406 (unit-resolution (def-axiom (or $x3985 $x2216)) @x8593 $x2216) (or $x4865 $x4880))))
(let ((@x10236 (unit-resolution (def-axiom (or $x4879 (not $x4870))) (unit-resolution @x10155 @x9302 $x4880) @x9681 false)))
(let ((@x10357 (unit-resolution (lemma @x10236 (or $x3985 $x2220)) (unit-resolution (def-axiom (or $x3985 $x2221)) @x8593 $x2221) @x8593 false)))
(let ((@x8697 (unit-resolution (def-axiom (or $x3994 $x3085 $x3988)) (lemma @x10357 $x3985) (unit-resolution (def-axiom (or $x3997 $x3991)) @x10157 $x3991) $x3085)))
(let (($x2195 (not $x2194)))
(let (($x4939 (<= (+ b_Infinity$ (* (- 1) (b_G$ (pair$ v_b_v_G_1$ ?v0!19)))) 0)))
(let ((?x4936 (b_G$ (pair$ v_b_v_G_1$ ?v0!19))))
(let ((?x4520 (fun_app$c v_b_SP_G_1$ ?v0!19)))
(let ((?x4919 (* (- 1) ?x4520)))
(let (($x7104 (>= (+ ?x204 ?x4919 ?x4936) 0)))
(let (($x8037 (>= (+ ?x2191 (* (- 1) ?x4936)) 0)))
(let (($x4552 (= ?v1!18 v_b_v_G_1$)))
(let (($x4560 (fun_app$ v_b_Visited_G_1$ ?v1!18)))
(let (($x4584 (not $x4560)))
(let (($x3626 (not $x2202)))
(let ((@x9184 (hypothesis $x3626)))
(let (($x8491 (>= (+ ?x2198 (* (- 1) (fun_app$c v_b_SP_G_1$ ?v1!18))) 0)))
(let ((?x4539 (fun_app$c v_b_SP_G_1$ ?v1!18)))
(let (($x4537 (= ?x2198 ?x4539)))
(let ((@x8063 (mp ((_ quant-inst ?v1!18) (or $x3948 (or $x3065 $x4537))) (rewrite (= (or $x3948 (or $x3065 $x4537)) (or $x3948 $x3065 $x4537))) (or $x3948 $x3065 $x4537))))
(let ((@x10071 (unit-resolution @x8063 @x10489 (unit-resolution (def-axiom (or $x3080 $x2189)) (hypothesis $x3085) $x2189) $x4537)))
(let (($x9200 (<= (+ (v_b_SP_G_2$ ?v0!19) ?x4919) 0)))
(let (($x9219 (or $x3939 $x9200)))
(let ((@x6015 (monotonicity (rewrite (= (+ ?x4520 ?x2200) (+ ?x2200 ?x4520))) (= (>= (+ ?x4520 ?x2200) 0) (>= (+ ?x2200 ?x4520) 0)))))
(let ((@x9261 (trans @x6015 (rewrite (= (>= (+ ?x2200 ?x4520) 0) $x9200)) (= (>= (+ ?x4520 ?x2200) 0) $x9200))))
(let ((@x8768 (trans (monotonicity @x9261 (= (or $x3939 (>= (+ ?x4520 ?x2200) 0)) $x9219)) (rewrite (= $x9219 $x9219)) (= (or $x3939 (>= (+ ?x4520 ?x2200) 0)) $x9219))))
(let ((@x9207 (unit-resolution (mp ((_ quant-inst ?v0!19) (or $x3939 (>= (+ ?x4520 ?x2200) 0))) @x8768 $x9219) @x8305 $x9200)))
(let ((@x9209 ((_ th-lemma arith farkas 1 -1 -1 1) (hypothesis (>= (+ ?x2191 ?x4919 ?x4539) 0)) @x9207 @x9184 (hypothesis $x8491) false)))
(let ((@x9157 (lemma @x9209 (or (not (>= (+ ?x2191 ?x4919 ?x4539) 0)) $x2202 (not $x8491)))))
(let ((@x10062 (unit-resolution @x9157 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4537) $x8491)) @x10071 $x8491) @x9184 (not (>= (+ ?x2191 ?x4919 ?x4539) 0)))))
(let (($x8396 (>= (+ ?x2191 ?x4919 ?x4539) 0)))
(let (($x7250 (or $x3826 $x4584 $x2194 $x8396)))
(let (($x7254 (or $x3826 (or $x4584 $x2194 (>= (+ ?x2191 ?x4539 ?x4919) 0)))))
(let (($x7281 (= (or $x4584 $x2194 (>= (+ ?x2191 ?x4539 ?x4919) 0)) (or $x4584 $x2194 $x8396))))
(let ((@x7279 (monotonicity (rewrite (= (+ ?x2191 ?x4539 ?x4919) (+ ?x2191 ?x4919 ?x4539))) (= (>= (+ ?x2191 ?x4539 ?x4919) 0) $x8396))))
(let ((@x7262 (monotonicity (monotonicity @x7279 $x7281) (= $x7254 (or $x3826 (or $x4584 $x2194 $x8396))))))
(let ((@x7275 (trans @x7262 (rewrite (= (or $x3826 (or $x4584 $x2194 $x8396)) $x7250)) (= $x7254 $x7250))))
(let ((@x10063 (unit-resolution (mp ((_ quant-inst ?v0!19 ?v1!18) $x7254) @x7275 $x7250) @x6172 (unit-resolution (def-axiom (or $x3080 $x2195)) (hypothesis $x3085) $x2195) (or $x4584 $x8396))))
(let (($x8064 (or $x4552 $x4560)))
(let (($x4569 (fun_app$ ?x212 ?v1!18)))
(let (($x7915 (= $x4569 $x8064)))
(let (($x5802 (or $x5105 $x7915)))
(let ((@x7808 (monotonicity (rewrite (= (ite $x4552 true $x4560) $x8064)) (= (= $x4569 (ite $x4552 true $x4560)) $x7915))))
(let ((@x8409 (monotonicity @x7808 (= (or $x5105 (= $x4569 (ite $x4552 true $x4560))) $x5802))))
(let ((@x8439 (trans @x8409 (rewrite (= $x5802 $x5802)) (= (or $x5105 (= $x4569 (ite $x4552 true $x4560))) $x5802))))
(let ((@x9247 (mp ((_ quant-inst v_b_Visited_G_1$ v_b_v_G_1$ true ?v1!18) (or $x5105 (= $x4569 (ite $x4552 true $x4560)))) @x8439 $x5802)))
(let ((@x10467 (mp (unit-resolution (def-axiom (or $x3080 $x2189)) (hypothesis $x3085) $x2189) (symm (monotonicity @x8210 (= $x4569 $x2189)) (= $x2189 $x4569)) $x4569)))
(let ((@x10247 (unit-resolution (def-axiom (or (not $x7915) (not $x4569) $x8064)) @x10467 (unit-resolution @x9247 @x3721 $x7915) $x8064)))
(let ((@x10216 (unit-resolution (def-axiom (or (not $x8064) $x4552 $x4560)) @x10247 (unit-resolution @x10063 @x10062 $x4584) $x4552)))
(let ((@x10847 (monotonicity @x10216 (= (pair$ ?v1!18 ?v0!19) (pair$ v_b_v_G_1$ ?v0!19)))))
(let ((@x10848 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not (= ?x2191 ?x4936)) $x8037)) (monotonicity @x10847 (= ?x2191 ?x4936)) $x8037)))
(let (($x8038 (>= (+ ?x2198 ?x3395) 0)))
(let ((@x10005 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not (= ?x2198 ?x3394)) $x8038)) (monotonicity @x10216 (= ?x2198 ?x3394)) $x8038)))
(let ((@x8468 ((_ th-lemma arith farkas -1 1 -1 -1 1 1) (hypothesis $x8038) @x8936 (hypothesis $x8037) (hypothesis $x7104) @x9207 @x9184 false)))
(let ((@x9577 (unit-resolution (lemma @x8468 (or (not $x7104) (not $x8038) (not $x8037) $x2202)) @x10005 @x9184 @x10848 (not $x7104))))
(let ((@x8883 ((_ th-lemma arith farkas -1 1 -1 -1 1) (hypothesis $x8038) @x8936 (hypothesis $x8037) (hypothesis (>= (+ ?x204 ?x2200 ?x4936) 0)) @x9184 false)))
(let ((@x9326 (lemma @x8883 (or (not (>= (+ ?x204 ?x2200 ?x4936) 0)) (not $x8038) (not $x8037) $x2202))))
(let ((@x9398 (unit-resolution @x9326 @x10848 @x9184 @x10005 (not (>= (+ ?x204 ?x2200 ?x4936) 0)))))
(let ((?x7186 (+ ?x204 ?x2200 ?x4936)))
(let (($x7258 (>= ?x7186 0)))
(let ((@x8781 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not (= ?x7186 0)) $x7258)) @x9398 (not (= ?x7186 0)))))
(let (($x7111 (= ?x7186 0)))
(let (($x7222 (or $x4939 $x7104 $x7111)))
(let (($x7201 (or $x3923 $x4939 $x7104 $x7111)))
(let (($x4941 (<= (+ ?x4520 ?x1520 (* (- 1) ?x4936)) 0)))
(let (($x7208 (or $x3923 (or $x4939 $x4941 (= (+ ?x204 ?x4936 ?x2200) 0)))))
(let ((@x7190 (monotonicity (rewrite (= (+ ?x204 ?x4936 ?x2200) ?x7186)) (= (= (+ ?x204 ?x4936 ?x2200) 0) $x7111))))
(let ((@x7077 (rewrite (= (+ ?x4520 ?x1520 (* (- 1) ?x4936)) (+ ?x1520 ?x4520 (* (- 1) ?x4936))))))
(let ((@x7001 (monotonicity @x7077 (= $x4941 (<= (+ ?x1520 ?x4520 (* (- 1) ?x4936)) 0)))))
(let ((@x7110 (trans @x7001 (rewrite (= (<= (+ ?x1520 ?x4520 (* (- 1) ?x4936)) 0) $x7104)) (= $x4941 $x7104))))
(let ((@x7200 (monotonicity @x7110 @x7190 (= (or $x4939 $x4941 (= (+ ?x204 ?x4936 ?x2200) 0)) $x7222))))
(let ((@x7230 (trans (monotonicity @x7200 (= $x7208 (or $x3923 $x7222))) (rewrite (= (or $x3923 $x7222) $x7201)) (= $x7208 $x7201))))
(let ((@x8782 (unit-resolution (unit-resolution (mp ((_ quant-inst ?v0!19) $x7208) @x7230 $x7201) @x8165 $x7222) @x8781 @x9577 $x4939)))
(let ((@x7246 ((_ th-lemma arith farkas 1 -1 1) @x10848 @x8782 (unit-resolution (def-axiom (or $x3080 $x2195)) (hypothesis $x3085) $x2195) false)))
(unit-resolution (lemma @x7246 (or $x3080 $x2202)) (unit-resolution (def-axiom (or $x3080 $x3626)) @x8697 $x3626) @x8697 false

